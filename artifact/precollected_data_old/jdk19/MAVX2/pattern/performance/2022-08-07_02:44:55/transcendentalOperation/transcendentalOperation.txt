# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarACOS

# Run progress: 0.00% complete, ETA 00:00:01
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 3.787 s/op
# Warmup Iteration   2: 3.779 s/op
# Warmup Iteration   3: 3.758 s/op
# Warmup Iteration   4: 3.762 s/op
# Warmup Iteration   5: 3.764 s/op
# Warmup Iteration   6: 3.764 s/op
# Warmup Iteration   7: 3.764 s/op
# Warmup Iteration   8: 3.763 s/op
# Warmup Iteration   9: 3.756 s/op
# Warmup Iteration  10: 3.763 s/op
Iteration   1: 3.764 s/op
Iteration   2: 3.775 s/op
Iteration   3: 3.768 s/op
Iteration   4: 3.763 s/op
Iteration   5: 3.766 s/op
Iteration   6: 3.774 s/op
Iteration   7: 3.767 s/op
Iteration   8: 3.779 s/op
Iteration   9: 3.760 s/op
Iteration  10: 3.777 s/op

# Run progress: 1.04% complete, ETA 02:01:49
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 3.800 s/op
# Warmup Iteration   2: 3.787 s/op
# Warmup Iteration   3: 3.769 s/op
# Warmup Iteration   4: 3.765 s/op
# Warmup Iteration   5: 3.767 s/op
# Warmup Iteration   6: 3.772 s/op
# Warmup Iteration   7: 3.768 s/op
# Warmup Iteration   8: 3.763 s/op
# Warmup Iteration   9: 3.771 s/op
# Warmup Iteration  10: 3.791 s/op
Iteration   1: 3.806 s/op
Iteration   2: 3.795 s/op
Iteration   3: 3.798 s/op
Iteration   4: 3.807 s/op
Iteration   5: 3.809 s/op
Iteration   6: 3.827 s/op
Iteration   7: 3.811 s/op
Iteration   8: 3.817 s/op
Iteration   9: 3.818 s/op
Iteration  10: 3.818 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarACOS":
  N = 20
  mean =      3.790 ±(99.9%) 0.020 s/op

  Histogram, s/op:
    [3.750, 3.755) = 0 
    [3.755, 3.760) = 1 
    [3.760, 3.765) = 2 
    [3.765, 3.770) = 3 
    [3.770, 3.775) = 2 
    [3.775, 3.780) = 2 
    [3.780, 3.785) = 0 
    [3.785, 3.790) = 0 
    [3.790, 3.795) = 0 
    [3.795, 3.800) = 2 
    [3.800, 3.805) = 0 
    [3.805, 3.810) = 3 
    [3.810, 3.815) = 1 
    [3.815, 3.820) = 3 
    [3.820, 3.825) = 0 
    [3.825, 3.830) = 1 

  Percentiles, s/op:
      p(0.0000) =      3.760 s/op
     p(50.0000) =      3.787 s/op
     p(90.0000) =      3.818 s/op
     p(95.0000) =      3.827 s/op
     p(99.0000) =      3.827 s/op
     p(99.9000) =      3.827 s/op
     p(99.9900) =      3.827 s/op
     p(99.9990) =      3.827 s/op
     p(99.9999) =      3.827 s/op
    p(100.0000) =      3.827 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarASIN

# Run progress: 2.08% complete, ETA 02:00:54
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 4.196 s/op
# Warmup Iteration   2: 4.190 s/op
# Warmup Iteration   3: 4.181 s/op
# Warmup Iteration   4: 4.178 s/op
# Warmup Iteration   5: 4.177 s/op
# Warmup Iteration   6: 4.193 s/op
# Warmup Iteration   7: 4.190 s/op
# Warmup Iteration   8: 4.185 s/op
# Warmup Iteration   9: 4.197 s/op
# Warmup Iteration  10: 4.177 s/op
Iteration   1: 4.179 s/op
Iteration   2: 4.168 s/op
Iteration   3: 4.180 s/op
Iteration   4: 4.159 s/op
Iteration   5: 4.178 s/op
Iteration   6: 4.178 s/op
Iteration   7: 4.176 s/op
Iteration   8: 4.190 s/op
Iteration   9: 4.191 s/op
Iteration  10: 4.195 s/op

# Run progress: 3.13% complete, ETA 02:03:47
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 4.118 s/op
# Warmup Iteration   2: 4.092 s/op
# Warmup Iteration   3: 4.089 s/op
# Warmup Iteration   4: 4.103 s/op
# Warmup Iteration   5: 4.105 s/op
# Warmup Iteration   6: 4.109 s/op
# Warmup Iteration   7: 4.110 s/op
# Warmup Iteration   8: 4.103 s/op
# Warmup Iteration   9: 4.110 s/op
# Warmup Iteration  10: 4.107 s/op
Iteration   1: 4.098 s/op
Iteration   2: 4.105 s/op
Iteration   3: 4.102 s/op
Iteration   4: 4.101 s/op
Iteration   5: 4.117 s/op
Iteration   6: 4.106 s/op
Iteration   7: 4.106 s/op
Iteration   8: 4.103 s/op
Iteration   9: 4.105 s/op
Iteration  10: 4.103 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarASIN":
  N = 20
  mean =      4.142 ±(99.9%) 0.034 s/op

  Histogram, s/op:
    [4.090, 4.100) = 1 
    [4.100, 4.110) = 8 
    [4.110, 4.120) = 1 
    [4.120, 4.130) = 0 
    [4.130, 4.140) = 0 
    [4.140, 4.150) = 0 
    [4.150, 4.160) = 1 
    [4.160, 4.170) = 1 
    [4.170, 4.180) = 5 
    [4.180, 4.190) = 0 
    [4.190, 4.200) = 3 

  Percentiles, s/op:
      p(0.0000) =      4.098 s/op
     p(50.0000) =      4.138 s/op
     p(90.0000) =      4.191 s/op
     p(95.0000) =      4.195 s/op
     p(99.0000) =      4.195 s/op
     p(99.9000) =      4.195 s/op
     p(99.9900) =      4.195 s/op
     p(99.9990) =      4.195 s/op
     p(99.9999) =      4.195 s/op
    p(100.0000) =      4.195 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarATAN

# Run progress: 4.17% complete, ETA 02:03:54
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.953 s/op
# Warmup Iteration   2: 0.957 s/op
# Warmup Iteration   3: 0.945 s/op
# Warmup Iteration   4: 0.948 s/op
# Warmup Iteration   5: 0.945 s/op
# Warmup Iteration   6: 0.941 s/op
# Warmup Iteration   7: 0.942 s/op
# Warmup Iteration   8: 0.942 s/op
# Warmup Iteration   9: 0.945 s/op
# Warmup Iteration  10: 0.945 s/op
Iteration   1: 0.945 s/op
Iteration   2: 0.946 s/op
Iteration   3: 0.948 s/op
Iteration   4: 0.948 s/op
Iteration   5: 0.956 s/op
Iteration   6: 0.931 s/op
Iteration   7: 0.930 s/op
Iteration   8: 0.929 s/op
Iteration   9: 0.927 s/op
Iteration  10: 0.930 s/op

# Run progress: 5.21% complete, ETA 01:44:14
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.940 s/op
# Warmup Iteration   2: 0.940 s/op
# Warmup Iteration   3: 0.928 s/op
# Warmup Iteration   4: 0.930 s/op
# Warmup Iteration   5: 0.933 s/op
# Warmup Iteration   6: 0.933 s/op
# Warmup Iteration   7: 0.933 s/op
# Warmup Iteration   8: 0.932 s/op
# Warmup Iteration   9: 0.929 s/op
# Warmup Iteration  10: 0.929 s/op
Iteration   1: 0.931 s/op
Iteration   2: 0.930 s/op
Iteration   3: 0.931 s/op
Iteration   4: 0.933 s/op
Iteration   5: 0.935 s/op
Iteration   6: 0.932 s/op
Iteration   7: 0.933 s/op
Iteration   8: 0.931 s/op
Iteration   9: 0.930 s/op
Iteration  10: 0.934 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarATAN":
  N = 20
  mean =      0.936 ±(99.9%) 0.007 s/op

  Histogram, s/op:
    [0.920, 0.923) = 0 
    [0.923, 0.925) = 0 
    [0.925, 0.928) = 1 
    [0.928, 0.930) = 5 
    [0.930, 0.933) = 5 
    [0.933, 0.935) = 3 
    [0.935, 0.938) = 1 
    [0.938, 0.940) = 0 
    [0.940, 0.943) = 0 
    [0.943, 0.945) = 1 
    [0.945, 0.948) = 1 
    [0.948, 0.950) = 2 
    [0.950, 0.953) = 0 
    [0.953, 0.955) = 0 
    [0.955, 0.958) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.927 s/op
     p(50.0000) =      0.932 s/op
     p(90.0000) =      0.948 s/op
     p(95.0000) =      0.956 s/op
     p(99.0000) =      0.956 s/op
     p(99.9000) =      0.956 s/op
     p(99.9900) =      0.956 s/op
     p(99.9990) =      0.956 s/op
     p(99.9999) =      0.956 s/op
    p(100.0000) =      0.956 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarATAN2

# Run progress: 6.25% complete, ETA 01:30:57
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 1.674 s/op
# Warmup Iteration   2: 1.671 s/op
# Warmup Iteration   3: 1.669 s/op
# Warmup Iteration   4: 1.674 s/op
# Warmup Iteration   5: 1.669 s/op
# Warmup Iteration   6: 1.678 s/op
# Warmup Iteration   7: 1.678 s/op
# Warmup Iteration   8: 1.668 s/op
# Warmup Iteration   9: 1.674 s/op
# Warmup Iteration  10: 1.675 s/op
Iteration   1: 1.665 s/op
Iteration   2: 1.668 s/op
Iteration   3: 1.673 s/op
Iteration   4: 1.674 s/op
Iteration   5: 1.674 s/op
Iteration   6: 1.676 s/op
Iteration   7: 1.663 s/op
Iteration   8: 1.664 s/op
Iteration   9: 1.668 s/op
Iteration  10: 1.664 s/op

# Run progress: 7.29% complete, ETA 01:24:30
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 1.643 s/op
# Warmup Iteration   2: 1.640 s/op
# Warmup Iteration   3: 1.643 s/op
# Warmup Iteration   4: 1.642 s/op
# Warmup Iteration   5: 1.644 s/op
# Warmup Iteration   6: 1.639 s/op
# Warmup Iteration   7: 1.637 s/op
# Warmup Iteration   8: 1.641 s/op
# Warmup Iteration   9: 1.642 s/op
# Warmup Iteration  10: 1.643 s/op
Iteration   1: 1.644 s/op
Iteration   2: 1.647 s/op
Iteration   3: 1.648 s/op
Iteration   4: 1.643 s/op
Iteration   5: 1.646 s/op
Iteration   6: 1.643 s/op
Iteration   7: 1.642 s/op
Iteration   8: 1.641 s/op
Iteration   9: 1.640 s/op
Iteration  10: 1.641 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarATAN2":
  N = 20
  mean =      1.656 ±(99.9%) 0.012 s/op

  Histogram, s/op:
    [1.640, 1.643) = 4 
    [1.643, 1.645) = 3 
    [1.645, 1.648) = 2 
    [1.648, 1.650) = 1 
    [1.650, 1.653) = 0 
    [1.653, 1.655) = 0 
    [1.655, 1.658) = 0 
    [1.658, 1.660) = 0 
    [1.660, 1.663) = 0 
    [1.663, 1.665) = 3 
    [1.665, 1.668) = 1 
    [1.668, 1.670) = 2 
    [1.670, 1.673) = 0 
    [1.673, 1.675) = 3 
    [1.675, 1.678) = 1 

  Percentiles, s/op:
      p(0.0000) =      1.640 s/op
     p(50.0000) =      1.656 s/op
     p(90.0000) =      1.674 s/op
     p(95.0000) =      1.676 s/op
     p(99.0000) =      1.676 s/op
     p(99.9000) =      1.676 s/op
     p(99.9900) =      1.676 s/op
     p(99.9990) =      1.676 s/op
     p(99.9999) =      1.676 s/op
    p(100.0000) =      1.676 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarCBRT

# Run progress: 8.33% complete, ETA 01:19:25
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.344 s/op
# Warmup Iteration   2: 0.352 s/op
# Warmup Iteration   3: 0.358 s/op
# Warmup Iteration   4: 0.363 s/op
# Warmup Iteration   5: 0.363 s/op
# Warmup Iteration   6: 0.361 s/op
# Warmup Iteration   7: 0.364 s/op
# Warmup Iteration   8: 0.363 s/op
# Warmup Iteration   9: 0.363 s/op
# Warmup Iteration  10: 0.362 s/op
Iteration   1: 0.361 s/op
Iteration   2: 0.360 s/op
Iteration   3: 0.359 s/op
Iteration   4: 0.364 s/op
Iteration   5: 0.362 s/op
Iteration   6: 0.362 s/op
Iteration   7: 0.364 s/op
Iteration   8: 0.365 s/op
Iteration   9: 0.363 s/op
Iteration  10: 0.366 s/op

# Run progress: 9.38% complete, ETA 01:11:12
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.344 s/op
# Warmup Iteration   2: 0.363 s/op
# Warmup Iteration   3: 0.361 s/op
# Warmup Iteration   4: 0.364 s/op
# Warmup Iteration   5: 0.364 s/op
# Warmup Iteration   6: 0.364 s/op
# Warmup Iteration   7: 0.363 s/op
# Warmup Iteration   8: 0.361 s/op
# Warmup Iteration   9: 0.363 s/op
# Warmup Iteration  10: 0.366 s/op
Iteration   1: 0.360 s/op
Iteration   2: 0.362 s/op
Iteration   3: 0.364 s/op
Iteration   4: 0.362 s/op
Iteration   5: 0.360 s/op
Iteration   6: 0.363 s/op
Iteration   7: 0.363 s/op
Iteration   8: 0.360 s/op
Iteration   9: 0.363 s/op
Iteration  10: 0.362 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarCBRT":
  N = 20
  mean =      0.362 ±(99.9%) 0.002 s/op

  Histogram, s/op:
    [0.359, 0.360) = 1 
    [0.360, 0.360) = 3 
    [0.360, 0.361) = 1 
    [0.361, 0.361) = 1 
    [0.361, 0.362) = 0 
    [0.362, 0.362) = 4 
    [0.362, 0.363) = 1 
    [0.363, 0.363) = 3 
    [0.363, 0.364) = 1 
    [0.364, 0.364) = 0 
    [0.364, 0.365) = 3 
    [0.365, 0.365) = 1 
    [0.365, 0.366) = 0 
    [0.366, 0.366) = 0 
    [0.366, 0.367) = 1 
    [0.367, 0.367) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.359 s/op
     p(50.0000) =      0.362 s/op
     p(90.0000) =      0.365 s/op
     p(95.0000) =      0.366 s/op
     p(99.0000) =      0.366 s/op
     p(99.9000) =      0.366 s/op
     p(99.9900) =      0.366 s/op
     p(99.9990) =      0.366 s/op
     p(99.9999) =      0.366 s/op
    p(100.0000) =      0.366 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarCOS

# Run progress: 10.42% complete, ETA 01:04:36
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.368 s/op
# Warmup Iteration   2: 0.367 s/op
# Warmup Iteration   3: 0.360 s/op
# Warmup Iteration   4: 0.360 s/op
# Warmup Iteration   5: 0.391 s/op
# Warmup Iteration   6: 0.365 s/op
# Warmup Iteration   7: 0.359 s/op
# Warmup Iteration   8: 0.362 s/op
# Warmup Iteration   9: 0.361 s/op
# Warmup Iteration  10: 0.354 s/op
Iteration   1: 0.357 s/op
Iteration   2: 0.358 s/op
Iteration   3: 0.354 s/op
Iteration   4: 0.355 s/op
Iteration   5: 0.356 s/op
Iteration   6: 0.355 s/op
Iteration   7: 0.355 s/op
Iteration   8: 0.356 s/op
Iteration   9: 0.356 s/op
Iteration  10: 0.353 s/op

# Run progress: 11.46% complete, ETA 00:59:10
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.382 s/op
# Warmup Iteration   2: 0.380 s/op
# Warmup Iteration   3: 0.374 s/op
# Warmup Iteration   4: 0.370 s/op
# Warmup Iteration   5: 0.372 s/op
# Warmup Iteration   6: 0.371 s/op
# Warmup Iteration   7: 0.370 s/op
# Warmup Iteration   8: 0.369 s/op
# Warmup Iteration   9: 0.371 s/op
# Warmup Iteration  10: 0.371 s/op
Iteration   1: 0.371 s/op
Iteration   2: 0.369 s/op
Iteration   3: 0.370 s/op
Iteration   4: 0.371 s/op
Iteration   5: 0.368 s/op
Iteration   6: 0.368 s/op
Iteration   7: 0.370 s/op
Iteration   8: 0.369 s/op
Iteration   9: 0.368 s/op
Iteration  10: 0.368 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarCOS":
  N = 20
  mean =      0.362 ±(99.9%) 0.006 s/op

  Histogram, s/op:
    [0.350, 0.353) = 0 
    [0.353, 0.355) = 3 
    [0.355, 0.358) = 6 
    [0.358, 0.360) = 1 
    [0.360, 0.363) = 0 
    [0.363, 0.365) = 0 
    [0.365, 0.368) = 0 
    [0.368, 0.370) = 7 
    [0.370, 0.373) = 3 
    [0.373, 0.375) = 0 
    [0.375, 0.378) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.353 s/op
     p(50.0000) =      0.363 s/op
     p(90.0000) =      0.371 s/op
     p(95.0000) =      0.371 s/op
     p(99.0000) =      0.371 s/op
     p(99.9000) =      0.371 s/op
     p(99.9900) =      0.371 s/op
     p(99.9990) =      0.371 s/op
     p(99.9999) =      0.371 s/op
    p(100.0000) =      0.371 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarCOSH

# Run progress: 12.50% complete, ETA 00:54:39
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 1.588 s/op
# Warmup Iteration   2: 1.589 s/op
# Warmup Iteration   3: 1.574 s/op
# Warmup Iteration   4: 1.573 s/op
# Warmup Iteration   5: 1.572 s/op
# Warmup Iteration   6: 1.576 s/op
# Warmup Iteration   7: 1.576 s/op
# Warmup Iteration   8: 1.573 s/op
# Warmup Iteration   9: 1.577 s/op
# Warmup Iteration  10: 1.575 s/op
Iteration   1: 1.575 s/op
Iteration   2: 1.574 s/op
Iteration   3: 1.573 s/op
Iteration   4: 1.576 s/op
Iteration   5: 1.573 s/op
Iteration   6: 1.576 s/op
Iteration   7: 1.571 s/op
Iteration   8: 1.573 s/op
Iteration   9: 1.574 s/op
Iteration  10: 1.574 s/op

# Run progress: 13.54% complete, ETA 00:53:22
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 1.613 s/op
# Warmup Iteration   2: 1.586 s/op
# Warmup Iteration   3: 1.573 s/op
# Warmup Iteration   4: 1.577 s/op
# Warmup Iteration   5: 1.576 s/op
# Warmup Iteration   6: 1.576 s/op
# Warmup Iteration   7: 1.583 s/op
# Warmup Iteration   8: 1.578 s/op
# Warmup Iteration   9: 1.580 s/op
# Warmup Iteration  10: 1.580 s/op
Iteration   1: 1.579 s/op
Iteration   2: 1.580 s/op
Iteration   3: 1.576 s/op
Iteration   4: 1.580 s/op
Iteration   5: 1.579 s/op
Iteration   6: 1.582 s/op
Iteration   7: 1.582 s/op
Iteration   8: 1.582 s/op
Iteration   9: 1.584 s/op
Iteration  10: 1.583 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarCOSH":
  N = 20
  mean =      1.577 ±(99.9%) 0.003 s/op

  Histogram, s/op:
    [1.570, 1.571) = 0 
    [1.571, 1.573) = 1 
    [1.573, 1.574) = 4 
    [1.574, 1.575) = 3 
    [1.575, 1.576) = 1 
    [1.576, 1.578) = 2 
    [1.578, 1.579) = 0 
    [1.579, 1.580) = 3 
    [1.580, 1.581) = 1 
    [1.581, 1.583) = 3 
    [1.583, 1.584) = 2 
    [1.584, 1.585) = 0 
    [1.585, 1.586) = 0 
    [1.586, 1.588) = 0 
    [1.588, 1.589) = 0 
    [1.589, 1.590) = 0 

  Percentiles, s/op:
      p(0.0000) =      1.571 s/op
     p(50.0000) =      1.576 s/op
     p(90.0000) =      1.583 s/op
     p(95.0000) =      1.583 s/op
     p(99.0000) =      1.584 s/op
     p(99.9000) =      1.584 s/op
     p(99.9900) =      1.584 s/op
     p(99.9990) =      1.584 s/op
     p(99.9999) =      1.584 s/op
    p(100.0000) =      1.584 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarEXP

# Run progress: 14.58% complete, ETA 00:52:11
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.232 s/op
# Warmup Iteration   2: 0.231 s/op
# Warmup Iteration   3: 0.232 s/op
# Warmup Iteration   4: 0.232 s/op
# Warmup Iteration   5: 0.233 s/op
# Warmup Iteration   6: 0.229 s/op
# Warmup Iteration   7: 0.235 s/op
# Warmup Iteration   8: 0.229 s/op
# Warmup Iteration   9: 0.233 s/op
# Warmup Iteration  10: 0.228 s/op
Iteration   1: 0.234 s/op
Iteration   2: 0.229 s/op
Iteration   3: 0.231 s/op
Iteration   4: 0.230 s/op
Iteration   5: 0.230 s/op
Iteration   6: 0.230 s/op
Iteration   7: 0.232 s/op
Iteration   8: 0.232 s/op
Iteration   9: 0.227 s/op
Iteration  10: 0.233 s/op

# Run progress: 15.63% complete, ETA 00:48:40
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.237 s/op
# Warmup Iteration   2: 0.238 s/op
# Warmup Iteration   3: 0.234 s/op
# Warmup Iteration   4: 0.236 s/op
# Warmup Iteration   5: 0.232 s/op
# Warmup Iteration   6: 0.236 s/op
# Warmup Iteration   7: 0.235 s/op
# Warmup Iteration   8: 0.237 s/op
# Warmup Iteration   9: 0.233 s/op
# Warmup Iteration  10: 0.236 s/op
Iteration   1: 0.234 s/op
Iteration   2: 0.235 s/op
Iteration   3: 0.235 s/op
Iteration   4: 0.234 s/op
Iteration   5: 0.234 s/op
Iteration   6: 0.234 s/op
Iteration   7: 0.235 s/op
Iteration   8: 0.232 s/op
Iteration   9: 0.236 s/op
Iteration  10: 0.232 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarEXP":
  N = 20
  mean =      0.232 ±(99.9%) 0.002 s/op

  Histogram, s/op:
    [0.226, 0.227) = 1 
    [0.227, 0.228) = 0 
    [0.228, 0.229) = 1 
    [0.229, 0.230) = 3 
    [0.230, 0.231) = 0 
    [0.231, 0.232) = 4 
    [0.232, 0.233) = 2 
    [0.233, 0.234) = 2 
    [0.234, 0.235) = 4 
    [0.235, 0.236) = 3 

  Percentiles, s/op:
      p(0.0000) =      0.227 s/op
     p(50.0000) =      0.232 s/op
     p(90.0000) =      0.235 s/op
     p(95.0000) =      0.236 s/op
     p(99.0000) =      0.236 s/op
     p(99.9000) =      0.236 s/op
     p(99.9900) =      0.236 s/op
     p(99.9990) =      0.236 s/op
     p(99.9999) =      0.236 s/op
    p(100.0000) =      0.236 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarEXPM1

# Run progress: 16.67% complete, ETA 00:45:35
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.658 s/op
# Warmup Iteration   2: 0.652 s/op
# Warmup Iteration   3: 0.633 s/op
# Warmup Iteration   4: 0.634 s/op
# Warmup Iteration   5: 0.631 s/op
# Warmup Iteration   6: 0.631 s/op
# Warmup Iteration   7: 0.632 s/op
# Warmup Iteration   8: 0.633 s/op
# Warmup Iteration   9: 0.633 s/op
# Warmup Iteration  10: 0.639 s/op
Iteration   1: 0.637 s/op
Iteration   2: 0.638 s/op
Iteration   3: 0.634 s/op
Iteration   4: 0.634 s/op
Iteration   5: 0.636 s/op
Iteration   6: 0.636 s/op
Iteration   7: 0.631 s/op
Iteration   8: 0.638 s/op
Iteration   9: 0.633 s/op
Iteration  10: 0.631 s/op

# Run progress: 17.71% complete, ETA 00:43:28
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.661 s/op
# Warmup Iteration   2: 0.660 s/op
# Warmup Iteration   3: 0.640 s/op
# Warmup Iteration   4: 0.639 s/op
# Warmup Iteration   5: 0.634 s/op
# Warmup Iteration   6: 0.640 s/op
# Warmup Iteration   7: 0.639 s/op
# Warmup Iteration   8: 0.639 s/op
# Warmup Iteration   9: 0.643 s/op
# Warmup Iteration  10: 0.646 s/op
Iteration   1: 0.647 s/op
Iteration   2: 0.651 s/op
Iteration   3: 0.655 s/op
Iteration   4: 0.653 s/op
Iteration   5: 0.651 s/op
Iteration   6: 0.653 s/op
Iteration   7: 0.653 s/op
Iteration   8: 0.654 s/op
Iteration   9: 0.653 s/op
Iteration  10: 0.653 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarEXPM1":
  N = 20
  mean =      0.644 ±(99.9%) 0.008 s/op

  Histogram, s/op:
    [0.630, 0.633) = 2 
    [0.633, 0.635) = 3 
    [0.635, 0.638) = 3 
    [0.638, 0.640) = 2 
    [0.640, 0.643) = 0 
    [0.643, 0.645) = 0 
    [0.645, 0.648) = 1 
    [0.648, 0.650) = 0 
    [0.650, 0.653) = 2 
    [0.653, 0.655) = 6 
    [0.655, 0.658) = 1 
    [0.658, 0.660) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.631 s/op
     p(50.0000) =      0.642 s/op
     p(90.0000) =      0.654 s/op
     p(95.0000) =      0.655 s/op
     p(99.0000) =      0.655 s/op
     p(99.9000) =      0.655 s/op
     p(99.9900) =      0.655 s/op
     p(99.9990) =      0.655 s/op
     p(99.9999) =      0.655 s/op
    p(100.0000) =      0.655 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarHYPOT

# Run progress: 18.75% complete, ETA 00:41:35
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.497 s/op
# Warmup Iteration   2: 0.500 s/op
# Warmup Iteration   3: 0.486 s/op
# Warmup Iteration   4: 0.488 s/op
# Warmup Iteration   5: 0.485 s/op
# Warmup Iteration   6: 0.487 s/op
# Warmup Iteration   7: 0.485 s/op
# Warmup Iteration   8: 0.487 s/op
# Warmup Iteration   9: 0.484 s/op
# Warmup Iteration  10: 0.488 s/op
Iteration   1: 0.486 s/op
Iteration   2: 0.487 s/op
Iteration   3: 0.488 s/op
Iteration   4: 0.491 s/op
Iteration   5: 0.486 s/op
Iteration   6: 0.489 s/op
Iteration   7: 0.484 s/op
Iteration   8: 0.486 s/op
Iteration   9: 0.483 s/op
Iteration  10: 0.485 s/op

# Run progress: 19.79% complete, ETA 00:39:39
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.488 s/op
# Warmup Iteration   2: 0.487 s/op
# Warmup Iteration   3: 0.475 s/op
# Warmup Iteration   4: 0.483 s/op
# Warmup Iteration   5: 0.489 s/op
# Warmup Iteration   6: 0.487 s/op
# Warmup Iteration   7: 0.489 s/op
# Warmup Iteration   8: 0.489 s/op
# Warmup Iteration   9: 0.489 s/op
# Warmup Iteration  10: 0.487 s/op
Iteration   1: 0.490 s/op
Iteration   2: 0.488 s/op
Iteration   3: 0.488 s/op
Iteration   4: 0.488 s/op
Iteration   5: 0.489 s/op
Iteration   6: 0.489 s/op
Iteration   7: 0.490 s/op
Iteration   8: 0.489 s/op
Iteration   9: 0.489 s/op
Iteration  10: 0.489 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarHYPOT":
  N = 20
  mean =      0.488 ±(99.9%) 0.002 s/op

  Histogram, s/op:
    [0.483, 0.484) = 1 
    [0.484, 0.484) = 1 
    [0.484, 0.485) = 0 
    [0.485, 0.485) = 0 
    [0.485, 0.486) = 1 
    [0.486, 0.486) = 1 
    [0.486, 0.487) = 2 
    [0.487, 0.487) = 0 
    [0.487, 0.488) = 1 
    [0.488, 0.488) = 2 
    [0.488, 0.489) = 2 
    [0.489, 0.489) = 4 
    [0.489, 0.490) = 2 
    [0.490, 0.490) = 0 
    [0.490, 0.491) = 2 
    [0.491, 0.491) = 0 
    [0.491, 0.492) = 1 
    [0.492, 0.492) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.483 s/op
     p(50.0000) =      0.488 s/op
     p(90.0000) =      0.490 s/op
     p(95.0000) =      0.491 s/op
     p(99.0000) =      0.491 s/op
     p(99.9000) =      0.491 s/op
     p(99.9900) =      0.491 s/op
     p(99.9990) =      0.491 s/op
     p(99.9999) =      0.491 s/op
    p(100.0000) =      0.491 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarLOG

# Run progress: 20.83% complete, ETA 00:37:54
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.254 s/op
# Warmup Iteration   2: 0.254 s/op
# Warmup Iteration   3: 0.250 s/op
# Warmup Iteration   4: 0.252 s/op
# Warmup Iteration   5: 0.250 s/op
# Warmup Iteration   6: 0.249 s/op
# Warmup Iteration   7: 0.249 s/op
# Warmup Iteration   8: 0.252 s/op
# Warmup Iteration   9: 0.250 s/op
# Warmup Iteration  10: 0.249 s/op
Iteration   1: 0.250 s/op
Iteration   2: 0.270 s/op
Iteration   3: 0.268 s/op
Iteration   4: 0.246 s/op
Iteration   5: 0.246 s/op
Iteration   6: 0.249 s/op
Iteration   7: 0.249 s/op
Iteration   8: 0.248 s/op
Iteration   9: 0.248 s/op
Iteration  10: 0.252 s/op

# Run progress: 21.88% complete, ETA 00:36:01
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.256 s/op
# Warmup Iteration   2: 0.257 s/op
# Warmup Iteration   3: 0.252 s/op
# Warmup Iteration   4: 0.251 s/op
# Warmup Iteration   5: 0.251 s/op
# Warmup Iteration   6: 0.252 s/op
# Warmup Iteration   7: 0.251 s/op
# Warmup Iteration   8: 0.251 s/op
# Warmup Iteration   9: 0.251 s/op
# Warmup Iteration  10: 0.251 s/op
Iteration   1: 0.250 s/op
Iteration   2: 0.250 s/op
Iteration   3: 0.250 s/op
Iteration   4: 0.250 s/op
Iteration   5: 0.242 s/op
Iteration   6: 0.242 s/op
Iteration   7: 0.246 s/op
Iteration   8: 0.247 s/op
Iteration   9: 0.246 s/op
Iteration  10: 0.245 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarLOG":
  N = 20
  mean =      0.250 ±(99.9%) 0.006 s/op

  Histogram, s/op:
    [0.240, 0.243) = 2 
    [0.243, 0.245) = 1 
    [0.245, 0.248) = 5 
    [0.248, 0.250) = 6 
    [0.250, 0.253) = 4 
    [0.253, 0.255) = 0 
    [0.255, 0.258) = 0 
    [0.258, 0.260) = 0 
    [0.260, 0.263) = 0 
    [0.263, 0.265) = 0 
    [0.265, 0.268) = 0 
    [0.268, 0.270) = 1 
    [0.270, 0.272) = 1 
    [0.272, 0.275) = 0 
    [0.275, 0.277) = 0 
    [0.277, 0.280) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.242 s/op
     p(50.0000) =      0.249 s/op
     p(90.0000) =      0.266 s/op
     p(95.0000) =      0.270 s/op
     p(99.0000) =      0.270 s/op
     p(99.9000) =      0.270 s/op
     p(99.9900) =      0.270 s/op
     p(99.9990) =      0.270 s/op
     p(99.9999) =      0.270 s/op
    p(100.0000) =      0.270 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarLOG10

# Run progress: 22.92% complete, ETA 00:34:17
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.283 s/op
# Warmup Iteration   2: 0.278 s/op
# Warmup Iteration   3: 0.277 s/op
# Warmup Iteration   4: 0.279 s/op
# Warmup Iteration   5: 0.283 s/op
# Warmup Iteration   6: 0.282 s/op
# Warmup Iteration   7: 0.283 s/op
# Warmup Iteration   8: 0.283 s/op
# Warmup Iteration   9: 0.282 s/op
# Warmup Iteration  10: 0.284 s/op
Iteration   1: 0.281 s/op
Iteration   2: 0.284 s/op
Iteration   3: 0.281 s/op
Iteration   4: 0.284 s/op
Iteration   5: 0.282 s/op
Iteration   6: 0.282 s/op
Iteration   7: 0.283 s/op
Iteration   8: 0.280 s/op
Iteration   9: 0.285 s/op
Iteration  10: 0.281 s/op

# Run progress: 23.96% complete, ETA 00:32:44
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.287 s/op
# Warmup Iteration   2: 0.285 s/op
# Warmup Iteration   3: 0.280 s/op
# Warmup Iteration   4: 0.283 s/op
# Warmup Iteration   5: 0.278 s/op
# Warmup Iteration   6: 0.282 s/op
# Warmup Iteration   7: 0.279 s/op
# Warmup Iteration   8: 0.281 s/op
# Warmup Iteration   9: 0.279 s/op
# Warmup Iteration  10: 0.281 s/op
Iteration   1: 0.281 s/op
Iteration   2: 0.277 s/op
Iteration   3: 0.282 s/op
Iteration   4: 0.281 s/op
Iteration   5: 0.282 s/op
Iteration   6: 0.280 s/op
Iteration   7: 0.282 s/op
Iteration   8: 0.280 s/op
Iteration   9: 0.279 s/op
Iteration  10: 0.282 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarLOG10":
  N = 20
  mean =      0.281 ±(99.9%) 0.002 s/op

  Histogram, s/op:
    [0.276, 0.277) = 0 
    [0.277, 0.277) = 1 
    [0.277, 0.278) = 0 
    [0.278, 0.278) = 0 
    [0.278, 0.279) = 0 
    [0.279, 0.279) = 0 
    [0.279, 0.280) = 1 
    [0.280, 0.280) = 1 
    [0.280, 0.281) = 2 
    [0.281, 0.281) = 3 
    [0.281, 0.282) = 2 
    [0.282, 0.282) = 3 
    [0.282, 0.283) = 3 
    [0.283, 0.283) = 0 
    [0.283, 0.284) = 1 
    [0.284, 0.284) = 1 
    [0.284, 0.285) = 1 
    [0.285, 0.285) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.277 s/op
     p(50.0000) =      0.281 s/op
     p(90.0000) =      0.284 s/op
     p(95.0000) =      0.285 s/op
     p(99.0000) =      0.285 s/op
     p(99.9000) =      0.285 s/op
     p(99.9900) =      0.285 s/op
     p(99.9990) =      0.285 s/op
     p(99.9999) =      0.285 s/op
    p(100.0000) =      0.285 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarLOG1P

# Run progress: 25.00% complete, ETA 00:31:17
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 1.025 s/op
# Warmup Iteration   2: 1.025 s/op
# Warmup Iteration   3: 1.013 s/op
# Warmup Iteration   4: 1.012 s/op
# Warmup Iteration   5: 1.065 s/op
# Warmup Iteration   6: 1.017 s/op
# Warmup Iteration   7: 1.021 s/op
# Warmup Iteration   8: 1.009 s/op
# Warmup Iteration   9: 1.009 s/op
# Warmup Iteration  10: 1.010 s/op
Iteration   1: 1.010 s/op
Iteration   2: 1.009 s/op
Iteration   3: 1.008 s/op
Iteration   4: 1.012 s/op
Iteration   5: 1.010 s/op
Iteration   6: 1.008 s/op
Iteration   7: 1.008 s/op
Iteration   8: 1.012 s/op
Iteration   9: 1.009 s/op
Iteration  10: 1.011 s/op

# Run progress: 26.04% complete, ETA 00:30:39
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 1.034 s/op
# Warmup Iteration   2: 1.030 s/op
# Warmup Iteration   3: 1.022 s/op
# Warmup Iteration   4: 1.018 s/op
# Warmup Iteration   5: 1.021 s/op
# Warmup Iteration   6: 1.017 s/op
# Warmup Iteration   7: 1.016 s/op
# Warmup Iteration   8: 1.018 s/op
# Warmup Iteration   9: 1.017 s/op
# Warmup Iteration  10: 1.023 s/op
Iteration   1: 1.022 s/op
Iteration   2: 1.021 s/op
Iteration   3: 1.022 s/op
Iteration   4: 1.016 s/op
Iteration   5: 1.022 s/op
Iteration   6: 1.022 s/op
Iteration   7: 1.018 s/op
Iteration   8: 1.022 s/op
Iteration   9: 1.021 s/op
Iteration  10: 1.020 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarLOG1P":
  N = 20
  mean =      1.015 ±(99.9%) 0.005 s/op

  Histogram, s/op:
    [1.000, 1.003) = 0 
    [1.003, 1.005) = 0 
    [1.005, 1.008) = 0 
    [1.008, 1.010) = 6 
    [1.010, 1.013) = 4 
    [1.013, 1.015) = 0 
    [1.015, 1.018) = 1 
    [1.018, 1.020) = 1 
    [1.020, 1.023) = 8 
    [1.023, 1.025) = 0 
    [1.025, 1.028) = 0 
    [1.028, 1.030) = 0 

  Percentiles, s/op:
      p(0.0000) =      1.008 s/op
     p(50.0000) =      1.014 s/op
     p(90.0000) =      1.022 s/op
     p(95.0000) =      1.022 s/op
     p(99.0000) =      1.022 s/op
     p(99.9000) =      1.022 s/op
     p(99.9900) =      1.022 s/op
     p(99.9990) =      1.022 s/op
     p(99.9999) =      1.022 s/op
    p(100.0000) =      1.022 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarMUL0

# Run progress: 27.08% complete, ETA 00:30:03
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.031 s/op
# Warmup Iteration   2: 0.031 s/op
# Warmup Iteration   3: 0.031 s/op
# Warmup Iteration   4: 0.030 s/op
# Warmup Iteration   5: 0.028 s/op
# Warmup Iteration   6: 0.028 s/op
# Warmup Iteration   7: 0.031 s/op
# Warmup Iteration   8: 0.030 s/op
# Warmup Iteration   9: 0.027 s/op
# Warmup Iteration  10: 0.028 s/op
Iteration   1: 0.028 s/op
Iteration   2: 0.028 s/op
Iteration   3: 0.028 s/op
Iteration   4: 0.028 s/op
Iteration   5: 0.028 s/op
Iteration   6: 0.028 s/op
Iteration   7: 0.028 s/op
Iteration   8: 0.028 s/op
Iteration   9: 0.028 s/op
Iteration  10: 0.030 s/op

# Run progress: 28.13% complete, ETA 00:28:37
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.031 s/op
# Warmup Iteration   2: 0.032 s/op
# Warmup Iteration   3: 0.029 s/op
# Warmup Iteration   4: 0.030 s/op
# Warmup Iteration   5: 0.027 s/op
# Warmup Iteration   6: 0.027 s/op
# Warmup Iteration   7: 0.027 s/op
# Warmup Iteration   8: 0.027 s/op
# Warmup Iteration   9: 0.027 s/op
# Warmup Iteration  10: 0.027 s/op
Iteration   1: 0.027 s/op
Iteration   2: 0.027 s/op
Iteration   3: 0.027 s/op
Iteration   4: 0.026 s/op
Iteration   5: 0.026 s/op
Iteration   6: 0.027 s/op
Iteration   7: 0.029 s/op
Iteration   8: 0.030 s/op
Iteration   9: 0.027 s/op
Iteration  10: 0.027 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarMUL0":
  N = 20
  mean =      0.028 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [0.026, 0.026) = 0 
    [0.026, 0.027) = 2 
    [0.027, 0.027) = 4 
    [0.027, 0.027) = 1 
    [0.027, 0.027) = 1 
    [0.027, 0.028) = 0 
    [0.028, 0.028) = 3 
    [0.028, 0.028) = 4 
    [0.028, 0.028) = 1 
    [0.028, 0.029) = 1 
    [0.029, 0.029) = 0 
    [0.029, 0.029) = 0 
    [0.029, 0.029) = 1 
    [0.029, 0.030) = 0 
    [0.030, 0.030) = 0 
    [0.030, 0.030) = 0 
    [0.030, 0.030) = 1 
    [0.030, 0.031) = 1 
    [0.031, 0.031) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.026 s/op
     p(50.0000) =      0.028 s/op
     p(90.0000) =      0.030 s/op
     p(95.0000) =      0.030 s/op
     p(99.0000) =      0.030 s/op
     p(99.9000) =      0.030 s/op
     p(99.9900) =      0.030 s/op
     p(99.9990) =      0.030 s/op
     p(99.9999) =      0.030 s/op
    p(100.0000) =      0.030 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarMUL1

# Run progress: 29.17% complete, ETA 00:27:16
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.030 s/op
# Warmup Iteration   2: 0.028 s/op
# Warmup Iteration   3: 0.024 s/op
# Warmup Iteration   4: 0.024 s/op
# Warmup Iteration   5: 0.024 s/op
# Warmup Iteration   6: 0.024 s/op
# Warmup Iteration   7: 0.024 s/op
# Warmup Iteration   8: 0.024 s/op
# Warmup Iteration   9: 0.024 s/op
# Warmup Iteration  10: 0.024 s/op
Iteration   1: 0.024 s/op
Iteration   2: 0.024 s/op
Iteration   3: 0.025 s/op
Iteration   4: 0.025 s/op
Iteration   5: 0.027 s/op
Iteration   6: 0.028 s/op
Iteration   7: 0.025 s/op
Iteration   8: 0.025 s/op
Iteration   9: 0.026 s/op
Iteration  10: 0.027 s/op

# Run progress: 30.21% complete, ETA 00:26:01
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.028 s/op
# Warmup Iteration   2: 0.028 s/op
# Warmup Iteration   3: 0.024 s/op
# Warmup Iteration   4: 0.024 s/op
# Warmup Iteration   5: 0.025 s/op
# Warmup Iteration   6: 0.025 s/op
# Warmup Iteration   7: 0.024 s/op
# Warmup Iteration   8: 0.024 s/op
# Warmup Iteration   9: 0.024 s/op
# Warmup Iteration  10: 0.025 s/op
Iteration   1: 0.024 s/op
Iteration   2: 0.026 s/op
Iteration   3: 0.026 s/op
Iteration   4: 0.027 s/op
Iteration   5: 0.026 s/op
Iteration   6: 0.025 s/op
Iteration   7: 0.026 s/op
Iteration   8: 0.031 s/op
Iteration   9: 0.028 s/op
Iteration  10: 0.027 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarMUL1":
  N = 20
  mean =      0.026 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [0.024, 0.025) = 3 
    [0.025, 0.025) = 3 
    [0.025, 0.026) = 2 
    [0.026, 0.026) = 2 
    [0.026, 0.027) = 3 
    [0.027, 0.027) = 2 
    [0.027, 0.028) = 2 
    [0.028, 0.028) = 1 
    [0.028, 0.029) = 1 
    [0.029, 0.029) = 0 
    [0.029, 0.030) = 0 
    [0.030, 0.030) = 0 
    [0.030, 0.031) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.024 s/op
     p(50.0000) =      0.026 s/op
     p(90.0000) =      0.028 s/op
     p(95.0000) =      0.031 s/op
     p(99.0000) =      0.031 s/op
     p(99.9000) =      0.031 s/op
     p(99.9900) =      0.031 s/op
     p(99.9990) =      0.031 s/op
     p(99.9999) =      0.031 s/op
    p(100.0000) =      0.031 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarMUL2

# Run progress: 31.25% complete, ETA 00:24:51
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.032 s/op
# Warmup Iteration   2: 0.032 s/op
# Warmup Iteration   3: 0.028 s/op
# Warmup Iteration   4: 0.028 s/op
# Warmup Iteration   5: 0.028 s/op
# Warmup Iteration   6: 0.028 s/op
# Warmup Iteration   7: 0.028 s/op
# Warmup Iteration   8: 0.028 s/op
# Warmup Iteration   9: 0.030 s/op
# Warmup Iteration  10: 0.032 s/op
Iteration   1: 0.029 s/op
Iteration   2: 0.028 s/op
Iteration   3: 0.032 s/op
Iteration   4: 0.031 s/op
Iteration   5: 0.028 s/op
Iteration   6: 0.028 s/op
Iteration   7: 0.028 s/op
Iteration   8: 0.028 s/op
Iteration   9: 0.028 s/op
Iteration  10: 0.028 s/op

# Run progress: 32.29% complete, ETA 00:23:46
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.033 s/op
# Warmup Iteration   2: 0.033 s/op
# Warmup Iteration   3: 0.029 s/op
# Warmup Iteration   4: 0.031 s/op
# Warmup Iteration   5: 0.027 s/op
# Warmup Iteration   6: 0.029 s/op
# Warmup Iteration   7: 0.031 s/op
# Warmup Iteration   8: 0.030 s/op
# Warmup Iteration   9: 0.027 s/op
# Warmup Iteration  10: 0.027 s/op
Iteration   1: 0.027 s/op
Iteration   2: 0.027 s/op
Iteration   3: 0.027 s/op
Iteration   4: 0.027 s/op
Iteration   5: 0.028 s/op
Iteration   6: 0.028 s/op
Iteration   7: 0.027 s/op
Iteration   8: 0.027 s/op
Iteration   9: 0.028 s/op
Iteration  10: 0.028 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarMUL2":
  N = 20
  mean =      0.028 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [0.026, 0.027) = 0 
    [0.027, 0.027) = 1 
    [0.027, 0.028) = 5 
    [0.028, 0.028) = 7 
    [0.028, 0.029) = 4 
    [0.029, 0.029) = 1 
    [0.029, 0.030) = 0 
    [0.030, 0.030) = 0 
    [0.030, 0.031) = 0 
    [0.031, 0.031) = 0 
    [0.031, 0.032) = 1 
    [0.032, 0.032) = 0 
    [0.032, 0.033) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.027 s/op
     p(50.0000) =      0.028 s/op
     p(90.0000) =      0.031 s/op
     p(95.0000) =      0.032 s/op
     p(99.0000) =      0.032 s/op
     p(99.9000) =      0.032 s/op
     p(99.9900) =      0.032 s/op
     p(99.9990) =      0.032 s/op
     p(99.9999) =      0.032 s/op
    p(100.0000) =      0.032 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarPOW

# Run progress: 33.33% complete, ETA 00:22:44
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.568 s/op
# Warmup Iteration   2: 0.568 s/op
# Warmup Iteration   3: 0.565 s/op
# Warmup Iteration   4: 0.566 s/op
# Warmup Iteration   5: 0.565 s/op
# Warmup Iteration   6: 0.566 s/op
# Warmup Iteration   7: 0.565 s/op
# Warmup Iteration   8: 0.570 s/op
# Warmup Iteration   9: 0.569 s/op
# Warmup Iteration  10: 0.567 s/op
Iteration   1: 0.566 s/op
Iteration   2: 0.566 s/op
Iteration   3: 0.565 s/op
Iteration   4: 0.565 s/op
Iteration   5: 0.565 s/op
Iteration   6: 0.566 s/op
Iteration   7: 0.567 s/op
Iteration   8: 0.568 s/op
Iteration   9: 0.566 s/op
Iteration  10: 0.567 s/op

# Run progress: 34.38% complete, ETA 00:22:07
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.558 s/op
# Warmup Iteration   2: 0.557 s/op
# Warmup Iteration   3: 0.560 s/op
# Warmup Iteration   4: 0.559 s/op
# Warmup Iteration   5: 0.559 s/op
# Warmup Iteration   6: 0.558 s/op
# Warmup Iteration   7: 0.559 s/op
# Warmup Iteration   8: 0.562 s/op
# Warmup Iteration   9: 0.561 s/op
# Warmup Iteration  10: 0.564 s/op
Iteration   1: 0.566 s/op
Iteration   2: 0.564 s/op
Iteration   3: 0.565 s/op
Iteration   4: 0.561 s/op
Iteration   5: 0.564 s/op
Iteration   6: 0.562 s/op
Iteration   7: 0.564 s/op
Iteration   8: 0.564 s/op
Iteration   9: 0.568 s/op
Iteration  10: 0.568 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarPOW":
  N = 20
  mean =      0.565 ±(99.9%) 0.002 s/op

  Histogram, s/op:
    [0.560, 0.561) = 0 
    [0.561, 0.561) = 1 
    [0.561, 0.562) = 0 
    [0.562, 0.562) = 1 
    [0.562, 0.563) = 0 
    [0.563, 0.563) = 0 
    [0.563, 0.564) = 0 
    [0.564, 0.564) = 0 
    [0.564, 0.565) = 4 
    [0.565, 0.565) = 4 
    [0.565, 0.566) = 0 
    [0.566, 0.566) = 3 
    [0.566, 0.567) = 2 
    [0.567, 0.567) = 0 
    [0.567, 0.568) = 2 
    [0.568, 0.568) = 2 
    [0.568, 0.569) = 1 
    [0.569, 0.569) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.561 s/op
     p(50.0000) =      0.565 s/op
     p(90.0000) =      0.568 s/op
     p(95.0000) =      0.568 s/op
     p(99.0000) =      0.568 s/op
     p(99.9000) =      0.568 s/op
     p(99.9900) =      0.568 s/op
     p(99.9990) =      0.568 s/op
     p(99.9999) =      0.568 s/op
    p(100.0000) =      0.568 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarPOW0

# Run progress: 35.42% complete, ETA 00:21:31
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.344 s/op
# Warmup Iteration   2: 0.345 s/op
# Warmup Iteration   3: 0.353 s/op
# Warmup Iteration   4: 0.351 s/op
# Warmup Iteration   5: 0.351 s/op
# Warmup Iteration   6: 0.351 s/op
# Warmup Iteration   7: 0.350 s/op
# Warmup Iteration   8: 0.350 s/op
# Warmup Iteration   9: 0.351 s/op
# Warmup Iteration  10: 0.350 s/op
Iteration   1: 0.349 s/op
Iteration   2: 0.350 s/op
Iteration   3: 0.350 s/op
Iteration   4: 0.349 s/op
Iteration   5: 0.349 s/op
Iteration   6: 0.351 s/op
Iteration   7: 0.350 s/op
Iteration   8: 0.349 s/op
Iteration   9: 0.351 s/op
Iteration  10: 0.350 s/op

# Run progress: 36.46% complete, ETA 00:20:48
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.336 s/op
# Warmup Iteration   2: 0.339 s/op
# Warmup Iteration   3: 0.339 s/op
# Warmup Iteration   4: 0.343 s/op
# Warmup Iteration   5: 0.345 s/op
# Warmup Iteration   6: 0.345 s/op
# Warmup Iteration   7: 0.344 s/op
# Warmup Iteration   8: 0.343 s/op
# Warmup Iteration   9: 0.345 s/op
# Warmup Iteration  10: 0.344 s/op
Iteration   1: 0.343 s/op
Iteration   2: 0.345 s/op
Iteration   3: 0.344 s/op
Iteration   4: 0.345 s/op
Iteration   5: 0.344 s/op
Iteration   6: 0.345 s/op
Iteration   7: 0.344 s/op
Iteration   8: 0.344 s/op
Iteration   9: 0.346 s/op
Iteration  10: 0.344 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarPOW0":
  N = 20
  mean =      0.347 ±(99.9%) 0.002 s/op

  Histogram, s/op:
    [0.343, 0.344) = 1 
    [0.344, 0.344) = 3 
    [0.344, 0.345) = 2 
    [0.345, 0.345) = 2 
    [0.345, 0.346) = 1 
    [0.346, 0.346) = 0 
    [0.346, 0.347) = 1 
    [0.347, 0.347) = 0 
    [0.347, 0.348) = 0 
    [0.348, 0.348) = 0 
    [0.348, 0.349) = 0 
    [0.349, 0.349) = 3 
    [0.349, 0.350) = 1 
    [0.350, 0.350) = 3 
    [0.350, 0.351) = 1 
    [0.351, 0.351) = 2 

  Percentiles, s/op:
      p(0.0000) =      0.343 s/op
     p(50.0000) =      0.347 s/op
     p(90.0000) =      0.351 s/op
     p(95.0000) =      0.351 s/op
     p(99.0000) =      0.351 s/op
     p(99.9000) =      0.351 s/op
     p(99.9900) =      0.351 s/op
     p(99.9990) =      0.351 s/op
     p(99.9999) =      0.351 s/op
    p(100.0000) =      0.351 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarPOW1

# Run progress: 37.50% complete, ETA 00:20:08
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.558 s/op
# Warmup Iteration   2: 0.556 s/op
# Warmup Iteration   3: 0.553 s/op
# Warmup Iteration   4: 0.551 s/op
# Warmup Iteration   5: 0.552 s/op
# Warmup Iteration   6: 0.552 s/op
# Warmup Iteration   7: 0.551 s/op
# Warmup Iteration   8: 0.551 s/op
# Warmup Iteration   9: 0.553 s/op
# Warmup Iteration  10: 0.552 s/op
Iteration   1: 0.554 s/op
Iteration   2: 0.552 s/op
Iteration   3: 0.552 s/op
Iteration   4: 0.551 s/op
Iteration   5: 0.552 s/op
Iteration   6: 0.551 s/op
Iteration   7: 0.550 s/op
Iteration   8: 0.547 s/op
Iteration   9: 0.548 s/op
Iteration  10: 0.546 s/op

# Run progress: 38.54% complete, ETA 00:19:36
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.541 s/op
# Warmup Iteration   2: 0.538 s/op
# Warmup Iteration   3: 0.540 s/op
# Warmup Iteration   4: 0.538 s/op
# Warmup Iteration   5: 0.539 s/op
# Warmup Iteration   6: 0.541 s/op
# Warmup Iteration   7: 0.540 s/op
# Warmup Iteration   8: 0.538 s/op
# Warmup Iteration   9: 0.544 s/op
# Warmup Iteration  10: 0.542 s/op
Iteration   1: 0.542 s/op
Iteration   2: 0.539 s/op
Iteration   3: 0.539 s/op
Iteration   4: 0.538 s/op
Iteration   5: 0.538 s/op
Iteration   6: 0.534 s/op
Iteration   7: 0.538 s/op
Iteration   8: 0.536 s/op
Iteration   9: 0.537 s/op
Iteration  10: 0.534 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarPOW1":
  N = 20
  mean =      0.544 ±(99.9%) 0.006 s/op

  Histogram, s/op:
    [0.530, 0.533) = 0 
    [0.533, 0.535) = 2 
    [0.535, 0.538) = 2 
    [0.538, 0.540) = 5 
    [0.540, 0.543) = 1 
    [0.543, 0.545) = 0 
    [0.545, 0.548) = 2 
    [0.548, 0.550) = 1 
    [0.550, 0.553) = 6 
    [0.553, 0.555) = 1 
    [0.555, 0.558) = 0 
    [0.558, 0.560) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.534 s/op
     p(50.0000) =      0.544 s/op
     p(90.0000) =      0.552 s/op
     p(95.0000) =      0.554 s/op
     p(99.0000) =      0.554 s/op
     p(99.9000) =      0.554 s/op
     p(99.9900) =      0.554 s/op
     p(99.9990) =      0.554 s/op
     p(99.9999) =      0.554 s/op
    p(100.0000) =      0.554 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarPOW2

# Run progress: 39.58% complete, ETA 00:19:04
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.032 s/op
# Warmup Iteration   2: 0.033 s/op
# Warmup Iteration   3: 0.030 s/op
# Warmup Iteration   4: 0.030 s/op
# Warmup Iteration   5: 0.027 s/op
# Warmup Iteration   6: 0.027 s/op
# Warmup Iteration   7: 0.029 s/op
# Warmup Iteration   8: 0.031 s/op
# Warmup Iteration   9: 0.027 s/op
# Warmup Iteration  10: 0.027 s/op
Iteration   1: 0.027 s/op
Iteration   2: 0.027 s/op
Iteration   3: 0.027 s/op
Iteration   4: 0.027 s/op
Iteration   5: 0.027 s/op
Iteration   6: 0.027 s/op
Iteration   7: 0.027 s/op
Iteration   8: 0.027 s/op
Iteration   9: 0.029 s/op
Iteration  10: 0.032 s/op

# Run progress: 40.63% complete, ETA 00:18:19
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.033 s/op
# Warmup Iteration   2: 0.033 s/op
# Warmup Iteration   3: 0.030 s/op
# Warmup Iteration   4: 0.029 s/op
# Warmup Iteration   5: 0.028 s/op
# Warmup Iteration   6: 0.027 s/op
# Warmup Iteration   7: 0.027 s/op
# Warmup Iteration   8: 0.027 s/op
# Warmup Iteration   9: 0.027 s/op
# Warmup Iteration  10: 0.027 s/op
Iteration   1: 0.027 s/op
Iteration   2: 0.027 s/op
Iteration   3: 0.027 s/op
Iteration   4: 0.027 s/op
Iteration   5: 0.030 s/op
Iteration   6: 0.031 s/op
Iteration   7: 0.030 s/op
Iteration   8: 0.028 s/op
Iteration   9: 0.027 s/op
Iteration  10: 0.028 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarPOW2":
  N = 20
  mean =      0.028 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [0.026, 0.027) = 0 
    [0.027, 0.027) = 9 
    [0.027, 0.028) = 4 
    [0.028, 0.028) = 1 
    [0.028, 0.029) = 1 
    [0.029, 0.029) = 1 
    [0.029, 0.030) = 0 
    [0.030, 0.030) = 2 
    [0.030, 0.031) = 0 
    [0.031, 0.031) = 1 
    [0.031, 0.032) = 0 
    [0.032, 0.032) = 0 
    [0.032, 0.033) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.027 s/op
     p(50.0000) =      0.027 s/op
     p(90.0000) =      0.031 s/op
     p(95.0000) =      0.032 s/op
     p(99.0000) =      0.032 s/op
     p(99.9000) =      0.032 s/op
     p(99.9900) =      0.032 s/op
     p(99.9990) =      0.032 s/op
     p(99.9999) =      0.032 s/op
    p(100.0000) =      0.032 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarSIN

# Run progress: 41.67% complete, ETA 00:17:35
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.372 s/op
# Warmup Iteration   2: 0.365 s/op
# Warmup Iteration   3: 0.368 s/op
# Warmup Iteration   4: 0.370 s/op
# Warmup Iteration   5: 0.365 s/op
# Warmup Iteration   6: 0.367 s/op
# Warmup Iteration   7: 0.373 s/op
# Warmup Iteration   8: 0.367 s/op
# Warmup Iteration   9: 0.367 s/op
# Warmup Iteration  10: 0.370 s/op
Iteration   1: 0.364 s/op
Iteration   2: 0.362 s/op
Iteration   3: 0.365 s/op
Iteration   4: 0.361 s/op
Iteration   5: 0.363 s/op
Iteration   6: 0.358 s/op
Iteration   7: 0.358 s/op
Iteration   8: 0.363 s/op
Iteration   9: 0.357 s/op
Iteration  10: 0.359 s/op

# Run progress: 42.71% complete, ETA 00:17:03
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.379 s/op
# Warmup Iteration   2: 0.378 s/op
# Warmup Iteration   3: 0.373 s/op
# Warmup Iteration   4: 0.374 s/op
# Warmup Iteration   5: 0.375 s/op
# Warmup Iteration   6: 0.375 s/op
# Warmup Iteration   7: 0.375 s/op
# Warmup Iteration   8: 0.372 s/op
# Warmup Iteration   9: 0.375 s/op
# Warmup Iteration  10: 0.376 s/op
Iteration   1: 0.374 s/op
Iteration   2: 0.372 s/op
Iteration   3: 0.374 s/op
Iteration   4: 0.375 s/op
Iteration   5: 0.375 s/op
Iteration   6: 0.374 s/op
Iteration   7: 0.374 s/op
Iteration   8: 0.376 s/op
Iteration   9: 0.373 s/op
Iteration  10: 0.368 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarSIN":
  N = 20
  mean =      0.367 ±(99.9%) 0.006 s/op

  Histogram, s/op:
    [0.350, 0.353) = 0 
    [0.353, 0.355) = 0 
    [0.355, 0.358) = 1 
    [0.358, 0.360) = 3 
    [0.360, 0.363) = 2 
    [0.363, 0.365) = 4 
    [0.365, 0.368) = 0 
    [0.368, 0.370) = 1 
    [0.370, 0.373) = 1 
    [0.373, 0.375) = 7 
    [0.375, 0.378) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.357 s/op
     p(50.0000) =      0.366 s/op
     p(90.0000) =      0.375 s/op
     p(95.0000) =      0.376 s/op
     p(99.0000) =      0.376 s/op
     p(99.9000) =      0.376 s/op
     p(99.9900) =      0.376 s/op
     p(99.9990) =      0.376 s/op
     p(99.9999) =      0.376 s/op
    p(100.0000) =      0.376 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarSINH

# Run progress: 43.75% complete, ETA 00:16:32
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 1.816 s/op
# Warmup Iteration   2: 1.803 s/op
# Warmup Iteration   3: 1.777 s/op
# Warmup Iteration   4: 1.779 s/op
# Warmup Iteration   5: 1.776 s/op
# Warmup Iteration   6: 1.782 s/op
# Warmup Iteration   7: 1.780 s/op
# Warmup Iteration   8: 1.780 s/op
# Warmup Iteration   9: 1.790 s/op
# Warmup Iteration  10: 1.788 s/op
Iteration   1: 1.786 s/op
Iteration   2: 1.783 s/op
Iteration   3: 1.785 s/op
Iteration   4: 1.787 s/op
Iteration   5: 1.786 s/op
Iteration   6: 1.783 s/op
Iteration   7: 1.778 s/op
Iteration   8: 1.781 s/op
Iteration   9: 1.782 s/op
Iteration  10: 1.792 s/op

# Run progress: 44.79% complete, ETA 00:16:37
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 1.815 s/op
# Warmup Iteration   2: 1.813 s/op
# Warmup Iteration   3: 1.813 s/op
# Warmup Iteration   4: 1.815 s/op
# Warmup Iteration   5: 1.817 s/op
# Warmup Iteration   6: 1.814 s/op
# Warmup Iteration   7: 1.822 s/op
# Warmup Iteration   8: 1.820 s/op
# Warmup Iteration   9: 1.816 s/op
# Warmup Iteration  10: 1.818 s/op
Iteration   1: 1.820 s/op
Iteration   2: 1.818 s/op
Iteration   3: 1.818 s/op
Iteration   4: 1.815 s/op
Iteration   5: 1.821 s/op
Iteration   6: 1.820 s/op
Iteration   7: 1.818 s/op
Iteration   8: 1.807 s/op
Iteration   9: 1.819 s/op
Iteration  10: 1.820 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarSINH":
  N = 20
  mean =      1.801 ±(99.9%) 0.015 s/op

  Histogram, s/op:
    [1.770, 1.775) = 0 
    [1.775, 1.780) = 1 
    [1.780, 1.785) = 4 
    [1.785, 1.790) = 4 
    [1.790, 1.795) = 1 
    [1.795, 1.800) = 0 
    [1.800, 1.805) = 0 
    [1.805, 1.810) = 1 
    [1.810, 1.815) = 0 
    [1.815, 1.820) = 5 
    [1.820, 1.825) = 4 
    [1.825, 1.830) = 0 

  Percentiles, s/op:
      p(0.0000) =      1.778 s/op
     p(50.0000) =      1.800 s/op
     p(90.0000) =      1.820 s/op
     p(95.0000) =      1.821 s/op
     p(99.0000) =      1.821 s/op
     p(99.9000) =      1.821 s/op
     p(99.9900) =      1.821 s/op
     p(99.9990) =      1.821 s/op
     p(99.9999) =      1.821 s/op
    p(100.0000) =      1.821 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarTAN

# Run progress: 45.83% complete, ETA 00:16:41
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.507 s/op
# Warmup Iteration   2: 0.504 s/op
# Warmup Iteration   3: 0.510 s/op
# Warmup Iteration   4: 0.502 s/op
# Warmup Iteration   5: 0.505 s/op
# Warmup Iteration   6: 0.504 s/op
# Warmup Iteration   7: 0.508 s/op
# Warmup Iteration   8: 0.504 s/op
# Warmup Iteration   9: 0.506 s/op
# Warmup Iteration  10: 0.505 s/op
Iteration   1: 0.507 s/op
Iteration   2: 0.504 s/op
Iteration   3: 0.510 s/op
Iteration   4: 0.506 s/op
Iteration   5: 0.508 s/op
Iteration   6: 0.505 s/op
Iteration   7: 0.505 s/op
Iteration   8: 0.505 s/op
Iteration   9: 0.507 s/op
Iteration  10: 0.507 s/op

# Run progress: 46.88% complete, ETA 00:16:13
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.506 s/op
# Warmup Iteration   2: 0.507 s/op
# Warmup Iteration   3: 0.504 s/op
# Warmup Iteration   4: 0.507 s/op
# Warmup Iteration   5: 0.506 s/op
# Warmup Iteration   6: 0.507 s/op
# Warmup Iteration   7: 0.506 s/op
# Warmup Iteration   8: 0.504 s/op
# Warmup Iteration   9: 0.503 s/op
# Warmup Iteration  10: 0.506 s/op
Iteration   1: 0.505 s/op
Iteration   2: 0.506 s/op
Iteration   3: 0.505 s/op
Iteration   4: 0.506 s/op
Iteration   5: 0.507 s/op
Iteration   6: 0.507 s/op
Iteration   7: 0.507 s/op
Iteration   8: 0.506 s/op
Iteration   9: 0.503 s/op
Iteration  10: 0.503 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarTAN":
  N = 20
  mean =      0.506 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [0.503, 0.504) = 2 
    [0.504, 0.504) = 1 
    [0.504, 0.505) = 0 
    [0.505, 0.505) = 3 
    [0.505, 0.506) = 2 
    [0.506, 0.506) = 3 
    [0.506, 0.507) = 1 
    [0.507, 0.507) = 2 
    [0.507, 0.508) = 4 
    [0.508, 0.508) = 1 
    [0.508, 0.509) = 0 
    [0.509, 0.509) = 0 
    [0.509, 0.510) = 0 
    [0.510, 0.510) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.503 s/op
     p(50.0000) =      0.506 s/op
     p(90.0000) =      0.508 s/op
     p(95.0000) =      0.510 s/op
     p(99.0000) =      0.510 s/op
     p(99.9000) =      0.510 s/op
     p(99.9900) =      0.510 s/op
     p(99.9990) =      0.510 s/op
     p(99.9999) =      0.510 s/op
    p(100.0000) =      0.510 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarTANH

# Run progress: 47.92% complete, ETA 00:15:46
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 2.085 s/op
# Warmup Iteration   2: 2.057 s/op
# Warmup Iteration   3: 2.032 s/op
# Warmup Iteration   4: 2.066 s/op
# Warmup Iteration   5: 2.064 s/op
# Warmup Iteration   6: 2.066 s/op
# Warmup Iteration   7: 2.066 s/op
# Warmup Iteration   8: 2.065 s/op
# Warmup Iteration   9: 2.066 s/op
# Warmup Iteration  10: 2.068 s/op
Iteration   1: 2.065 s/op
Iteration   2: 2.062 s/op
Iteration   3: 2.055 s/op
Iteration   4: 2.059 s/op
Iteration   5: 2.058 s/op
Iteration   6: 2.058 s/op
Iteration   7: 2.066 s/op
Iteration   8: 2.060 s/op
Iteration   9: 2.061 s/op
Iteration  10: 2.071 s/op

# Run progress: 48.96% complete, ETA 00:15:52
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 2.056 s/op
# Warmup Iteration   2: 2.045 s/op
# Warmup Iteration   3: 2.021 s/op
# Warmup Iteration   4: 2.026 s/op
# Warmup Iteration   5: 2.025 s/op
# Warmup Iteration   6: 2.028 s/op
# Warmup Iteration   7: 2.029 s/op
# Warmup Iteration   8: 2.032 s/op
# Warmup Iteration   9: 2.029 s/op
# Warmup Iteration  10: 2.034 s/op
Iteration   1: 2.032 s/op
Iteration   2: 2.029 s/op
Iteration   3: 2.029 s/op
Iteration   4: 2.030 s/op
Iteration   5: 2.030 s/op
Iteration   6: 2.032 s/op
Iteration   7: 2.027 s/op
Iteration   8: 2.029 s/op
Iteration   9: 2.032 s/op
Iteration  10: 2.031 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarTANH":
  N = 20
  mean =      2.046 ±(99.9%) 0.014 s/op

  Histogram, s/op:
    [2.020, 2.025) = 0 
    [2.025, 2.030) = 5 
    [2.030, 2.035) = 5 
    [2.035, 2.040) = 0 
    [2.040, 2.045) = 0 
    [2.045, 2.050) = 0 
    [2.050, 2.055) = 0 
    [2.055, 2.060) = 4 
    [2.060, 2.065) = 3 
    [2.065, 2.070) = 2 
    [2.070, 2.075) = 1 
    [2.075, 2.080) = 0 

  Percentiles, s/op:
      p(0.0000) =      2.027 s/op
     p(50.0000) =      2.044 s/op
     p(90.0000) =      2.065 s/op
     p(95.0000) =      2.071 s/op
     p(99.0000) =      2.071 s/op
     p(99.9000) =      2.071 s/op
     p(99.9900) =      2.071 s/op
     p(99.9990) =      2.071 s/op
     p(99.9999) =      2.071 s/op
    p(100.0000) =      2.071 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorACOS

# Run progress: 50.00% complete, ETA 00:15:55
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.257 s/op
# Warmup Iteration   2: 0.165 s/op
# Warmup Iteration   3: 0.149 s/op
# Warmup Iteration   4: 0.140 s/op
# Warmup Iteration   5: 0.141 s/op
# Warmup Iteration   6: 0.144 s/op
# Warmup Iteration   7: 0.190 s/op
# Warmup Iteration   8: 0.134 s/op
# Warmup Iteration   9: 0.141 s/op
# Warmup Iteration  10: 0.137 s/op
Iteration   1: 0.136 s/op
Iteration   2: 0.133 s/op
Iteration   3: 0.153 s/op
Iteration   4: 0.254 s/op
Iteration   5: 0.162 s/op
Iteration   6: 0.137 s/op
Iteration   7: 0.132 s/op
Iteration   8: 0.132 s/op
Iteration   9: 0.143 s/op
Iteration  10: 0.139 s/op

# Run progress: 51.04% complete, ETA 00:15:21
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.264 s/op
# Warmup Iteration   2: 0.168 s/op
# Warmup Iteration   3: 0.139 s/op
# Warmup Iteration   4: 0.142 s/op
# Warmup Iteration   5: 0.142 s/op
# Warmup Iteration   6: 0.133 s/op
# Warmup Iteration   7: 0.137 s/op
# Warmup Iteration   8: 0.185 s/op
# Warmup Iteration   9: 0.137 s/op
# Warmup Iteration  10: 0.134 s/op
Iteration   1: 0.139 s/op
Iteration   2: 0.140 s/op
Iteration   3: 0.129 s/op
Iteration   4: 0.134 s/op
Iteration   5: 0.271 s/op
Iteration   6: 0.159 s/op
Iteration   7: 0.138 s/op
Iteration   8: 0.146 s/op
Iteration   9: 0.136 s/op
Iteration  10: 0.136 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorACOS":
  N = 20
  mean =      0.152 ±(99.9%) 0.034 s/op

  Histogram, s/op:
    [0.100, 0.113) = 0 
    [0.113, 0.125) = 0 
    [0.125, 0.138) = 9 
    [0.138, 0.150) = 6 
    [0.150, 0.163) = 3 
    [0.163, 0.175) = 0 
    [0.175, 0.188) = 0 
    [0.188, 0.200) = 0 
    [0.200, 0.213) = 0 
    [0.213, 0.225) = 0 
    [0.225, 0.238) = 0 
    [0.238, 0.250) = 0 
    [0.250, 0.263) = 1 
    [0.263, 0.275) = 1 
    [0.275, 0.288) = 0 
    [0.288, 0.300) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.129 s/op
     p(50.0000) =      0.138 s/op
     p(90.0000) =      0.245 s/op
     p(95.0000) =      0.270 s/op
     p(99.0000) =      0.271 s/op
     p(99.9000) =      0.271 s/op
     p(99.9900) =      0.271 s/op
     p(99.9990) =      0.271 s/op
     p(99.9999) =      0.271 s/op
    p(100.0000) =      0.271 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorASIN

# Run progress: 52.08% complete, ETA 00:14:47
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.267 s/op
# Warmup Iteration   2: 0.166 s/op
# Warmup Iteration   3: 0.149 s/op
# Warmup Iteration   4: 0.144 s/op
# Warmup Iteration   5: 0.133 s/op
# Warmup Iteration   6: 0.141 s/op
# Warmup Iteration   7: 0.149 s/op
# Warmup Iteration   8: 0.137 s/op
# Warmup Iteration   9: 0.138 s/op
# Warmup Iteration  10: 0.145 s/op
Iteration   1: 0.202 s/op
Iteration   2: 0.203 s/op
Iteration   3: 0.141 s/op
Iteration   4: 0.136 s/op
Iteration   5: 0.135 s/op
Iteration   6: 0.143 s/op
Iteration   7: 0.143 s/op
Iteration   8: 0.135 s/op
Iteration   9: 0.135 s/op
Iteration  10: 0.141 s/op

# Run progress: 53.13% complete, ETA 00:14:15
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.257 s/op
# Warmup Iteration   2: 0.170 s/op
# Warmup Iteration   3: 0.140 s/op
# Warmup Iteration   4: 0.133 s/op
# Warmup Iteration   5: 0.143 s/op
# Warmup Iteration   6: 0.146 s/op
# Warmup Iteration   7: 0.146 s/op
# Warmup Iteration   8: 0.139 s/op
# Warmup Iteration   9: 0.144 s/op
# Warmup Iteration  10: 0.134 s/op
Iteration   1: 0.186 s/op
Iteration   2: 0.162 s/op
Iteration   3: 0.137 s/op
Iteration   4: 0.130 s/op
Iteration   5: 0.130 s/op
Iteration   6: 0.136 s/op
Iteration   7: 0.135 s/op
Iteration   8: 0.131 s/op
Iteration   9: 0.131 s/op
Iteration  10: 0.140 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorASIN":
  N = 20
  mean =      0.147 ±(99.9%) 0.020 s/op

  Histogram, s/op:
    [0.130, 0.135) = 6 
    [0.135, 0.140) = 6 
    [0.140, 0.145) = 4 
    [0.145, 0.150) = 0 
    [0.150, 0.155) = 0 
    [0.155, 0.160) = 0 
    [0.160, 0.165) = 1 
    [0.165, 0.170) = 0 
    [0.170, 0.175) = 0 
    [0.175, 0.180) = 0 
    [0.180, 0.185) = 0 
    [0.185, 0.190) = 1 
    [0.190, 0.195) = 0 
    [0.195, 0.200) = 0 
    [0.200, 0.205) = 2 

  Percentiles, s/op:
      p(0.0000) =      0.130 s/op
     p(50.0000) =      0.136 s/op
     p(90.0000) =      0.200 s/op
     p(95.0000) =      0.203 s/op
     p(99.0000) =      0.203 s/op
     p(99.9000) =      0.203 s/op
     p(99.9900) =      0.203 s/op
     p(99.9990) =      0.203 s/op
     p(99.9999) =      0.203 s/op
    p(100.0000) =      0.203 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorATAN

# Run progress: 54.17% complete, ETA 00:13:44
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.316 s/op
# Warmup Iteration   2: 0.235 s/op
# Warmup Iteration   3: 0.227 s/op
# Warmup Iteration   4: 0.234 s/op
# Warmup Iteration   5: 0.225 s/op
# Warmup Iteration   6: 0.236 s/op
# Warmup Iteration   7: 0.224 s/op
# Warmup Iteration   8: 0.232 s/op
# Warmup Iteration   9: 0.226 s/op
# Warmup Iteration  10: 0.225 s/op
Iteration   1: 0.277 s/op
Iteration   2: 0.224 s/op
Iteration   3: 0.221 s/op
Iteration   4: 0.225 s/op
Iteration   5: 0.222 s/op
Iteration   6: 0.218 s/op
Iteration   7: 0.228 s/op
Iteration   8: 0.245 s/op
Iteration   9: 0.325 s/op
Iteration  10: 0.217 s/op

# Run progress: 55.21% complete, ETA 00:13:15
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.309 s/op
# Warmup Iteration   2: 0.231 s/op
# Warmup Iteration   3: 0.220 s/op
# Warmup Iteration   4: 0.222 s/op
# Warmup Iteration   5: 0.230 s/op
# Warmup Iteration   6: 0.225 s/op
# Warmup Iteration   7: 0.235 s/op
# Warmup Iteration   8: 0.226 s/op
# Warmup Iteration   9: 0.232 s/op
# Warmup Iteration  10: 0.223 s/op
Iteration   1: 0.302 s/op
Iteration   2: 0.309 s/op
Iteration   3: 0.226 s/op
Iteration   4: 0.220 s/op
Iteration   5: 0.226 s/op
Iteration   6: 0.217 s/op
Iteration   7: 0.225 s/op
Iteration   8: 0.218 s/op
Iteration   9: 0.222 s/op
Iteration  10: 0.222 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorATAN":
  N = 20
  mean =      0.239 ±(99.9%) 0.030 s/op

  Histogram, s/op:
    [0.200, 0.213) = 0 
    [0.213, 0.225) = 11 
    [0.225, 0.238) = 4 
    [0.238, 0.250) = 1 
    [0.250, 0.263) = 0 
    [0.263, 0.275) = 0 
    [0.275, 0.288) = 1 
    [0.288, 0.300) = 0 
    [0.300, 0.313) = 2 
    [0.313, 0.325) = 0 
    [0.325, 0.338) = 1 
    [0.338, 0.350) = 0 
    [0.350, 0.363) = 0 
    [0.363, 0.375) = 0 
    [0.375, 0.388) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.217 s/op
     p(50.0000) =      0.224 s/op
     p(90.0000) =      0.308 s/op
     p(95.0000) =      0.324 s/op
     p(99.0000) =      0.325 s/op
     p(99.9000) =      0.325 s/op
     p(99.9900) =      0.325 s/op
     p(99.9990) =      0.325 s/op
     p(99.9999) =      0.325 s/op
    p(100.0000) =      0.325 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorATAN2

# Run progress: 56.25% complete, ETA 00:12:47
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.397 s/op
# Warmup Iteration   2: 0.315 s/op
# Warmup Iteration   3: 0.291 s/op
# Warmup Iteration   4: 0.297 s/op
# Warmup Iteration   5: 0.287 s/op
# Warmup Iteration   6: 0.298 s/op
# Warmup Iteration   7: 0.283 s/op
# Warmup Iteration   8: 0.276 s/op
# Warmup Iteration   9: 0.279 s/op
# Warmup Iteration  10: 0.275 s/op
Iteration   1: 0.356 s/op
Iteration   2: 0.348 s/op
Iteration   3: 0.287 s/op
Iteration   4: 0.294 s/op
Iteration   5: 0.280 s/op
Iteration   6: 0.290 s/op
Iteration   7: 0.285 s/op
Iteration   8: 0.288 s/op
Iteration   9: 0.276 s/op
Iteration  10: 0.272 s/op

# Run progress: 57.29% complete, ETA 00:12:21
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.375 s/op
# Warmup Iteration   2: 0.312 s/op
# Warmup Iteration   3: 0.277 s/op
# Warmup Iteration   4: 0.285 s/op
# Warmup Iteration   5: 0.272 s/op
# Warmup Iteration   6: 0.280 s/op
# Warmup Iteration   7: 0.279 s/op
# Warmup Iteration   8: 0.275 s/op
# Warmup Iteration   9: 0.276 s/op
# Warmup Iteration  10: 0.312 s/op
Iteration   1: 0.292 s/op
Iteration   2: 0.270 s/op
Iteration   3: 0.276 s/op
Iteration   4: 0.275 s/op
Iteration   5: 0.275 s/op
Iteration   6: 0.283 s/op
Iteration   7: 0.332 s/op
Iteration   8: 0.279 s/op
Iteration   9: 0.270 s/op
Iteration  10: 0.278 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorATAN2":
  N = 20
  mean =      0.290 ±(99.9%) 0.022 s/op

  Histogram, s/op:
    [0.260, 0.265) = 0 
    [0.265, 0.270) = 1 
    [0.270, 0.275) = 2 
    [0.275, 0.280) = 7 
    [0.280, 0.285) = 2 
    [0.285, 0.290) = 2 
    [0.290, 0.295) = 3 
    [0.295, 0.300) = 0 
    [0.300, 0.305) = 0 
    [0.305, 0.310) = 0 
    [0.310, 0.315) = 0 
    [0.315, 0.320) = 0 
    [0.320, 0.325) = 0 
    [0.325, 0.330) = 0 
    [0.330, 0.335) = 1 
    [0.335, 0.340) = 0 
    [0.340, 0.345) = 0 
    [0.345, 0.350) = 1 
    [0.350, 0.355) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.270 s/op
     p(50.0000) =      0.281 s/op
     p(90.0000) =      0.346 s/op
     p(95.0000) =      0.356 s/op
     p(99.0000) =      0.356 s/op
     p(99.9000) =      0.356 s/op
     p(99.9900) =      0.356 s/op
     p(99.9990) =      0.356 s/op
     p(99.9999) =      0.356 s/op
    p(100.0000) =      0.356 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorCBRT

# Run progress: 58.33% complete, ETA 00:11:55
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.247 s/op
# Warmup Iteration   2: 0.166 s/op
# Warmup Iteration   3: 0.148 s/op
# Warmup Iteration   4: 0.154 s/op
# Warmup Iteration   5: 0.157 s/op
# Warmup Iteration   6: 0.161 s/op
# Warmup Iteration   7: 0.154 s/op
# Warmup Iteration   8: 0.158 s/op
# Warmup Iteration   9: 0.149 s/op
# Warmup Iteration  10: 0.148 s/op
Iteration   1: 0.215 s/op
Iteration   2: 0.162 s/op
Iteration   3: 0.146 s/op
Iteration   4: 0.155 s/op
Iteration   5: 0.148 s/op
Iteration   6: 0.145 s/op
Iteration   7: 0.153 s/op
Iteration   8: 0.151 s/op
Iteration   9: 0.146 s/op
Iteration  10: 0.152 s/op

# Run progress: 59.38% complete, ETA 00:11:28
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.274 s/op
# Warmup Iteration   2: 0.199 s/op
# Warmup Iteration   3: 0.192 s/op
# Warmup Iteration   4: 0.188 s/op
# Warmup Iteration   5: 0.202 s/op
# Warmup Iteration   6: 0.183 s/op
# Warmup Iteration   7: 0.191 s/op
# Warmup Iteration   8: 0.193 s/op
# Warmup Iteration   9: 0.186 s/op
# Warmup Iteration  10: 0.193 s/op
Iteration   1: 0.259 s/op
Iteration   2: 0.232 s/op
Iteration   3: 0.185 s/op
Iteration   4: 0.185 s/op
Iteration   5: 0.194 s/op
Iteration   6: 0.178 s/op
Iteration   7: 0.185 s/op
Iteration   8: 0.186 s/op
Iteration   9: 0.182 s/op
Iteration  10: 0.193 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorCBRT":
  N = 20
  mean =      0.178 ±(99.9%) 0.027 s/op

  Histogram, s/op:
    [0.100, 0.113) = 0 
    [0.113, 0.125) = 0 
    [0.125, 0.138) = 0 
    [0.138, 0.150) = 4 
    [0.150, 0.163) = 5 
    [0.163, 0.175) = 0 
    [0.175, 0.188) = 6 
    [0.188, 0.200) = 2 
    [0.200, 0.213) = 0 
    [0.213, 0.225) = 1 
    [0.225, 0.238) = 1 
    [0.238, 0.250) = 0 
    [0.250, 0.263) = 1 
    [0.263, 0.275) = 0 
    [0.275, 0.288) = 0 
    [0.288, 0.300) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.145 s/op
     p(50.0000) =      0.180 s/op
     p(90.0000) =      0.231 s/op
     p(95.0000) =      0.258 s/op
     p(99.0000) =      0.259 s/op
     p(99.9000) =      0.259 s/op
     p(99.9900) =      0.259 s/op
     p(99.9990) =      0.259 s/op
     p(99.9999) =      0.259 s/op
    p(100.0000) =      0.259 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorCOS

# Run progress: 60.42% complete, ETA 00:11:03
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.220 s/op
# Warmup Iteration   2: 0.158 s/op
# Warmup Iteration   3: 0.139 s/op
# Warmup Iteration   4: 0.135 s/op
# Warmup Iteration   5: 0.134 s/op
# Warmup Iteration   6: 0.150 s/op
# Warmup Iteration   7: 0.141 s/op
# Warmup Iteration   8: 0.130 s/op
# Warmup Iteration   9: 0.145 s/op
# Warmup Iteration  10: 0.188 s/op
Iteration   1: 0.134 s/op
Iteration   2: 0.133 s/op
Iteration   3: 0.141 s/op
Iteration   4: 0.134 s/op
Iteration   5: 0.134 s/op
Iteration   6: 0.145 s/op
Iteration   7: 0.170 s/op
Iteration   8: 0.152 s/op
Iteration   9: 0.134 s/op
Iteration  10: 0.142 s/op

# Run progress: 61.46% complete, ETA 00:10:37
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.220 s/op
# Warmup Iteration   2: 0.171 s/op
# Warmup Iteration   3: 0.147 s/op
# Warmup Iteration   4: 0.137 s/op
# Warmup Iteration   5: 0.149 s/op
# Warmup Iteration   6: 0.144 s/op
# Warmup Iteration   7: 0.141 s/op
# Warmup Iteration   8: 0.141 s/op
# Warmup Iteration   9: 0.156 s/op
# Warmup Iteration  10: 0.142 s/op
Iteration   1: 0.198 s/op
Iteration   2: 0.198 s/op
Iteration   3: 0.135 s/op
Iteration   4: 0.136 s/op
Iteration   5: 0.138 s/op
Iteration   6: 0.140 s/op
Iteration   7: 0.135 s/op
Iteration   8: 0.143 s/op
Iteration   9: 0.137 s/op
Iteration  10: 0.135 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorCOS":
  N = 20
  mean =      0.146 ±(99.9%) 0.017 s/op

  Histogram, s/op:
    [0.130, 0.135) = 7 
    [0.135, 0.140) = 5 
    [0.140, 0.145) = 4 
    [0.145, 0.150) = 0 
    [0.150, 0.155) = 1 
    [0.155, 0.160) = 0 
    [0.160, 0.165) = 0 
    [0.165, 0.170) = 0 
    [0.170, 0.175) = 1 
    [0.175, 0.180) = 0 
    [0.180, 0.185) = 0 
    [0.185, 0.190) = 0 
    [0.190, 0.195) = 0 
    [0.195, 0.200) = 2 

  Percentiles, s/op:
      p(0.0000) =      0.133 s/op
     p(50.0000) =      0.138 s/op
     p(90.0000) =      0.195 s/op
     p(95.0000) =      0.198 s/op
     p(99.0000) =      0.198 s/op
     p(99.9000) =      0.198 s/op
     p(99.9900) =      0.198 s/op
     p(99.9990) =      0.198 s/op
     p(99.9999) =      0.198 s/op
    p(100.0000) =      0.198 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorCOSH

# Run progress: 62.50% complete, ETA 00:10:12
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.237 s/op
# Warmup Iteration   2: 0.158 s/op
# Warmup Iteration   3: 0.128 s/op
# Warmup Iteration   4: 0.137 s/op
# Warmup Iteration   5: 0.138 s/op
# Warmup Iteration   6: 0.134 s/op
# Warmup Iteration   7: 0.132 s/op
# Warmup Iteration   8: 0.145 s/op
# Warmup Iteration   9: 0.211 s/op
# Warmup Iteration  10: 0.136 s/op
Iteration   1: 0.137 s/op
Iteration   2: 0.137 s/op
Iteration   3: 0.132 s/op
Iteration   4: 0.132 s/op
Iteration   5: 0.138 s/op
Iteration   6: 0.135 s/op
Iteration   7: 0.127 s/op
Iteration   8: 0.126 s/op
Iteration   9: 0.135 s/op
Iteration  10: 0.136 s/op

# Run progress: 63.54% complete, ETA 00:09:48
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.231 s/op
# Warmup Iteration   2: 0.152 s/op
# Warmup Iteration   3: 0.131 s/op
# Warmup Iteration   4: 0.136 s/op
# Warmup Iteration   5: 0.135 s/op
# Warmup Iteration   6: 0.136 s/op
# Warmup Iteration   7: 0.133 s/op
# Warmup Iteration   8: 0.131 s/op
# Warmup Iteration   9: 0.138 s/op
# Warmup Iteration  10: 0.191 s/op
Iteration   1: 0.150 s/op
Iteration   2: 0.132 s/op
Iteration   3: 0.131 s/op
Iteration   4: 0.126 s/op
Iteration   5: 0.129 s/op
Iteration   6: 0.134 s/op
Iteration   7: 0.129 s/op
Iteration   8: 0.137 s/op
Iteration   9: 0.138 s/op
Iteration  10: 0.133 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorCOSH":
  N = 20
  mean =      0.134 ±(99.9%) 0.005 s/op

  Histogram, s/op:
    [0.120, 0.123) = 0 
    [0.123, 0.125) = 0 
    [0.125, 0.128) = 3 
    [0.128, 0.130) = 2 
    [0.130, 0.133) = 4 
    [0.133, 0.135) = 3 
    [0.135, 0.138) = 5 
    [0.138, 0.140) = 2 
    [0.140, 0.143) = 0 
    [0.143, 0.145) = 0 
    [0.145, 0.148) = 0 
    [0.148, 0.150) = 0 
    [0.150, 0.153) = 1 
    [0.153, 0.155) = 0 
    [0.155, 0.158) = 0 
    [0.158, 0.160) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.126 s/op
     p(50.0000) =      0.134 s/op
     p(90.0000) =      0.138 s/op
     p(95.0000) =      0.150 s/op
     p(99.0000) =      0.150 s/op
     p(99.9000) =      0.150 s/op
     p(99.9900) =      0.150 s/op
     p(99.9990) =      0.150 s/op
     p(99.9999) =      0.150 s/op
    p(100.0000) =      0.150 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorEXP

# Run progress: 64.58% complete, ETA 00:09:25
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.198 s/op
# Warmup Iteration   2: 0.131 s/op
# Warmup Iteration   3: 0.118 s/op
# Warmup Iteration   4: 0.109 s/op
# Warmup Iteration   5: 0.110 s/op
# Warmup Iteration   6: 0.145 s/op
# Warmup Iteration   7: 0.198 s/op
# Warmup Iteration   8: 0.107 s/op
# Warmup Iteration   9: 0.112 s/op
# Warmup Iteration  10: 0.114 s/op
Iteration   1: 0.113 s/op
Iteration   2: 0.106 s/op
Iteration   3: 0.106 s/op
Iteration   4: 0.112 s/op
Iteration   5: 0.113 s/op
Iteration   6: 0.107 s/op
Iteration   7: 0.107 s/op
Iteration   8: 0.112 s/op
Iteration   9: 0.113 s/op
Iteration  10: 0.113 s/op

# Run progress: 65.63% complete, ETA 00:09:01
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.200 s/op
# Warmup Iteration   2: 0.129 s/op
# Warmup Iteration   3: 0.115 s/op
# Warmup Iteration   4: 0.110 s/op
# Warmup Iteration   5: 0.146 s/op
# Warmup Iteration   6: 0.123 s/op
# Warmup Iteration   7: 0.113 s/op
# Warmup Iteration   8: 0.107 s/op
# Warmup Iteration   9: 0.120 s/op
# Warmup Iteration  10: 0.121 s/op
Iteration   1: 0.118 s/op
Iteration   2: 0.110 s/op
Iteration   3: 0.108 s/op
Iteration   4: 0.135 s/op
Iteration   5: 0.234 s/op
Iteration   6: 0.149 s/op
Iteration   7: 0.117 s/op
Iteration   8: 0.115 s/op
Iteration   9: 0.110 s/op
Iteration  10: 0.109 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorEXP":
  N = 20
  mean =      0.120 ±(99.9%) 0.025 s/op

  Histogram, s/op:
    [0.100, 0.113) = 10 
    [0.113, 0.125) = 7 
    [0.125, 0.138) = 1 
    [0.138, 0.150) = 1 
    [0.150, 0.163) = 0 
    [0.163, 0.175) = 0 
    [0.175, 0.188) = 0 
    [0.188, 0.200) = 0 
    [0.200, 0.213) = 0 
    [0.213, 0.225) = 0 
    [0.225, 0.238) = 1 
    [0.238, 0.250) = 0 
    [0.250, 0.263) = 0 
    [0.263, 0.275) = 0 
    [0.275, 0.288) = 0 
    [0.288, 0.300) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.106 s/op
     p(50.0000) =      0.112 s/op
     p(90.0000) =      0.147 s/op
     p(95.0000) =      0.230 s/op
     p(99.0000) =      0.234 s/op
     p(99.9000) =      0.234 s/op
     p(99.9900) =      0.234 s/op
     p(99.9990) =      0.234 s/op
     p(99.9999) =      0.234 s/op
    p(100.0000) =      0.234 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorEXPM1

# Run progress: 66.67% complete, ETA 00:08:39
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.251 s/op
# Warmup Iteration   2: 0.164 s/op
# Warmup Iteration   3: 0.171 s/op
# Warmup Iteration   4: 0.168 s/op
# Warmup Iteration   5: 0.163 s/op
# Warmup Iteration   6: 0.174 s/op
# Warmup Iteration   7: 0.169 s/op
# Warmup Iteration   8: 0.161 s/op
# Warmup Iteration   9: 0.169 s/op
# Warmup Iteration  10: 0.229 s/op
Iteration   1: 0.179 s/op
Iteration   2: 0.172 s/op
Iteration   3: 0.161 s/op
Iteration   4: 0.159 s/op
Iteration   5: 0.170 s/op
Iteration   6: 0.161 s/op
Iteration   7: 0.165 s/op
Iteration   8: 0.171 s/op
Iteration   9: 0.162 s/op
Iteration  10: 0.158 s/op

# Run progress: 67.71% complete, ETA 00:08:17
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.246 s/op
# Warmup Iteration   2: 0.163 s/op
# Warmup Iteration   3: 0.169 s/op
# Warmup Iteration   4: 0.167 s/op
# Warmup Iteration   5: 0.169 s/op
# Warmup Iteration   6: 0.170 s/op
# Warmup Iteration   7: 0.170 s/op
# Warmup Iteration   8: 0.164 s/op
# Warmup Iteration   9: 0.170 s/op
# Warmup Iteration  10: 0.230 s/op
Iteration   1: 0.180 s/op
Iteration   2: 0.168 s/op
Iteration   3: 0.160 s/op
Iteration   4: 0.165 s/op
Iteration   5: 0.167 s/op
Iteration   6: 0.161 s/op
Iteration   7: 0.167 s/op
Iteration   8: 0.166 s/op
Iteration   9: 0.161 s/op
Iteration  10: 0.165 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorEXPM1":
  N = 20
  mean =      0.166 ±(99.9%) 0.005 s/op

  Histogram, s/op:
    [0.150, 0.153) = 0 
    [0.153, 0.155) = 0 
    [0.155, 0.158) = 0 
    [0.158, 0.160) = 2 
    [0.160, 0.163) = 6 
    [0.163, 0.165) = 2 
    [0.165, 0.167) = 4 
    [0.167, 0.170) = 1 
    [0.170, 0.173) = 3 
    [0.173, 0.175) = 0 
    [0.175, 0.178) = 0 
    [0.178, 0.180) = 1 
    [0.180, 0.183) = 1 
    [0.183, 0.185) = 0 
    [0.185, 0.188) = 0 
    [0.188, 0.190) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.158 s/op
     p(50.0000) =      0.165 s/op
     p(90.0000) =      0.179 s/op
     p(95.0000) =      0.180 s/op
     p(99.0000) =      0.180 s/op
     p(99.9000) =      0.180 s/op
     p(99.9900) =      0.180 s/op
     p(99.9990) =      0.180 s/op
     p(99.9999) =      0.180 s/op
    p(100.0000) =      0.180 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorHYPOT

# Run progress: 68.75% complete, ETA 00:07:56
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.269 s/op
# Warmup Iteration   2: 0.184 s/op
# Warmup Iteration   3: 0.174 s/op
# Warmup Iteration   4: 0.165 s/op
# Warmup Iteration   5: 0.174 s/op
# Warmup Iteration   6: 0.169 s/op
# Warmup Iteration   7: 0.168 s/op
# Warmup Iteration   8: 0.171 s/op
# Warmup Iteration   9: 0.172 s/op
# Warmup Iteration  10: 0.169 s/op
Iteration   1: 0.234 s/op
Iteration   2: 0.206 s/op
Iteration   3: 0.162 s/op
Iteration   4: 0.174 s/op
Iteration   5: 0.161 s/op
Iteration   6: 0.170 s/op
Iteration   7: 0.173 s/op
Iteration   8: 0.160 s/op
Iteration   9: 0.163 s/op
Iteration  10: 0.173 s/op

# Run progress: 69.79% complete, ETA 00:07:36
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.272 s/op
# Warmup Iteration   2: 0.193 s/op
# Warmup Iteration   3: 0.173 s/op
# Warmup Iteration   4: 0.181 s/op
# Warmup Iteration   5: 0.176 s/op
# Warmup Iteration   6: 0.170 s/op
# Warmup Iteration   7: 0.179 s/op
# Warmup Iteration   8: 0.175 s/op
# Warmup Iteration   9: 0.174 s/op
# Warmup Iteration  10: 0.175 s/op
Iteration   1: 0.233 s/op
Iteration   2: 0.212 s/op
Iteration   3: 0.171 s/op
Iteration   4: 0.174 s/op
Iteration   5: 0.181 s/op
Iteration   6: 0.179 s/op
Iteration   7: 0.172 s/op
Iteration   8: 0.171 s/op
Iteration   9: 0.171 s/op
Iteration  10: 0.171 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorHYPOT":
  N = 20
  mean =      0.180 ±(99.9%) 0.019 s/op

  Histogram, s/op:
    [0.150, 0.155) = 0 
    [0.155, 0.160) = 1 
    [0.160, 0.165) = 3 
    [0.165, 0.170) = 1 
    [0.170, 0.175) = 9 
    [0.175, 0.180) = 1 
    [0.180, 0.185) = 1 
    [0.185, 0.190) = 0 
    [0.190, 0.195) = 0 
    [0.195, 0.200) = 0 
    [0.200, 0.205) = 0 
    [0.205, 0.210) = 1 
    [0.210, 0.215) = 1 
    [0.215, 0.220) = 0 
    [0.220, 0.225) = 0 
    [0.225, 0.230) = 0 
    [0.230, 0.235) = 2 

  Percentiles, s/op:
      p(0.0000) =      0.160 s/op
     p(50.0000) =      0.172 s/op
     p(90.0000) =      0.231 s/op
     p(95.0000) =      0.234 s/op
     p(99.0000) =      0.234 s/op
     p(99.9000) =      0.234 s/op
     p(99.9900) =      0.234 s/op
     p(99.9990) =      0.234 s/op
     p(99.9999) =      0.234 s/op
    p(100.0000) =      0.234 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorLOG

# Run progress: 70.83% complete, ETA 00:07:16
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.228 s/op
# Warmup Iteration   2: 0.163 s/op
# Warmup Iteration   3: 0.144 s/op
# Warmup Iteration   4: 0.142 s/op
# Warmup Iteration   5: 0.131 s/op
# Warmup Iteration   6: 0.133 s/op
# Warmup Iteration   7: 0.164 s/op
# Warmup Iteration   8: 0.151 s/op
# Warmup Iteration   9: 0.140 s/op
# Warmup Iteration  10: 0.139 s/op
Iteration   1: 0.140 s/op
Iteration   2: 0.133 s/op
Iteration   3: 0.178 s/op
Iteration   4: 0.240 s/op
Iteration   5: 0.134 s/op
Iteration   6: 0.135 s/op
Iteration   7: 0.140 s/op
Iteration   8: 0.131 s/op
Iteration   9: 0.131 s/op
Iteration  10: 0.137 s/op

# Run progress: 71.88% complete, ETA 00:06:56
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.227 s/op
# Warmup Iteration   2: 0.162 s/op
# Warmup Iteration   3: 0.157 s/op
# Warmup Iteration   4: 0.138 s/op
# Warmup Iteration   5: 0.144 s/op
# Warmup Iteration   6: 0.142 s/op
# Warmup Iteration   7: 0.139 s/op
# Warmup Iteration   8: 0.133 s/op
# Warmup Iteration   9: 0.137 s/op
# Warmup Iteration  10: 0.208 s/op
Iteration   1: 0.148 s/op
Iteration   2: 0.134 s/op
Iteration   3: 0.139 s/op
Iteration   4: 0.132 s/op
Iteration   5: 0.130 s/op
Iteration   6: 0.135 s/op
Iteration   7: 0.139 s/op
Iteration   8: 0.134 s/op
Iteration   9: 0.139 s/op
Iteration  10: 0.134 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorLOG":
  N = 20
  mean =      0.143 ±(99.9%) 0.022 s/op

  Histogram, s/op:
    [0.100, 0.113) = 0 
    [0.113, 0.125) = 0 
    [0.125, 0.138) = 12 
    [0.138, 0.150) = 6 
    [0.150, 0.163) = 0 
    [0.163, 0.175) = 0 
    [0.175, 0.188) = 1 
    [0.188, 0.200) = 0 
    [0.200, 0.213) = 0 
    [0.213, 0.225) = 0 
    [0.225, 0.238) = 0 
    [0.238, 0.250) = 1 
    [0.250, 0.263) = 0 
    [0.263, 0.275) = 0 
    [0.275, 0.288) = 0 
    [0.288, 0.300) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.130 s/op
     p(50.0000) =      0.135 s/op
     p(90.0000) =      0.175 s/op
     p(95.0000) =      0.237 s/op
     p(99.0000) =      0.240 s/op
     p(99.9000) =      0.240 s/op
     p(99.9900) =      0.240 s/op
     p(99.9990) =      0.240 s/op
     p(99.9999) =      0.240 s/op
    p(100.0000) =      0.240 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorLOG10

# Run progress: 72.92% complete, ETA 00:06:36
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.226 s/op
# Warmup Iteration   2: 0.155 s/op
# Warmup Iteration   3: 0.158 s/op
# Warmup Iteration   4: 0.149 s/op
# Warmup Iteration   5: 0.151 s/op
# Warmup Iteration   6: 0.161 s/op
# Warmup Iteration   7: 0.157 s/op
# Warmup Iteration   8: 0.159 s/op
# Warmup Iteration   9: 0.155 s/op
# Warmup Iteration  10: 0.152 s/op
Iteration   1: 0.208 s/op
Iteration   2: 0.185 s/op
Iteration   3: 0.146 s/op
Iteration   4: 0.154 s/op
Iteration   5: 0.159 s/op
Iteration   6: 0.155 s/op
Iteration   7: 0.147 s/op
Iteration   8: 0.152 s/op
Iteration   9: 0.151 s/op
Iteration  10: 0.145 s/op

# Run progress: 73.96% complete, ETA 00:06:17
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.240 s/op
# Warmup Iteration   2: 0.157 s/op
# Warmup Iteration   3: 0.160 s/op
# Warmup Iteration   4: 0.164 s/op
# Warmup Iteration   5: 0.156 s/op
# Warmup Iteration   6: 0.155 s/op
# Warmup Iteration   7: 0.160 s/op
# Warmup Iteration   8: 0.150 s/op
# Warmup Iteration   9: 0.157 s/op
# Warmup Iteration  10: 0.155 s/op
Iteration   1: 0.211 s/op
Iteration   2: 0.225 s/op
Iteration   3: 0.152 s/op
Iteration   4: 0.149 s/op
Iteration   5: 0.147 s/op
Iteration   6: 0.156 s/op
Iteration   7: 0.146 s/op
Iteration   8: 0.144 s/op
Iteration   9: 0.152 s/op
Iteration  10: 0.152 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorLOG10":
  N = 20
  mean =      0.162 ±(99.9%) 0.021 s/op

  Histogram, s/op:
    [0.140, 0.145) = 1 
    [0.145, 0.150) = 6 
    [0.150, 0.155) = 6 
    [0.155, 0.160) = 3 
    [0.160, 0.165) = 0 
    [0.165, 0.170) = 0 
    [0.170, 0.175) = 0 
    [0.175, 0.180) = 0 
    [0.180, 0.185) = 0 
    [0.185, 0.190) = 1 
    [0.190, 0.195) = 0 
    [0.195, 0.200) = 0 
    [0.200, 0.205) = 0 
    [0.205, 0.210) = 1 
    [0.210, 0.215) = 1 
    [0.215, 0.220) = 0 
    [0.220, 0.225) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.144 s/op
     p(50.0000) =      0.152 s/op
     p(90.0000) =      0.211 s/op
     p(95.0000) =      0.225 s/op
     p(99.0000) =      0.225 s/op
     p(99.9000) =      0.225 s/op
     p(99.9900) =      0.225 s/op
     p(99.9990) =      0.225 s/op
     p(99.9999) =      0.225 s/op
    p(100.0000) =      0.225 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorLOG1P

# Run progress: 75.00% complete, ETA 00:05:59
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.290 s/op
# Warmup Iteration   2: 0.173 s/op
# Warmup Iteration   3: 0.165 s/op
# Warmup Iteration   4: 0.168 s/op
# Warmup Iteration   5: 0.165 s/op
# Warmup Iteration   6: 0.162 s/op
# Warmup Iteration   7: 0.170 s/op
# Warmup Iteration   8: 0.165 s/op
# Warmup Iteration   9: 0.165 s/op
# Warmup Iteration  10: 0.168 s/op
Iteration   1: 0.215 s/op
Iteration   2: 0.198 s/op
Iteration   3: 0.162 s/op
Iteration   4: 0.156 s/op
Iteration   5: 0.162 s/op
Iteration   6: 0.170 s/op
Iteration   7: 0.156 s/op
Iteration   8: 0.187 s/op
Iteration   9: 0.167 s/op
Iteration  10: 0.160 s/op

# Run progress: 76.04% complete, ETA 00:05:41
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.257 s/op
# Warmup Iteration   2: 0.175 s/op
# Warmup Iteration   3: 0.164 s/op
# Warmup Iteration   4: 0.161 s/op
# Warmup Iteration   5: 0.157 s/op
# Warmup Iteration   6: 0.159 s/op
# Warmup Iteration   7: 0.165 s/op
# Warmup Iteration   8: 0.159 s/op
# Warmup Iteration   9: 0.161 s/op
# Warmup Iteration  10: 0.164 s/op
Iteration   1: 0.211 s/op
Iteration   2: 0.215 s/op
Iteration   3: 0.159 s/op
Iteration   4: 0.160 s/op
Iteration   5: 0.159 s/op
Iteration   6: 0.161 s/op
Iteration   7: 0.153 s/op
Iteration   8: 0.161 s/op
Iteration   9: 0.159 s/op
Iteration  10: 0.157 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorLOG1P":
  N = 20
  mean =      0.171 ±(99.9%) 0.018 s/op

  Histogram, s/op:
    [0.150, 0.155) = 1 
    [0.155, 0.160) = 6 
    [0.160, 0.165) = 6 
    [0.165, 0.170) = 2 
    [0.170, 0.175) = 0 
    [0.175, 0.180) = 0 
    [0.180, 0.185) = 0 
    [0.185, 0.190) = 1 
    [0.190, 0.195) = 0 
    [0.195, 0.200) = 1 
    [0.200, 0.205) = 0 
    [0.205, 0.210) = 0 
    [0.210, 0.215) = 2 
    [0.215, 0.220) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.153 s/op
     p(50.0000) =      0.161 s/op
     p(90.0000) =      0.214 s/op
     p(95.0000) =      0.215 s/op
     p(99.0000) =      0.215 s/op
     p(99.9000) =      0.215 s/op
     p(99.9900) =      0.215 s/op
     p(99.9990) =      0.215 s/op
     p(99.9999) =      0.215 s/op
    p(100.0000) =      0.215 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorMUL0

# Run progress: 77.08% complete, ETA 00:05:23
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.185 s/op
# Warmup Iteration   2: 0.111 s/op
# Warmup Iteration   3: 0.099 s/op
# Warmup Iteration   4: 0.128 s/op
# Warmup Iteration   5: 0.108 s/op
# Warmup Iteration   6: 0.102 s/op
# Warmup Iteration   7: 0.094 s/op
# Warmup Iteration   8: 0.096 s/op
# Warmup Iteration   9: 0.094 s/op
# Warmup Iteration  10: 0.102 s/op
Iteration   1: 0.102 s/op
Iteration   2: 0.092 s/op
Iteration   3: 0.101 s/op
Iteration   4: 0.094 s/op
Iteration   5: 0.128 s/op
Iteration   6: 0.131 s/op
Iteration   7: 0.092 s/op
Iteration   8: 0.094 s/op
Iteration   9: 0.097 s/op
Iteration  10: 0.098 s/op

# Run progress: 78.13% complete, ETA 00:05:05
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.178 s/op
# Warmup Iteration   2: 0.108 s/op
# Warmup Iteration   3: 0.105 s/op
# Warmup Iteration   4: 0.104 s/op
# Warmup Iteration   5: 0.118 s/op
# Warmup Iteration   6: 0.112 s/op
# Warmup Iteration   7: 0.101 s/op
# Warmup Iteration   8: 0.099 s/op
# Warmup Iteration   9: 0.101 s/op
# Warmup Iteration  10: 0.097 s/op
Iteration   1: 0.095 s/op
Iteration   2: 0.098 s/op
Iteration   3: 0.100 s/op
Iteration   4: 0.101 s/op
Iteration   5: 0.192 s/op
Iteration   6: 0.109 s/op
Iteration   7: 0.101 s/op
Iteration   8: 0.101 s/op
Iteration   9: 0.096 s/op
Iteration  10: 0.093 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorMUL0":
  N = 20
  mean =      0.106 ±(99.9%) 0.020 s/op

  Histogram, s/op:
    [0.000, 0.013) = 0 
    [0.013, 0.025) = 0 
    [0.025, 0.038) = 0 
    [0.038, 0.050) = 0 
    [0.050, 0.063) = 0 
    [0.063, 0.075) = 0 
    [0.075, 0.088) = 0 
    [0.088, 0.100) = 11 
    [0.100, 0.113) = 6 
    [0.113, 0.125) = 0 
    [0.125, 0.138) = 2 
    [0.138, 0.150) = 0 
    [0.150, 0.163) = 0 
    [0.163, 0.175) = 0 
    [0.175, 0.188) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.092 s/op
     p(50.0000) =      0.099 s/op
     p(90.0000) =      0.131 s/op
     p(95.0000) =      0.189 s/op
     p(99.0000) =      0.192 s/op
     p(99.9000) =      0.192 s/op
     p(99.9900) =      0.192 s/op
     p(99.9990) =      0.192 s/op
     p(99.9999) =      0.192 s/op
    p(100.0000) =      0.192 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorMUL1

# Run progress: 79.17% complete, ETA 00:04:48
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.189 s/op
# Warmup Iteration   2: 0.108 s/op
# Warmup Iteration   3: 0.095 s/op
# Warmup Iteration   4: 0.096 s/op
# Warmup Iteration   5: 0.103 s/op
# Warmup Iteration   6: 0.105 s/op
# Warmup Iteration   7: 0.097 s/op
# Warmup Iteration   8: 0.137 s/op
# Warmup Iteration   9: 0.099 s/op
# Warmup Iteration  10: 0.100 s/op
Iteration   1: 0.102 s/op
Iteration   2: 0.095 s/op
Iteration   3: 0.093 s/op
Iteration   4: 0.098 s/op
Iteration   5: 0.159 s/op
Iteration   6: 0.100 s/op
Iteration   7: 0.099 s/op
Iteration   8: 0.093 s/op
Iteration   9: 0.103 s/op
Iteration  10: 0.099 s/op

# Run progress: 80.21% complete, ETA 00:04:31
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.184 s/op
# Warmup Iteration   2: 0.112 s/op
# Warmup Iteration   3: 0.103 s/op
# Warmup Iteration   4: 0.099 s/op
# Warmup Iteration   5: 0.118 s/op
# Warmup Iteration   6: 0.108 s/op
# Warmup Iteration   7: 0.106 s/op
# Warmup Iteration   8: 0.102 s/op
# Warmup Iteration   9: 0.100 s/op
# Warmup Iteration  10: 0.114 s/op
Iteration   1: 0.094 s/op
Iteration   2: 0.105 s/op
Iteration   3: 0.100 s/op
Iteration   4: 0.097 s/op
Iteration   5: 0.169 s/op
Iteration   6: 0.105 s/op
Iteration   7: 0.103 s/op
Iteration   8: 0.096 s/op
Iteration   9: 0.103 s/op
Iteration  10: 0.097 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorMUL1":
  N = 20
  mean =      0.106 ±(99.9%) 0.018 s/op

  Histogram, s/op:
    [0.090, 0.095) = 3 
    [0.095, 0.100) = 8 
    [0.100, 0.105) = 6 
    [0.105, 0.110) = 1 
    [0.110, 0.115) = 0 
    [0.115, 0.120) = 0 
    [0.120, 0.125) = 0 
    [0.125, 0.130) = 0 
    [0.130, 0.135) = 0 
    [0.135, 0.140) = 0 
    [0.140, 0.145) = 0 
    [0.145, 0.150) = 0 
    [0.150, 0.155) = 0 
    [0.155, 0.160) = 1 
    [0.160, 0.165) = 0 
    [0.165, 0.170) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.093 s/op
     p(50.0000) =      0.100 s/op
     p(90.0000) =      0.154 s/op
     p(95.0000) =      0.168 s/op
     p(99.0000) =      0.169 s/op
     p(99.9000) =      0.169 s/op
     p(99.9900) =      0.169 s/op
     p(99.9990) =      0.169 s/op
     p(99.9999) =      0.169 s/op
    p(100.0000) =      0.169 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorMUL2

# Run progress: 81.25% complete, ETA 00:04:14
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.178 s/op
# Warmup Iteration   2: 0.111 s/op
# Warmup Iteration   3: 0.096 s/op
# Warmup Iteration   4: 0.101 s/op
# Warmup Iteration   5: 0.104 s/op
# Warmup Iteration   6: 0.102 s/op
# Warmup Iteration   7: 0.102 s/op
# Warmup Iteration   8: 0.120 s/op
# Warmup Iteration   9: 0.108 s/op
# Warmup Iteration  10: 0.103 s/op
Iteration   1: 0.095 s/op
Iteration   2: 0.099 s/op
Iteration   3: 0.112 s/op
Iteration   4: 0.201 s/op
Iteration   5: 0.104 s/op
Iteration   6: 0.092 s/op
Iteration   7: 0.092 s/op
Iteration   8: 0.103 s/op
Iteration   9: 0.101 s/op
Iteration  10: 0.094 s/op

# Run progress: 82.29% complete, ETA 00:03:58
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.177 s/op
# Warmup Iteration   2: 0.113 s/op
# Warmup Iteration   3: 0.098 s/op
# Warmup Iteration   4: 0.102 s/op
# Warmup Iteration   5: 0.115 s/op
# Warmup Iteration   6: 0.117 s/op
# Warmup Iteration   7: 0.105 s/op
# Warmup Iteration   8: 0.092 s/op
# Warmup Iteration   9: 0.095 s/op
# Warmup Iteration  10: 0.096 s/op
Iteration   1: 0.103 s/op
Iteration   2: 0.103 s/op
Iteration   3: 0.092 s/op
Iteration   4: 0.101 s/op
Iteration   5: 0.187 s/op
Iteration   6: 0.165 s/op
Iteration   7: 0.094 s/op
Iteration   8: 0.091 s/op
Iteration   9: 0.097 s/op
Iteration  10: 0.100 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorMUL2":
  N = 20
  mean =      0.111 ±(99.9%) 0.028 s/op

  Histogram, s/op:
    [0.000, 0.025) = 0 
    [0.025, 0.050) = 0 
    [0.050, 0.075) = 0 
    [0.075, 0.100) = 9 
    [0.100, 0.125) = 8 
    [0.125, 0.150) = 0 
    [0.150, 0.175) = 1 
    [0.175, 0.200) = 1 
    [0.200, 0.225) = 1 
    [0.225, 0.250) = 0 
    [0.250, 0.275) = 0 
    [0.275, 0.300) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.091 s/op
     p(50.0000) =      0.100 s/op
     p(90.0000) =      0.185 s/op
     p(95.0000) =      0.201 s/op
     p(99.0000) =      0.201 s/op
     p(99.9000) =      0.201 s/op
     p(99.9900) =      0.201 s/op
     p(99.9990) =      0.201 s/op
     p(99.9999) =      0.201 s/op
    p(100.0000) =      0.201 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorPOW

# Run progress: 83.33% complete, ETA 00:03:42
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.869 s/op
# Warmup Iteration   2: 0.787 s/op
# Warmup Iteration   3: 0.780 s/op
# Warmup Iteration   4: 0.849 s/op
# Warmup Iteration   5: 0.770 s/op
# Warmup Iteration   6: 0.767 s/op
# Warmup Iteration   7: 0.770 s/op
# Warmup Iteration   8: 0.765 s/op
# Warmup Iteration   9: 0.768 s/op
# Warmup Iteration  10: 0.765 s/op
Iteration   1: 0.765 s/op
Iteration   2: 0.766 s/op
Iteration   3: 0.768 s/op
Iteration   4: 0.770 s/op
Iteration   5: 0.760 s/op
Iteration   6: 0.765 s/op
Iteration   7: 0.763 s/op
Iteration   8: 0.750 s/op
Iteration   9: 0.756 s/op
Iteration  10: 0.745 s/op

# Run progress: 84.38% complete, ETA 00:03:28
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.841 s/op
# Warmup Iteration   2: 0.757 s/op
# Warmup Iteration   3: 0.750 s/op
# Warmup Iteration   4: 0.827 s/op
# Warmup Iteration   5: 0.755 s/op
# Warmup Iteration   6: 0.747 s/op
# Warmup Iteration   7: 0.750 s/op
# Warmup Iteration   8: 0.747 s/op
# Warmup Iteration   9: 0.755 s/op
# Warmup Iteration  10: 0.746 s/op
Iteration   1: 0.746 s/op
Iteration   2: 0.742 s/op
Iteration   3: 0.750 s/op
Iteration   4: 0.741 s/op
Iteration   5: 0.741 s/op
Iteration   6: 0.736 s/op
Iteration   7: 0.744 s/op
Iteration   8: 0.737 s/op
Iteration   9: 0.737 s/op
Iteration  10: 0.738 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorPOW":
  N = 20
  mean =      0.751 ±(99.9%) 0.010 s/op

  Histogram, s/op:
    [0.730, 0.732) = 0 
    [0.732, 0.735) = 0 
    [0.735, 0.737) = 3 
    [0.737, 0.740) = 1 
    [0.740, 0.742) = 3 
    [0.742, 0.745) = 1 
    [0.745, 0.747) = 2 
    [0.747, 0.750) = 1 
    [0.750, 0.753) = 1 
    [0.753, 0.755) = 0 
    [0.755, 0.758) = 1 
    [0.758, 0.760) = 0 
    [0.760, 0.763) = 1 
    [0.763, 0.765) = 2 
    [0.765, 0.768) = 2 
    [0.768, 0.770) = 2 

  Percentiles, s/op:
      p(0.0000) =      0.736 s/op
     p(50.0000) =      0.748 s/op
     p(90.0000) =      0.768 s/op
     p(95.0000) =      0.770 s/op
     p(99.0000) =      0.770 s/op
     p(99.9000) =      0.770 s/op
     p(99.9900) =      0.770 s/op
     p(99.9990) =      0.770 s/op
     p(99.9999) =      0.770 s/op
    p(100.0000) =      0.770 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorPOW0

# Run progress: 85.42% complete, ETA 00:03:15
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.615 s/op
# Warmup Iteration   2: 0.546 s/op
# Warmup Iteration   3: 0.528 s/op
# Warmup Iteration   4: 0.595 s/op
# Warmup Iteration   5: 0.521 s/op
# Warmup Iteration   6: 0.523 s/op
# Warmup Iteration   7: 0.579 s/op
# Warmup Iteration   8: 0.517 s/op
# Warmup Iteration   9: 0.516 s/op
# Warmup Iteration  10: 0.500 s/op
Iteration   1: 0.508 s/op
Iteration   2: 0.499 s/op
Iteration   3: 0.518 s/op
Iteration   4: 0.517 s/op
Iteration   5: 0.508 s/op
Iteration   6: 0.505 s/op
Iteration   7: 0.503 s/op
Iteration   8: 0.502 s/op
Iteration   9: 0.506 s/op
Iteration  10: 0.501 s/op

# Run progress: 86.46% complete, ETA 00:03:01
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.601 s/op
# Warmup Iteration   2: 0.563 s/op
# Warmup Iteration   3: 0.519 s/op
# Warmup Iteration   4: 0.501 s/op
# Warmup Iteration   5: 0.609 s/op
# Warmup Iteration   6: 0.518 s/op
# Warmup Iteration   7: 0.522 s/op
# Warmup Iteration   8: 0.500 s/op
# Warmup Iteration   9: 0.496 s/op
# Warmup Iteration  10: 0.493 s/op
Iteration   1: 0.496 s/op
Iteration   2: 0.492 s/op
Iteration   3: 0.497 s/op
Iteration   4: 0.504 s/op
Iteration   5: 0.518 s/op
Iteration   6: 0.514 s/op
Iteration   7: 0.509 s/op
Iteration   8: 0.506 s/op
Iteration   9: 0.494 s/op
Iteration  10: 0.492 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorPOW0":
  N = 20
  mean =      0.504 ±(99.9%) 0.007 s/op

  Histogram, s/op:
    [0.490, 0.493) = 2 
    [0.493, 0.495) = 1 
    [0.495, 0.498) = 2 
    [0.498, 0.500) = 1 
    [0.500, 0.503) = 2 
    [0.503, 0.505) = 2 
    [0.505, 0.508) = 3 
    [0.508, 0.510) = 3 
    [0.510, 0.513) = 0 
    [0.513, 0.515) = 1 
    [0.515, 0.518) = 1 
    [0.518, 0.520) = 2 

  Percentiles, s/op:
      p(0.0000) =      0.492 s/op
     p(50.0000) =      0.505 s/op
     p(90.0000) =      0.517 s/op
     p(95.0000) =      0.518 s/op
     p(99.0000) =      0.518 s/op
     p(99.9000) =      0.518 s/op
     p(99.9900) =      0.518 s/op
     p(99.9990) =      0.518 s/op
     p(99.9999) =      0.518 s/op
    p(100.0000) =      0.518 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorPOW1

# Run progress: 87.50% complete, ETA 00:02:46
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.870 s/op
# Warmup Iteration   2: 0.775 s/op
# Warmup Iteration   3: 0.746 s/op
# Warmup Iteration   4: 0.906 s/op
# Warmup Iteration   5: 0.755 s/op
# Warmup Iteration   6: 0.757 s/op
# Warmup Iteration   7: 0.750 s/op
# Warmup Iteration   8: 0.757 s/op
# Warmup Iteration   9: 0.750 s/op
# Warmup Iteration  10: 0.759 s/op
Iteration   1: 0.751 s/op
Iteration   2: 0.760 s/op
Iteration   3: 0.751 s/op
Iteration   4: 0.758 s/op
Iteration   5: 0.753 s/op
Iteration   6: 0.758 s/op
Iteration   7: 0.749 s/op
Iteration   8: 0.757 s/op
Iteration   9: 0.748 s/op
Iteration  10: 0.758 s/op

# Run progress: 88.54% complete, ETA 00:02:33
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.838 s/op
# Warmup Iteration   2: 0.776 s/op
# Warmup Iteration   3: 0.768 s/op
# Warmup Iteration   4: 0.799 s/op
# Warmup Iteration   5: 0.727 s/op
# Warmup Iteration   6: 0.721 s/op
# Warmup Iteration   7: 0.733 s/op
# Warmup Iteration   8: 0.724 s/op
# Warmup Iteration   9: 0.730 s/op
# Warmup Iteration  10: 0.727 s/op
Iteration   1: 0.733 s/op
Iteration   2: 0.754 s/op
Iteration   3: 0.755 s/op
Iteration   4: 0.748 s/op
Iteration   5: 0.748 s/op
Iteration   6: 0.731 s/op
Iteration   7: 0.725 s/op
Iteration   8: 0.730 s/op
Iteration   9: 0.724 s/op
Iteration  10: 0.746 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorPOW1":
  N = 20
  mean =      0.747 ±(99.9%) 0.010 s/op

  Histogram, s/op:
    [0.720, 0.725) = 1 
    [0.725, 0.730) = 1 
    [0.730, 0.735) = 3 
    [0.735, 0.740) = 0 
    [0.740, 0.745) = 0 
    [0.745, 0.750) = 5 
    [0.750, 0.755) = 5 
    [0.755, 0.760) = 4 
    [0.760, 0.765) = 1 
    [0.765, 0.770) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.724 s/op
     p(50.0000) =      0.750 s/op
     p(90.0000) =      0.758 s/op
     p(95.0000) =      0.760 s/op
     p(99.0000) =      0.760 s/op
     p(99.9000) =      0.760 s/op
     p(99.9900) =      0.760 s/op
     p(99.9990) =      0.760 s/op
     p(99.9999) =      0.760 s/op
    p(100.0000) =      0.760 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorPOW2

# Run progress: 89.58% complete, ETA 00:02:19
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.388 s/op
# Warmup Iteration   2: 0.313 s/op
# Warmup Iteration   3: 0.279 s/op
# Warmup Iteration   4: 0.270 s/op
# Warmup Iteration   5: 0.368 s/op
# Warmup Iteration   6: 0.279 s/op
# Warmup Iteration   7: 0.252 s/op
# Warmup Iteration   8: 0.286 s/op
# Warmup Iteration   9: 0.255 s/op
# Warmup Iteration  10: 0.272 s/op
Iteration   1: 0.257 s/op
Iteration   2: 0.270 s/op
Iteration   3: 0.260 s/op
Iteration   4: 0.263 s/op
Iteration   5: 0.264 s/op
Iteration   6: 0.265 s/op
Iteration   7: 0.264 s/op
Iteration   8: 0.262 s/op
Iteration   9: 0.267 s/op
Iteration  10: 0.267 s/op

# Run progress: 90.63% complete, ETA 00:02:05
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.387 s/op
# Warmup Iteration   2: 0.331 s/op
# Warmup Iteration   3: 0.263 s/op
# Warmup Iteration   4: 0.287 s/op
# Warmup Iteration   5: 0.373 s/op
# Warmup Iteration   6: 0.271 s/op
# Warmup Iteration   7: 0.275 s/op
# Warmup Iteration   8: 0.258 s/op
# Warmup Iteration   9: 0.274 s/op
# Warmup Iteration  10: 0.254 s/op
Iteration   1: 0.279 s/op
Iteration   2: 0.255 s/op
Iteration   3: 0.273 s/op
Iteration   4: 0.257 s/op
Iteration   5: 0.279 s/op
Iteration   6: 0.261 s/op
Iteration   7: 0.266 s/op
Iteration   8: 0.264 s/op
Iteration   9: 0.277 s/op
Iteration  10: 0.266 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorPOW2":
  N = 20
  mean =      0.266 ±(99.9%) 0.006 s/op

  Histogram, s/op:
    [0.250, 0.253) = 0 
    [0.253, 0.255) = 0 
    [0.255, 0.258) = 3 
    [0.258, 0.260) = 0 
    [0.260, 0.263) = 3 
    [0.263, 0.265) = 5 
    [0.265, 0.268) = 4 
    [0.268, 0.270) = 1 
    [0.270, 0.273) = 0 
    [0.273, 0.275) = 1 
    [0.275, 0.278) = 1 
    [0.278, 0.280) = 2 

  Percentiles, s/op:
      p(0.0000) =      0.255 s/op
     p(50.0000) =      0.265 s/op
     p(90.0000) =      0.279 s/op
     p(95.0000) =      0.279 s/op
     p(99.0000) =      0.279 s/op
     p(99.9000) =      0.279 s/op
     p(99.9900) =      0.279 s/op
     p(99.9990) =      0.279 s/op
     p(99.9999) =      0.279 s/op
    p(100.0000) =      0.279 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorSIN

# Run progress: 91.67% complete, ETA 00:01:50
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.231 s/op
# Warmup Iteration   2: 0.163 s/op
# Warmup Iteration   3: 0.162 s/op
# Warmup Iteration   4: 0.156 s/op
# Warmup Iteration   5: 0.161 s/op
# Warmup Iteration   6: 0.167 s/op
# Warmup Iteration   7: 0.159 s/op
# Warmup Iteration   8: 0.169 s/op
# Warmup Iteration   9: 0.163 s/op
# Warmup Iteration  10: 0.157 s/op
Iteration   1: 0.219 s/op
Iteration   2: 0.214 s/op
Iteration   3: 0.155 s/op
Iteration   4: 0.162 s/op
Iteration   5: 0.159 s/op
Iteration   6: 0.155 s/op
Iteration   7: 0.166 s/op
Iteration   8: 0.161 s/op
Iteration   9: 0.155 s/op
Iteration  10: 0.159 s/op

# Run progress: 92.71% complete, ETA 00:01:36
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.229 s/op
# Warmup Iteration   2: 0.161 s/op
# Warmup Iteration   3: 0.161 s/op
# Warmup Iteration   4: 0.153 s/op
# Warmup Iteration   5: 0.158 s/op
# Warmup Iteration   6: 0.169 s/op
# Warmup Iteration   7: 0.154 s/op
# Warmup Iteration   8: 0.155 s/op
# Warmup Iteration   9: 0.172 s/op
# Warmup Iteration  10: 0.153 s/op
Iteration   1: 0.215 s/op
Iteration   2: 0.190 s/op
Iteration   3: 0.151 s/op
Iteration   4: 0.154 s/op
Iteration   5: 0.157 s/op
Iteration   6: 0.151 s/op
Iteration   7: 0.152 s/op
Iteration   8: 0.164 s/op
Iteration   9: 0.156 s/op
Iteration  10: 0.151 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorSIN":
  N = 20
  mean =      0.167 ±(99.9%) 0.020 s/op

  Histogram, s/op:
    [0.150, 0.155) = 7 
    [0.155, 0.160) = 5 
    [0.160, 0.165) = 3 
    [0.165, 0.170) = 1 
    [0.170, 0.175) = 0 
    [0.175, 0.180) = 0 
    [0.180, 0.185) = 0 
    [0.185, 0.190) = 0 
    [0.190, 0.195) = 1 
    [0.195, 0.200) = 0 
    [0.200, 0.205) = 0 
    [0.205, 0.210) = 0 
    [0.210, 0.215) = 1 
    [0.215, 0.220) = 2 

  Percentiles, s/op:
      p(0.0000) =      0.151 s/op
     p(50.0000) =      0.158 s/op
     p(90.0000) =      0.215 s/op
     p(95.0000) =      0.219 s/op
     p(99.0000) =      0.219 s/op
     p(99.9000) =      0.219 s/op
     p(99.9900) =      0.219 s/op
     p(99.9990) =      0.219 s/op
     p(99.9999) =      0.219 s/op
    p(100.0000) =      0.219 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorSINH

# Run progress: 93.75% complete, ETA 00:01:21
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.270 s/op
# Warmup Iteration   2: 0.177 s/op
# Warmup Iteration   3: 0.176 s/op
# Warmup Iteration   4: 0.163 s/op
# Warmup Iteration   5: 0.160 s/op
# Warmup Iteration   6: 0.178 s/op
# Warmup Iteration   7: 0.163 s/op
# Warmup Iteration   8: 0.173 s/op
# Warmup Iteration   9: 0.188 s/op
# Warmup Iteration  10: 0.171 s/op
Iteration   1: 0.238 s/op
Iteration   2: 0.205 s/op
Iteration   3: 0.164 s/op
Iteration   4: 0.174 s/op
Iteration   5: 0.166 s/op
Iteration   6: 0.168 s/op
Iteration   7: 0.181 s/op
Iteration   8: 0.167 s/op
Iteration   9: 0.168 s/op
Iteration  10: 0.178 s/op

# Run progress: 94.79% complete, ETA 00:01:07
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.265 s/op
# Warmup Iteration   2: 0.183 s/op
# Warmup Iteration   3: 0.159 s/op
# Warmup Iteration   4: 0.162 s/op
# Warmup Iteration   5: 0.172 s/op
# Warmup Iteration   6: 0.159 s/op
# Warmup Iteration   7: 0.162 s/op
# Warmup Iteration   8: 0.171 s/op
# Warmup Iteration   9: 0.157 s/op
# Warmup Iteration  10: 0.162 s/op
Iteration   1: 0.233 s/op
Iteration   2: 0.197 s/op
Iteration   3: 0.161 s/op
Iteration   4: 0.162 s/op
Iteration   5: 0.156 s/op
Iteration   6: 0.166 s/op
Iteration   7: 0.164 s/op
Iteration   8: 0.155 s/op
Iteration   9: 0.164 s/op
Iteration  10: 0.162 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorSINH":
  N = 20
  mean =      0.176 ±(99.9%) 0.021 s/op

  Histogram, s/op:
    [0.150, 0.155) = 1 
    [0.155, 0.160) = 1 
    [0.160, 0.165) = 6 
    [0.165, 0.170) = 5 
    [0.170, 0.175) = 1 
    [0.175, 0.180) = 1 
    [0.180, 0.185) = 1 
    [0.185, 0.190) = 0 
    [0.190, 0.195) = 0 
    [0.195, 0.200) = 1 
    [0.200, 0.205) = 1 
    [0.205, 0.210) = 0 
    [0.210, 0.215) = 0 
    [0.215, 0.220) = 0 
    [0.220, 0.225) = 0 
    [0.225, 0.230) = 0 
    [0.230, 0.235) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.155 s/op
     p(50.0000) =      0.167 s/op
     p(90.0000) =      0.230 s/op
     p(95.0000) =      0.238 s/op
     p(99.0000) =      0.238 s/op
     p(99.9000) =      0.238 s/op
     p(99.9900) =      0.238 s/op
     p(99.9990) =      0.238 s/op
     p(99.9999) =      0.238 s/op
    p(100.0000) =      0.238 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorTAN

# Run progress: 95.83% complete, ETA 00:00:53
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.280 s/op
# Warmup Iteration   2: 0.203 s/op
# Warmup Iteration   3: 0.179 s/op
# Warmup Iteration   4: 0.201 s/op
# Warmup Iteration   5: 0.170 s/op
# Warmup Iteration   6: 0.180 s/op
# Warmup Iteration   7: 0.188 s/op
# Warmup Iteration   8: 0.179 s/op
# Warmup Iteration   9: 0.185 s/op
# Warmup Iteration  10: 0.184 s/op
Iteration   1: 0.239 s/op
Iteration   2: 0.210 s/op
Iteration   3: 0.173 s/op
Iteration   4: 0.196 s/op
Iteration   5: 0.174 s/op
Iteration   6: 0.172 s/op
Iteration   7: 0.172 s/op
Iteration   8: 0.171 s/op
Iteration   9: 0.165 s/op
Iteration  10: 0.175 s/op

# Run progress: 96.88% complete, ETA 00:00:40
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.255 s/op
# Warmup Iteration   2: 0.194 s/op
# Warmup Iteration   3: 0.181 s/op
# Warmup Iteration   4: 0.176 s/op
# Warmup Iteration   5: 0.185 s/op
# Warmup Iteration   6: 0.175 s/op
# Warmup Iteration   7: 0.179 s/op
# Warmup Iteration   8: 0.183 s/op
# Warmup Iteration   9: 0.175 s/op
# Warmup Iteration  10: 0.176 s/op
Iteration   1: 0.235 s/op
Iteration   2: 0.183 s/op
Iteration   3: 0.181 s/op
Iteration   4: 0.176 s/op
Iteration   5: 0.173 s/op
Iteration   6: 0.182 s/op
Iteration   7: 0.173 s/op
Iteration   8: 0.173 s/op
Iteration   9: 0.180 s/op
Iteration  10: 0.174 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorTAN":
  N = 20
  mean =      0.184 ±(99.9%) 0.018 s/op

  Histogram, s/op:
    [0.160, 0.165) = 1 
    [0.165, 0.170) = 0 
    [0.170, 0.175) = 10 
    [0.175, 0.180) = 2 
    [0.180, 0.185) = 3 
    [0.185, 0.190) = 0 
    [0.190, 0.195) = 0 
    [0.195, 0.200) = 1 
    [0.200, 0.205) = 0 
    [0.205, 0.210) = 1 
    [0.210, 0.215) = 0 
    [0.215, 0.220) = 0 
    [0.220, 0.225) = 0 
    [0.225, 0.230) = 0 
    [0.230, 0.235) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.165 s/op
     p(50.0000) =      0.175 s/op
     p(90.0000) =      0.233 s/op
     p(95.0000) =      0.239 s/op
     p(99.0000) =      0.239 s/op
     p(99.9000) =      0.239 s/op
     p(99.9900) =      0.239 s/op
     p(99.9990) =      0.239 s/op
     p(99.9999) =      0.239 s/op
    p(100.0000) =      0.239 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.matteo.jdk19u
# VM invoker: /home/matteo/dev/jdk-sources/jva/jdk19u/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorTANH

# Run progress: 97.92% complete, ETA 00:00:26
# Fork: 1 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.290 s/op
# Warmup Iteration   2: 0.195 s/op
# Warmup Iteration   3: 0.187 s/op
# Warmup Iteration   4: 0.179 s/op
# Warmup Iteration   5: 0.179 s/op
# Warmup Iteration   6: 0.188 s/op
# Warmup Iteration   7: 0.177 s/op
# Warmup Iteration   8: 0.183 s/op
# Warmup Iteration   9: 0.181 s/op
# Warmup Iteration  10: 0.176 s/op
Iteration   1: 0.243 s/op
Iteration   2: 0.231 s/op
Iteration   3: 0.179 s/op
Iteration   4: 0.179 s/op
Iteration   5: 0.173 s/op
Iteration   6: 0.181 s/op
Iteration   7: 0.179 s/op
Iteration   8: 0.170 s/op
Iteration   9: 0.178 s/op
Iteration  10: 0.179 s/op

# Run progress: 98.96% complete, ETA 00:00:13
# Fork: 2 of 2
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.296 s/op
# Warmup Iteration   2: 0.201 s/op
# Warmup Iteration   3: 0.188 s/op
# Warmup Iteration   4: 0.183 s/op
# Warmup Iteration   5: 0.180 s/op
# Warmup Iteration   6: 0.188 s/op
# Warmup Iteration   7: 0.186 s/op
# Warmup Iteration   8: 0.182 s/op
# Warmup Iteration   9: 0.192 s/op
# Warmup Iteration  10: 0.181 s/op
Iteration   1: 0.246 s/op
Iteration   2: 0.202 s/op
Iteration   3: 0.179 s/op
Iteration   4: 0.189 s/op
Iteration   5: 0.179 s/op
Iteration   6: 0.179 s/op
Iteration   7: 0.187 s/op
Iteration   8: 0.179 s/op
Iteration   9: 0.186 s/op
Iteration  10: 0.176 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorTANH":
  N = 20
  mean =      0.190 ±(99.9%) 0.020 s/op

  Histogram, s/op:
    [0.170, 0.175) = 2 
    [0.175, 0.180) = 10 
    [0.180, 0.185) = 1 
    [0.185, 0.190) = 3 
    [0.190, 0.195) = 0 
    [0.195, 0.200) = 0 
    [0.200, 0.205) = 1 
    [0.205, 0.210) = 0 
    [0.210, 0.215) = 0 
    [0.215, 0.220) = 0 
    [0.220, 0.225) = 0 
    [0.225, 0.230) = 0 
    [0.230, 0.235) = 1 
    [0.235, 0.240) = 0 
    [0.240, 0.245) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.170 s/op
     p(50.0000) =      0.179 s/op
     p(90.0000) =      0.242 s/op
     p(95.0000) =      0.245 s/op
     p(99.0000) =      0.246 s/op
     p(99.9000) =      0.246 s/op
     p(99.9900) =      0.246 s/op
     p(99.9990) =      0.246 s/op
     p(99.9999) =      0.246 s/op
    p(100.0000) =      0.246 s/op


# Run complete. Total time: 00:20:58

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                     Mode  Cnt  Score   Error  Units
TranscendentalOperationBenchmark.scalarACOS     ss   20  3.790 ± 0.020   s/op
TranscendentalOperationBenchmark.scalarASIN     ss   20  4.142 ± 0.034   s/op
TranscendentalOperationBenchmark.scalarATAN     ss   20  0.936 ± 0.007   s/op
TranscendentalOperationBenchmark.scalarATAN2    ss   20  1.656 ± 0.012   s/op
TranscendentalOperationBenchmark.scalarCBRT     ss   20  0.362 ± 0.002   s/op
TranscendentalOperationBenchmark.scalarCOS      ss   20  0.362 ± 0.006   s/op
TranscendentalOperationBenchmark.scalarCOSH     ss   20  1.577 ± 0.003   s/op
TranscendentalOperationBenchmark.scalarEXP      ss   20  0.232 ± 0.002   s/op
TranscendentalOperationBenchmark.scalarEXPM1    ss   20  0.644 ± 0.008   s/op
TranscendentalOperationBenchmark.scalarHYPOT    ss   20  0.488 ± 0.002   s/op
TranscendentalOperationBenchmark.scalarLOG      ss   20  0.250 ± 0.006   s/op
TranscendentalOperationBenchmark.scalarLOG10    ss   20  0.281 ± 0.002   s/op
TranscendentalOperationBenchmark.scalarLOG1P    ss   20  1.015 ± 0.005   s/op
TranscendentalOperationBenchmark.scalarMUL0     ss   20  0.028 ± 0.001   s/op
TranscendentalOperationBenchmark.scalarMUL1     ss   20  0.026 ± 0.001   s/op
TranscendentalOperationBenchmark.scalarMUL2     ss   20  0.028 ± 0.001   s/op
TranscendentalOperationBenchmark.scalarPOW      ss   20  0.565 ± 0.002   s/op
TranscendentalOperationBenchmark.scalarPOW0     ss   20  0.347 ± 0.002   s/op
TranscendentalOperationBenchmark.scalarPOW1     ss   20  0.544 ± 0.006   s/op
TranscendentalOperationBenchmark.scalarPOW2     ss   20  0.028 ± 0.001   s/op
TranscendentalOperationBenchmark.scalarSIN      ss   20  0.367 ± 0.006   s/op
TranscendentalOperationBenchmark.scalarSINH     ss   20  1.801 ± 0.015   s/op
TranscendentalOperationBenchmark.scalarTAN      ss   20  0.506 ± 0.001   s/op
TranscendentalOperationBenchmark.scalarTANH     ss   20  2.046 ± 0.014   s/op
TranscendentalOperationBenchmark.vectorACOS     ss   20  0.152 ± 0.034   s/op
TranscendentalOperationBenchmark.vectorASIN     ss   20  0.147 ± 0.020   s/op
TranscendentalOperationBenchmark.vectorATAN     ss   20  0.239 ± 0.030   s/op
TranscendentalOperationBenchmark.vectorATAN2    ss   20  0.290 ± 0.022   s/op
TranscendentalOperationBenchmark.vectorCBRT     ss   20  0.178 ± 0.027   s/op
TranscendentalOperationBenchmark.vectorCOS      ss   20  0.146 ± 0.017   s/op
TranscendentalOperationBenchmark.vectorCOSH     ss   20  0.134 ± 0.005   s/op
TranscendentalOperationBenchmark.vectorEXP      ss   20  0.120 ± 0.025   s/op
TranscendentalOperationBenchmark.vectorEXPM1    ss   20  0.166 ± 0.005   s/op
TranscendentalOperationBenchmark.vectorHYPOT    ss   20  0.180 ± 0.019   s/op
TranscendentalOperationBenchmark.vectorLOG      ss   20  0.143 ± 0.022   s/op
TranscendentalOperationBenchmark.vectorLOG10    ss   20  0.162 ± 0.021   s/op
TranscendentalOperationBenchmark.vectorLOG1P    ss   20  0.171 ± 0.018   s/op
TranscendentalOperationBenchmark.vectorMUL0     ss   20  0.106 ± 0.020   s/op
TranscendentalOperationBenchmark.vectorMUL1     ss   20  0.106 ± 0.018   s/op
TranscendentalOperationBenchmark.vectorMUL2     ss   20  0.111 ± 0.028   s/op
TranscendentalOperationBenchmark.vectorPOW      ss   20  0.751 ± 0.010   s/op
TranscendentalOperationBenchmark.vectorPOW0     ss   20  0.504 ± 0.007   s/op
TranscendentalOperationBenchmark.vectorPOW1     ss   20  0.747 ± 0.010   s/op
TranscendentalOperationBenchmark.vectorPOW2     ss   20  0.266 ± 0.006   s/op
TranscendentalOperationBenchmark.vectorSIN      ss   20  0.167 ± 0.020   s/op
TranscendentalOperationBenchmark.vectorSINH     ss   20  0.176 ± 0.021   s/op
TranscendentalOperationBenchmark.vectorTAN      ss   20  0.184 ± 0.018   s/op
TranscendentalOperationBenchmark.vectorTANH     ss   20  0.190 ± 0.020   s/op

Benchmark result is saved to transcendentalOperation.csv
