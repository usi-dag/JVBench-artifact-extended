# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarACOS

# Run progress: 0.00% complete, ETA 00:00:01
# Fork: 1 of 1
# Warmup Iteration   1: 12.339 s/op
# Warmup Iteration   2: 12.327 s/op
# Warmup Iteration   3: 12.302 s/op
# Warmup Iteration   4: 12.291 s/op
# Warmup Iteration   5: 12.299 s/op
# Warmup Iteration   6: 12.305 s/op
# Warmup Iteration   7: 12.300 s/op
# Warmup Iteration   8: 12.298 s/op
# Warmup Iteration   9: 12.299 s/op
# Warmup Iteration  10: 12.290 s/op
# Warmup Iteration  11: 12.297 s/op
# Warmup Iteration  12: 12.304 s/op
# Warmup Iteration  13: 12.297 s/op
# Warmup Iteration  14: 12.297 s/op
# Warmup Iteration  15: 12.302 s/op
# Warmup Iteration  16: 12.299 s/op
# Warmup Iteration  17: 12.294 s/op
# Warmup Iteration  18: 12.292 s/op
# Warmup Iteration  19: 12.297 s/op
# Warmup Iteration  20: 12.303 s/op
Iteration   1: 12.288 s/op
Iteration   2: 12.296 s/op
Iteration   3: 12.305 s/op
Iteration   4: 12.296 s/op
Iteration   5: 12.289 s/op
Iteration   6: 12.297 s/op
Iteration   7: 12.293 s/op
Iteration   8: 12.291 s/op
Iteration   9: 12.297 s/op
Iteration  10: 12.298 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarACOS":
  N = 10
  mean =     12.295 ±(99.9%) 0.008 s/op

  Histogram, s/op:
    [12.280, 12.283) = 0 
    [12.283, 12.285) = 0 
    [12.285, 12.288) = 0 
    [12.288, 12.290) = 2 
    [12.290, 12.293) = 1 
    [12.293, 12.295) = 1 
    [12.295, 12.298) = 4 
    [12.298, 12.300) = 1 
    [12.300, 12.303) = 0 
    [12.303, 12.305) = 1 
    [12.305, 12.308) = 0 

  Percentiles, s/op:
      p(0.0000) =     12.288 s/op
     p(50.0000) =     12.296 s/op
     p(90.0000) =     12.304 s/op
     p(95.0000) =     12.305 s/op
     p(99.0000) =     12.305 s/op
     p(99.9000) =     12.305 s/op
     p(99.9900) =     12.305 s/op
     p(99.9990) =     12.305 s/op
     p(99.9999) =     12.305 s/op
    p(100.0000) =     12.305 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarASIN

# Run progress: 2.08% complete, ETA 04:53:41
# Fork: 1 of 1
# Warmup Iteration   1: 13.325 s/op
# Warmup Iteration   2: 13.312 s/op
# Warmup Iteration   3: 13.314 s/op
# Warmup Iteration   4: 13.311 s/op
# Warmup Iteration   5: 13.306 s/op
# Warmup Iteration   6: 13.312 s/op
# Warmup Iteration   7: 13.314 s/op
# Warmup Iteration   8: 13.313 s/op
# Warmup Iteration   9: 13.317 s/op
# Warmup Iteration  10: 13.317 s/op
# Warmup Iteration  11: 13.307 s/op
# Warmup Iteration  12: 13.310 s/op
# Warmup Iteration  13: 13.310 s/op
# Warmup Iteration  14: 13.317 s/op
# Warmup Iteration  15: 13.313 s/op
# Warmup Iteration  16: 13.316 s/op
# Warmup Iteration  17: 13.308 s/op
# Warmup Iteration  18: 13.309 s/op
# Warmup Iteration  19: 13.313 s/op
# Warmup Iteration  20: 13.310 s/op
Iteration   1: 13.311 s/op
Iteration   2: 13.318 s/op
Iteration   3: 13.313 s/op
Iteration   4: 13.309 s/op
Iteration   5: 13.312 s/op
Iteration   6: 13.315 s/op
Iteration   7: 13.309 s/op
Iteration   8: 13.319 s/op
Iteration   9: 13.315 s/op
Iteration  10: 13.315 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarASIN":
  N = 10
  mean =     13.314 ±(99.9%) 0.005 s/op

  Histogram, s/op:
    [13.309, 13.310) = 2 
    [13.310, 13.310) = 0 
    [13.310, 13.311) = 0 
    [13.311, 13.311) = 0 
    [13.311, 13.312) = 1 
    [13.312, 13.312) = 0 
    [13.312, 13.313) = 1 
    [13.313, 13.313) = 1 
    [13.313, 13.314) = 0 
    [13.314, 13.314) = 0 
    [13.314, 13.315) = 0 
    [13.315, 13.315) = 1 
    [13.315, 13.316) = 2 
    [13.316, 13.316) = 0 
    [13.316, 13.317) = 0 
    [13.317, 13.317) = 0 
    [13.317, 13.318) = 0 
    [13.318, 13.318) = 0 
    [13.318, 13.319) = 1 

  Percentiles, s/op:
      p(0.0000) =     13.309 s/op
     p(50.0000) =     13.314 s/op
     p(90.0000) =     13.318 s/op
     p(95.0000) =     13.319 s/op
     p(99.0000) =     13.319 s/op
     p(99.9000) =     13.319 s/op
     p(99.9900) =     13.319 s/op
     p(99.9990) =     13.319 s/op
     p(99.9999) =     13.319 s/op
    p(100.0000) =     13.319 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarATAN

# Run progress: 4.17% complete, ETA 04:59:02
# Fork: 1 of 1
# Warmup Iteration   1: 3.027 s/op
# Warmup Iteration   2: 3.027 s/op
# Warmup Iteration   3: 3.015 s/op
# Warmup Iteration   4: 3.013 s/op
# Warmup Iteration   5: 3.015 s/op
# Warmup Iteration   6: 3.014 s/op
# Warmup Iteration   7: 3.014 s/op
# Warmup Iteration   8: 3.012 s/op
# Warmup Iteration   9: 3.011 s/op
# Warmup Iteration  10: 3.014 s/op
# Warmup Iteration  11: 3.019 s/op
# Warmup Iteration  12: 3.018 s/op
# Warmup Iteration  13: 3.016 s/op
# Warmup Iteration  14: 3.014 s/op
# Warmup Iteration  15: 3.012 s/op
# Warmup Iteration  16: 3.015 s/op
# Warmup Iteration  17: 3.014 s/op
# Warmup Iteration  18: 3.011 s/op
# Warmup Iteration  19: 3.012 s/op
# Warmup Iteration  20: 3.013 s/op
Iteration   1: 3.013 s/op
Iteration   2: 3.041 s/op
Iteration   3: 3.015 s/op
Iteration   4: 3.015 s/op
Iteration   5: 3.015 s/op
Iteration   6: 3.014 s/op
Iteration   7: 3.044 s/op
Iteration   8: 3.018 s/op
Iteration   9: 3.019 s/op
Iteration  10: 3.017 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarATAN":
  N = 10
  mean =      3.021 ±(99.9%) 0.017 s/op

  Histogram, s/op:
    [3.010, 3.013) = 0 
    [3.013, 3.015) = 4 
    [3.015, 3.018) = 2 
    [3.018, 3.020) = 2 
    [3.020, 3.023) = 0 
    [3.023, 3.025) = 0 
    [3.025, 3.028) = 0 
    [3.028, 3.030) = 0 
    [3.030, 3.033) = 0 
    [3.033, 3.035) = 0 
    [3.035, 3.038) = 0 
    [3.038, 3.040) = 0 
    [3.040, 3.043) = 1 
    [3.043, 3.045) = 1 
    [3.045, 3.048) = 0 
    [3.048, 3.050) = 0 

  Percentiles, s/op:
      p(0.0000) =      3.013 s/op
     p(50.0000) =      3.016 s/op
     p(90.0000) =      3.044 s/op
     p(95.0000) =      3.044 s/op
     p(99.0000) =      3.044 s/op
     p(99.9000) =      3.044 s/op
     p(99.9900) =      3.044 s/op
     p(99.9990) =      3.044 s/op
     p(99.9999) =      3.044 s/op
    p(100.0000) =      3.044 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarATAN2

# Run progress: 6.25% complete, ETA 03:39:05
# Fork: 1 of 1
# Warmup Iteration   1: 5.293 s/op
# Warmup Iteration   2: 5.299 s/op
# Warmup Iteration   3: 5.348 s/op
# Warmup Iteration   4: 5.348 s/op
# Warmup Iteration   5: 5.348 s/op
# Warmup Iteration   6: 5.349 s/op
# Warmup Iteration   7: 5.348 s/op
# Warmup Iteration   8: 5.369 s/op
# Warmup Iteration   9: 5.349 s/op
# Warmup Iteration  10: 5.348 s/op
# Warmup Iteration  11: 5.348 s/op
# Warmup Iteration  12: 5.349 s/op
# Warmup Iteration  13: 5.350 s/op
# Warmup Iteration  14: 5.350 s/op
# Warmup Iteration  15: 5.348 s/op
# Warmup Iteration  16: 5.351 s/op
# Warmup Iteration  17: 5.348 s/op
# Warmup Iteration  18: 5.348 s/op
# Warmup Iteration  19: 5.348 s/op
# Warmup Iteration  20: 5.348 s/op
Iteration   1: 5.349 s/op
Iteration   2: 5.352 s/op
Iteration   3: 5.351 s/op
Iteration   4: 5.350 s/op
Iteration   5: 5.349 s/op
Iteration   6: 5.349 s/op
Iteration   7: 5.348 s/op
Iteration   8: 5.349 s/op
Iteration   9: 5.349 s/op
Iteration  10: 5.348 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarATAN2":
  N = 10
  mean =      5.349 ±(99.9%) 0.002 s/op

  Histogram, s/op:
    [5.347, 5.348) = 0 
    [5.348, 5.348) = 1 
    [5.348, 5.349) = 1 
    [5.349, 5.349) = 4 
    [5.349, 5.350) = 1 
    [5.350, 5.350) = 0 
    [5.350, 5.351) = 1 
    [5.351, 5.351) = 1 
    [5.351, 5.352) = 0 
    [5.352, 5.352) = 0 
    [5.352, 5.353) = 1 

  Percentiles, s/op:
      p(0.0000) =      5.348 s/op
     p(50.0000) =      5.349 s/op
     p(90.0000) =      5.352 s/op
     p(95.0000) =      5.352 s/op
     p(99.0000) =      5.352 s/op
     p(99.9000) =      5.352 s/op
     p(99.9900) =      5.352 s/op
     p(99.9990) =      5.352 s/op
     p(99.9999) =      5.352 s/op
    p(100.0000) =      5.352 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarCBRT

# Run progress: 8.33% complete, ETA 03:11:07
# Fork: 1 of 1
# Warmup Iteration   1: 0.993 s/op
# Warmup Iteration   2: 1.031 s/op
# Warmup Iteration   3: 1.213 s/op
# Warmup Iteration   4: 1.213 s/op
# Warmup Iteration   5: 1.213 s/op
# Warmup Iteration   6: 1.213 s/op
# Warmup Iteration   7: 1.213 s/op
# Warmup Iteration   8: 1.213 s/op
# Warmup Iteration   9: 1.214 s/op
# Warmup Iteration  10: 1.213 s/op
# Warmup Iteration  11: 1.214 s/op
# Warmup Iteration  12: 1.214 s/op
# Warmup Iteration  13: 1.213 s/op
# Warmup Iteration  14: 1.213 s/op
# Warmup Iteration  15: 1.214 s/op
# Warmup Iteration  16: 1.213 s/op
# Warmup Iteration  17: 1.214 s/op
# Warmup Iteration  18: 1.213 s/op
# Warmup Iteration  19: 1.213 s/op
# Warmup Iteration  20: 1.214 s/op
Iteration   1: 1.213 s/op
Iteration   2: 1.213 s/op
Iteration   3: 1.213 s/op
Iteration   4: 1.213 s/op
Iteration   5: 1.213 s/op
Iteration   6: 1.214 s/op
Iteration   7: 1.214 s/op
Iteration   8: 1.213 s/op
Iteration   9: 1.213 s/op
Iteration  10: 1.214 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarCBRT":
  N = 10
  mean =      1.213 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [1.213, 1.213) = 0 
    [1.213, 1.213) = 0 
    [1.213, 1.213) = 2 
    [1.213, 1.213) = 2 
    [1.213, 1.213) = 2 
    [1.213, 1.213) = 0 
    [1.213, 1.213) = 0 
    [1.213, 1.214) = 1 
    [1.214, 1.214) = 0 
    [1.214, 1.214) = 1 
    [1.214, 1.214) = 1 
    [1.214, 1.214) = 0 
    [1.214, 1.214) = 0 
    [1.214, 1.214) = 0 
    [1.214, 1.214) = 1 

  Percentiles, s/op:
      p(0.0000) =      1.213 s/op
     p(50.0000) =      1.213 s/op
     p(90.0000) =      1.214 s/op
     p(95.0000) =      1.214 s/op
     p(99.0000) =      1.214 s/op
     p(99.9000) =      1.214 s/op
     p(99.9900) =      1.214 s/op
     p(99.9990) =      1.214 s/op
     p(99.9999) =      1.214 s/op
    p(100.0000) =      1.214 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarCOS

# Run progress: 10.42% complete, ETA 02:35:24
# Fork: 1 of 1
# Warmup Iteration   1: 1.080 s/op
# Warmup Iteration   2: 1.077 s/op
# Warmup Iteration   3: 1.087 s/op
# Warmup Iteration   4: 1.087 s/op
# Warmup Iteration   5: 1.087 s/op
# Warmup Iteration   6: 1.087 s/op
# Warmup Iteration   7: 1.087 s/op
# Warmup Iteration   8: 1.087 s/op
# Warmup Iteration   9: 1.087 s/op
# Warmup Iteration  10: 1.087 s/op
# Warmup Iteration  11: 1.087 s/op
# Warmup Iteration  12: 1.087 s/op
# Warmup Iteration  13: 1.087 s/op
# Warmup Iteration  14: 1.087 s/op
# Warmup Iteration  15: 1.087 s/op
# Warmup Iteration  16: 1.087 s/op
# Warmup Iteration  17: 1.087 s/op
# Warmup Iteration  18: 1.087 s/op
# Warmup Iteration  19: 1.087 s/op
# Warmup Iteration  20: 1.087 s/op
Iteration   1: 1.087 s/op
Iteration   2: 1.087 s/op
Iteration   3: 1.087 s/op
Iteration   4: 1.087 s/op
Iteration   5: 1.087 s/op
Iteration   6: 1.087 s/op
Iteration   7: 1.087 s/op
Iteration   8: 1.087 s/op
Iteration   9: 1.087 s/op
Iteration  10: 1.087 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarCOS":
  N = 10
  mean =      1.087 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [1.087, 1.087) = 1 
    [1.087, 1.087) = 0 
    [1.087, 1.087) = 0 
    [1.087, 1.087) = 0 
    [1.087, 1.087) = 0 
    [1.087, 1.087) = 1 
    [1.087, 1.087) = 0 
    [1.087, 1.087) = 1 
    [1.087, 1.087) = 1 
    [1.087, 1.087) = 0 
    [1.087, 1.087) = 0 
    [1.087, 1.087) = 0 
    [1.087, 1.087) = 0 
    [1.087, 1.087) = 1 
    [1.087, 1.087) = 1 
    [1.087, 1.087) = 0 
    [1.087, 1.087) = 0 
    [1.087, 1.087) = 2 
    [1.087, 1.087) = 1 

  Percentiles, s/op:
      p(0.0000) =      1.087 s/op
     p(50.0000) =      1.087 s/op
     p(90.0000) =      1.087 s/op
     p(95.0000) =      1.087 s/op
     p(99.0000) =      1.087 s/op
     p(99.9000) =      1.087 s/op
     p(99.9900) =      1.087 s/op
     p(99.9990) =      1.087 s/op
     p(99.9999) =      1.087 s/op
    p(100.0000) =      1.087 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarCOSH

# Run progress: 12.50% complete, ETA 02:10:57
# Fork: 1 of 1
# Warmup Iteration   1: 5.054 s/op
# Warmup Iteration   2: 5.052 s/op
# Warmup Iteration   3: 5.049 s/op
# Warmup Iteration   4: 5.049 s/op
# Warmup Iteration   5: 5.049 s/op
# Warmup Iteration   6: 5.049 s/op
# Warmup Iteration   7: 5.049 s/op
# Warmup Iteration   8: 5.049 s/op
# Warmup Iteration   9: 5.049 s/op
# Warmup Iteration  10: 5.049 s/op
# Warmup Iteration  11: 5.049 s/op
# Warmup Iteration  12: 5.049 s/op
# Warmup Iteration  13: 5.049 s/op
# Warmup Iteration  14: 5.049 s/op
# Warmup Iteration  15: 5.049 s/op
# Warmup Iteration  16: 5.049 s/op
# Warmup Iteration  17: 5.048 s/op
# Warmup Iteration  18: 5.049 s/op
# Warmup Iteration  19: 5.049 s/op
# Warmup Iteration  20: 5.049 s/op
Iteration   1: 5.049 s/op
Iteration   2: 5.049 s/op
Iteration   3: 5.049 s/op
Iteration   4: 5.049 s/op
Iteration   5: 5.049 s/op
Iteration   6: 5.050 s/op
Iteration   7: 5.049 s/op
Iteration   8: 5.049 s/op
Iteration   9: 5.048 s/op
Iteration  10: 5.049 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarCOSH":
  N = 10
  mean =      5.049 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [5.048, 5.048) = 0 
    [5.048, 5.048) = 0 
    [5.048, 5.048) = 0 
    [5.048, 5.049) = 1 
    [5.049, 5.049) = 0 
    [5.049, 5.049) = 1 
    [5.049, 5.049) = 3 
    [5.049, 5.049) = 1 
    [5.049, 5.049) = 0 
    [5.049, 5.049) = 1 
    [5.049, 5.049) = 2 
    [5.049, 5.050) = 0 
    [5.050, 5.050) = 1 
    [5.050, 5.050) = 0 
    [5.050, 5.050) = 0 

  Percentiles, s/op:
      p(0.0000) =      5.048 s/op
     p(50.0000) =      5.049 s/op
     p(90.0000) =      5.050 s/op
     p(95.0000) =      5.050 s/op
     p(99.0000) =      5.050 s/op
     p(99.9000) =      5.050 s/op
     p(99.9900) =      5.050 s/op
     p(99.9990) =      5.050 s/op
     p(99.9999) =      5.050 s/op
    p(100.0000) =      5.050 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarEXP

# Run progress: 14.58% complete, ETA 02:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.694 s/op
# Warmup Iteration   2: 0.701 s/op
# Warmup Iteration   3: 0.729 s/op
# Warmup Iteration   4: 0.729 s/op
# Warmup Iteration   5: 0.729 s/op
# Warmup Iteration   6: 0.729 s/op
# Warmup Iteration   7: 0.729 s/op
# Warmup Iteration   8: 0.729 s/op
# Warmup Iteration   9: 0.729 s/op
# Warmup Iteration  10: 0.729 s/op
# Warmup Iteration  11: 0.729 s/op
# Warmup Iteration  12: 0.729 s/op
# Warmup Iteration  13: 0.729 s/op
# Warmup Iteration  14: 0.729 s/op
# Warmup Iteration  15: 0.729 s/op
# Warmup Iteration  16: 0.729 s/op
# Warmup Iteration  17: 0.729 s/op
# Warmup Iteration  18: 0.729 s/op
# Warmup Iteration  19: 0.729 s/op
# Warmup Iteration  20: 0.729 s/op
Iteration   1: 0.729 s/op
Iteration   2: 0.729 s/op
Iteration   3: 0.729 s/op
Iteration   4: 0.729 s/op
Iteration   5: 0.729 s/op
Iteration   6: 0.729 s/op
Iteration   7: 0.729 s/op
Iteration   8: 0.729 s/op
Iteration   9: 0.729 s/op
Iteration  10: 0.729 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarEXP":
  N = 10
  mean =      0.729 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [0.729, 0.729) = 0 
    [0.729, 0.729) = 0 
    [0.729, 0.729) = 2 
    [0.729, 0.729) = 0 
    [0.729, 0.729) = 1 
    [0.729, 0.729) = 2 
    [0.729, 0.729) = 1 
    [0.729, 0.729) = 0 
    [0.729, 0.729) = 0 
    [0.729, 0.729) = 2 
    [0.729, 0.729) = 1 
    [0.729, 0.729) = 0 
    [0.729, 0.729) = 1 
    [0.729, 0.729) = 0 
    [0.729, 0.729) = 0 
    [0.729, 0.729) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.729 s/op
     p(50.0000) =      0.729 s/op
     p(90.0000) =      0.729 s/op
     p(95.0000) =      0.729 s/op
     p(99.0000) =      0.729 s/op
     p(99.9000) =      0.729 s/op
     p(99.9900) =      0.729 s/op
     p(99.9990) =      0.729 s/op
     p(99.9999) =      0.729 s/op
    p(100.0000) =      0.729 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarEXPM1

# Run progress: 16.67% complete, ETA 01:48:56
# Fork: 1 of 1
# Warmup Iteration   1: 2.404 s/op
# Warmup Iteration   2: 2.405 s/op
# Warmup Iteration   3: 2.374 s/op
# Warmup Iteration   4: 2.373 s/op
# Warmup Iteration   5: 2.373 s/op
# Warmup Iteration   6: 2.376 s/op
# Warmup Iteration   7: 2.373 s/op
# Warmup Iteration   8: 2.374 s/op
# Warmup Iteration   9: 2.373 s/op
# Warmup Iteration  10: 2.374 s/op
# Warmup Iteration  11: 2.376 s/op
# Warmup Iteration  12: 2.375 s/op
# Warmup Iteration  13: 2.374 s/op
# Warmup Iteration  14: 2.374 s/op
# Warmup Iteration  15: 2.373 s/op
# Warmup Iteration  16: 2.374 s/op
# Warmup Iteration  17: 2.373 s/op
# Warmup Iteration  18: 2.374 s/op
# Warmup Iteration  19: 2.374 s/op
# Warmup Iteration  20: 2.374 s/op
Iteration   1: 2.378 s/op
Iteration   2: 2.376 s/op
Iteration   3: 2.373 s/op
Iteration   4: 2.374 s/op
Iteration   5: 2.373 s/op
Iteration   6: 2.374 s/op
Iteration   7: 2.377 s/op
Iteration   8: 2.374 s/op
Iteration   9: 2.373 s/op
Iteration  10: 2.373 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarEXPM1":
  N = 10
  mean =      2.375 ±(99.9%) 0.003 s/op

  Histogram, s/op:
    [2.373, 2.374) = 4 
    [2.374, 2.374) = 2 
    [2.374, 2.375) = 1 
    [2.375, 2.375) = 0 
    [2.375, 2.376) = 0 
    [2.376, 2.376) = 1 
    [2.376, 2.377) = 0 
    [2.377, 2.377) = 1 
    [2.377, 2.378) = 0 
    [2.378, 2.378) = 0 
    [2.378, 2.379) = 1 

  Percentiles, s/op:
      p(0.0000) =      2.373 s/op
     p(50.0000) =      2.374 s/op
     p(90.0000) =      2.378 s/op
     p(95.0000) =      2.378 s/op
     p(99.0000) =      2.378 s/op
     p(99.9000) =      2.378 s/op
     p(99.9900) =      2.378 s/op
     p(99.9990) =      2.378 s/op
     p(99.9999) =      2.378 s/op
    p(100.0000) =      2.378 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarHYPOT

# Run progress: 18.75% complete, ETA 01:39:58
# Fork: 1 of 1
# Warmup Iteration   1: 1.595 s/op
# Warmup Iteration   2: 1.597 s/op
# Warmup Iteration   3: 1.579 s/op
# Warmup Iteration   4: 1.579 s/op
# Warmup Iteration   5: 1.579 s/op
# Warmup Iteration   6: 1.580 s/op
# Warmup Iteration   7: 1.580 s/op
# Warmup Iteration   8: 1.578 s/op
# Warmup Iteration   9: 1.579 s/op
# Warmup Iteration  10: 1.580 s/op
# Warmup Iteration  11: 1.580 s/op
# Warmup Iteration  12: 1.582 s/op
# Warmup Iteration  13: 1.580 s/op
# Warmup Iteration  14: 1.580 s/op
# Warmup Iteration  15: 1.579 s/op
# Warmup Iteration  16: 1.581 s/op
# Warmup Iteration  17: 1.581 s/op
# Warmup Iteration  18: 1.582 s/op
# Warmup Iteration  19: 1.580 s/op
# Warmup Iteration  20: 1.580 s/op
Iteration   1: 1.579 s/op
Iteration   2: 1.581 s/op
Iteration   3: 1.581 s/op
Iteration   4: 1.580 s/op
Iteration   5: 1.583 s/op
Iteration   6: 1.586 s/op
Iteration   7: 1.582 s/op
Iteration   8: 1.582 s/op
Iteration   9: 1.580 s/op
Iteration  10: 1.580 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarHYPOT":
  N = 10
  mean =      1.581 ±(99.9%) 0.003 s/op

  Histogram, s/op:
    [1.578, 1.579) = 0 
    [1.579, 1.579) = 1 
    [1.579, 1.580) = 0 
    [1.580, 1.580) = 1 
    [1.580, 1.581) = 2 
    [1.581, 1.581) = 2 
    [1.581, 1.582) = 0 
    [1.582, 1.582) = 2 
    [1.582, 1.583) = 0 
    [1.583, 1.583) = 1 
    [1.583, 1.584) = 0 
    [1.584, 1.584) = 0 
    [1.584, 1.585) = 0 
    [1.585, 1.585) = 0 
    [1.585, 1.586) = 0 
    [1.586, 1.586) = 0 
    [1.586, 1.587) = 1 

  Percentiles, s/op:
      p(0.0000) =      1.579 s/op
     p(50.0000) =      1.581 s/op
     p(90.0000) =      1.586 s/op
     p(95.0000) =      1.586 s/op
     p(99.0000) =      1.586 s/op
     p(99.9000) =      1.586 s/op
     p(99.9900) =      1.586 s/op
     p(99.9990) =      1.586 s/op
     p(99.9999) =      1.586 s/op
    p(100.0000) =      1.586 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarLOG

# Run progress: 20.83% complete, ETA 01:31:02
# Fork: 1 of 1
# Warmup Iteration   1: 0.767 s/op
# Warmup Iteration   2: 0.773 s/op
# Warmup Iteration   3: 0.779 s/op
# Warmup Iteration   4: 0.779 s/op
# Warmup Iteration   5: 0.779 s/op
# Warmup Iteration   6: 0.779 s/op
# Warmup Iteration   7: 0.779 s/op
# Warmup Iteration   8: 0.779 s/op
# Warmup Iteration   9: 0.779 s/op
# Warmup Iteration  10: 0.779 s/op
# Warmup Iteration  11: 0.780 s/op
# Warmup Iteration  12: 0.779 s/op
# Warmup Iteration  13: 0.779 s/op
# Warmup Iteration  14: 0.779 s/op
# Warmup Iteration  15: 0.779 s/op
# Warmup Iteration  16: 0.780 s/op
# Warmup Iteration  17: 0.779 s/op
# Warmup Iteration  18: 0.780 s/op
# Warmup Iteration  19: 0.779 s/op
# Warmup Iteration  20: 0.779 s/op
Iteration   1: 0.779 s/op
Iteration   2: 0.779 s/op
Iteration   3: 0.779 s/op
Iteration   4: 0.779 s/op
Iteration   5: 0.779 s/op
Iteration   6: 0.780 s/op
Iteration   7: 0.779 s/op
Iteration   8: 0.779 s/op
Iteration   9: 0.779 s/op
Iteration  10: 0.779 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarLOG":
  N = 10
  mean =      0.779 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [0.779, 0.779) = 0 
    [0.779, 0.779) = 3 
    [0.779, 0.779) = 1 
    [0.779, 0.779) = 0 
    [0.779, 0.779) = 0 
    [0.779, 0.779) = 2 
    [0.779, 0.779) = 0 
    [0.779, 0.780) = 3 
    [0.780, 0.780) = 0 
    [0.780, 0.780) = 0 
    [0.780, 0.780) = 0 
    [0.780, 0.780) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.779 s/op
     p(50.0000) =      0.779 s/op
     p(90.0000) =      0.780 s/op
     p(95.0000) =      0.780 s/op
     p(99.0000) =      0.780 s/op
     p(99.9000) =      0.780 s/op
     p(99.9900) =      0.780 s/op
     p(99.9990) =      0.780 s/op
     p(99.9999) =      0.780 s/op
    p(100.0000) =      0.780 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarLOG10

# Run progress: 22.92% complete, ETA 01:22:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.860 s/op
# Warmup Iteration   2: 0.865 s/op
# Warmup Iteration   3: 0.889 s/op
# Warmup Iteration   4: 0.889 s/op
# Warmup Iteration   5: 0.888 s/op
# Warmup Iteration   6: 0.889 s/op
# Warmup Iteration   7: 0.888 s/op
# Warmup Iteration   8: 0.888 s/op
# Warmup Iteration   9: 0.888 s/op
# Warmup Iteration  10: 0.888 s/op
# Warmup Iteration  11: 0.889 s/op
# Warmup Iteration  12: 0.888 s/op
# Warmup Iteration  13: 0.888 s/op
# Warmup Iteration  14: 0.889 s/op
# Warmup Iteration  15: 0.889 s/op
# Warmup Iteration  16: 0.888 s/op
# Warmup Iteration  17: 0.889 s/op
# Warmup Iteration  18: 0.888 s/op
# Warmup Iteration  19: 0.888 s/op
# Warmup Iteration  20: 0.888 s/op
Iteration   1: 0.888 s/op
Iteration   2: 0.889 s/op
Iteration   3: 0.889 s/op
Iteration   4: 0.889 s/op
Iteration   5: 0.888 s/op
Iteration   6: 0.889 s/op
Iteration   7: 0.888 s/op
Iteration   8: 0.888 s/op
Iteration   9: 0.889 s/op
Iteration  10: 0.889 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarLOG10":
  N = 10
  mean =      0.889 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [0.888, 0.888) = 1 
    [0.888, 0.888) = 0 
    [0.888, 0.888) = 1 
    [0.888, 0.889) = 2 
    [0.889, 0.889) = 1 
    [0.889, 0.889) = 0 
    [0.889, 0.889) = 0 
    [0.889, 0.889) = 1 
    [0.889, 0.889) = 2 
    [0.889, 0.889) = 2 
    [0.889, 0.889) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.888 s/op
     p(50.0000) =      0.889 s/op
     p(90.0000) =      0.889 s/op
     p(95.0000) =      0.889 s/op
     p(99.0000) =      0.889 s/op
     p(99.9000) =      0.889 s/op
     p(99.9900) =      0.889 s/op
     p(99.9990) =      0.889 s/op
     p(99.9999) =      0.889 s/op
    p(100.0000) =      0.889 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarLOG1P

# Run progress: 25.00% complete, ETA 01:14:56
# Fork: 1 of 1
# Warmup Iteration   1: 3.333 s/op
# Warmup Iteration   2: 3.335 s/op
# Warmup Iteration   3: 3.317 s/op
# Warmup Iteration   4: 3.316 s/op
# Warmup Iteration   5: 3.316 s/op
# Warmup Iteration   6: 3.316 s/op
# Warmup Iteration   7: 3.313 s/op
# Warmup Iteration   8: 3.313 s/op
# Warmup Iteration   9: 3.318 s/op
# Warmup Iteration  10: 3.312 s/op
# Warmup Iteration  11: 3.315 s/op
# Warmup Iteration  12: 3.315 s/op
# Warmup Iteration  13: 3.316 s/op
# Warmup Iteration  14: 3.318 s/op
# Warmup Iteration  15: 3.314 s/op
# Warmup Iteration  16: 3.316 s/op
# Warmup Iteration  17: 3.317 s/op
# Warmup Iteration  18: 3.316 s/op
# Warmup Iteration  19: 3.316 s/op
# Warmup Iteration  20: 3.316 s/op
Iteration   1: 3.316 s/op
Iteration   2: 3.322 s/op
Iteration   3: 3.317 s/op
Iteration   4: 3.316 s/op
Iteration   5: 3.315 s/op
Iteration   6: 3.313 s/op
Iteration   7: 3.313 s/op
Iteration   8: 3.316 s/op
Iteration   9: 3.318 s/op
Iteration  10: 3.316 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarLOG1P":
  N = 10
  mean =      3.316 ±(99.9%) 0.004 s/op

  Histogram, s/op:
    [3.313, 3.314) = 2 
    [3.314, 3.314) = 0 
    [3.314, 3.315) = 0 
    [3.315, 3.315) = 0 
    [3.315, 3.316) = 1 
    [3.316, 3.316) = 0 
    [3.316, 3.317) = 4 
    [3.317, 3.317) = 1 
    [3.317, 3.318) = 0 
    [3.318, 3.318) = 0 
    [3.318, 3.319) = 1 
    [3.319, 3.319) = 0 
    [3.319, 3.320) = 0 
    [3.320, 3.320) = 0 
    [3.320, 3.321) = 0 
    [3.321, 3.321) = 0 
    [3.321, 3.322) = 0 
    [3.322, 3.322) = 0 
    [3.322, 3.323) = 1 

  Percentiles, s/op:
      p(0.0000) =      3.313 s/op
     p(50.0000) =      3.316 s/op
     p(90.0000) =      3.322 s/op
     p(95.0000) =      3.322 s/op
     p(99.0000) =      3.322 s/op
     p(99.9000) =      3.322 s/op
     p(99.9900) =      3.322 s/op
     p(99.9990) =      3.322 s/op
     p(99.9999) =      3.322 s/op
    p(100.0000) =      3.322 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarMUL0

# Run progress: 27.08% complete, ETA 01:11:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.144 s/op
# Warmup Iteration   2: 0.170 s/op
# Warmup Iteration   3: 0.138 s/op
# Warmup Iteration   4: 0.139 s/op
# Warmup Iteration   5: 0.136 s/op
# Warmup Iteration   6: 0.136 s/op
# Warmup Iteration   7: 0.136 s/op
# Warmup Iteration   8: 0.136 s/op
# Warmup Iteration   9: 0.136 s/op
# Warmup Iteration  10: 0.136 s/op
# Warmup Iteration  11: 0.136 s/op
# Warmup Iteration  12: 0.136 s/op
# Warmup Iteration  13: 0.136 s/op
# Warmup Iteration  14: 0.134 s/op
# Warmup Iteration  15: 0.134 s/op
# Warmup Iteration  16: 0.134 s/op
# Warmup Iteration  17: 0.133 s/op
# Warmup Iteration  18: 0.133 s/op
# Warmup Iteration  19: 0.133 s/op
# Warmup Iteration  20: 0.133 s/op
Iteration   1: 0.133 s/op
Iteration   2: 0.140 s/op
Iteration   3: 0.140 s/op
Iteration   4: 0.139 s/op
Iteration   5: 0.138 s/op
Iteration   6: 0.140 s/op
Iteration   7: 0.140 s/op
Iteration   8: 0.139 s/op
Iteration   9: 0.137 s/op
Iteration  10: 0.136 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarMUL0":
  N = 10
  mean =      0.138 ±(99.9%) 0.003 s/op

  Histogram, s/op:
    [0.132, 0.133) = 0 
    [0.133, 0.133) = 1 
    [0.133, 0.134) = 0 
    [0.134, 0.134) = 0 
    [0.134, 0.135) = 0 
    [0.135, 0.135) = 0 
    [0.135, 0.136) = 0 
    [0.136, 0.136) = 1 
    [0.136, 0.137) = 0 
    [0.137, 0.137) = 1 
    [0.137, 0.138) = 0 
    [0.138, 0.138) = 1 
    [0.138, 0.139) = 0 
    [0.139, 0.139) = 1 
    [0.139, 0.140) = 1 
    [0.140, 0.140) = 3 
    [0.140, 0.141) = 1 
    [0.141, 0.141) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.133 s/op
     p(50.0000) =      0.139 s/op
     p(90.0000) =      0.140 s/op
     p(95.0000) =      0.140 s/op
     p(99.0000) =      0.140 s/op
     p(99.9000) =      0.140 s/op
     p(99.9900) =      0.140 s/op
     p(99.9990) =      0.140 s/op
     p(99.9999) =      0.140 s/op
    p(100.0000) =      0.140 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarMUL1

# Run progress: 29.17% complete, ETA 01:05:19
# Fork: 1 of 1
# Warmup Iteration   1: 0.132 s/op
# Warmup Iteration   2: 0.142 s/op
# Warmup Iteration   3: 0.114 s/op
# Warmup Iteration   4: 0.114 s/op
# Warmup Iteration   5: 0.114 s/op
# Warmup Iteration   6: 0.114 s/op
# Warmup Iteration   7: 0.113 s/op
# Warmup Iteration   8: 0.113 s/op
# Warmup Iteration   9: 0.113 s/op
# Warmup Iteration  10: 0.114 s/op
# Warmup Iteration  11: 0.114 s/op
# Warmup Iteration  12: 0.114 s/op
# Warmup Iteration  13: 0.114 s/op
# Warmup Iteration  14: 0.114 s/op
# Warmup Iteration  15: 0.113 s/op
# Warmup Iteration  16: 0.114 s/op
# Warmup Iteration  17: 0.113 s/op
# Warmup Iteration  18: 0.113 s/op
# Warmup Iteration  19: 0.114 s/op
# Warmup Iteration  20: 0.114 s/op
Iteration   1: 0.113 s/op
Iteration   2: 0.114 s/op
Iteration   3: 0.113 s/op
Iteration   4: 0.113 s/op
Iteration   5: 0.113 s/op
Iteration   6: 0.113 s/op
Iteration   7: 0.113 s/op
Iteration   8: 0.113 s/op
Iteration   9: 0.113 s/op
Iteration  10: 0.113 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarMUL1":
  N = 10
  mean =      0.113 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [0.113, 0.113) = 0 
    [0.113, 0.113) = 1 
    [0.113, 0.113) = 2 
    [0.113, 0.113) = 3 
    [0.113, 0.113) = 1 
    [0.113, 0.113) = 0 
    [0.113, 0.113) = 1 
    [0.113, 0.114) = 1 
    [0.114, 0.114) = 0 
    [0.114, 0.114) = 0 
    [0.114, 0.114) = 0 
    [0.114, 0.114) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.113 s/op
     p(50.0000) =      0.113 s/op
     p(90.0000) =      0.114 s/op
     p(95.0000) =      0.114 s/op
     p(99.0000) =      0.114 s/op
     p(99.9000) =      0.114 s/op
     p(99.9900) =      0.114 s/op
     p(99.9990) =      0.114 s/op
     p(99.9999) =      0.114 s/op
    p(100.0000) =      0.114 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarMUL2

# Run progress: 31.25% complete, ETA 00:59:30
# Fork: 1 of 1
# Warmup Iteration   1: 0.153 s/op
# Warmup Iteration   2: 0.158 s/op
# Warmup Iteration   3: 0.144 s/op
# Warmup Iteration   4: 0.143 s/op
# Warmup Iteration   5: 0.143 s/op
# Warmup Iteration   6: 0.143 s/op
# Warmup Iteration   7: 0.142 s/op
# Warmup Iteration   8: 0.144 s/op
# Warmup Iteration   9: 0.144 s/op
# Warmup Iteration  10: 0.144 s/op
# Warmup Iteration  11: 0.144 s/op
# Warmup Iteration  12: 0.141 s/op
# Warmup Iteration  13: 0.141 s/op
# Warmup Iteration  14: 0.144 s/op
# Warmup Iteration  15: 0.144 s/op
# Warmup Iteration  16: 0.144 s/op
# Warmup Iteration  17: 0.144 s/op
# Warmup Iteration  18: 0.144 s/op
# Warmup Iteration  19: 0.141 s/op
# Warmup Iteration  20: 0.140 s/op
Iteration   1: 0.140 s/op
Iteration   2: 0.143 s/op
Iteration   3: 0.143 s/op
Iteration   4: 0.143 s/op
Iteration   5: 0.143 s/op
Iteration   6: 0.144 s/op
Iteration   7: 0.144 s/op
Iteration   8: 0.144 s/op
Iteration   9: 0.144 s/op
Iteration  10: 0.144 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarMUL2":
  N = 10
  mean =      0.143 ±(99.9%) 0.002 s/op

  Histogram, s/op:
    [0.140, 0.140) = 0 
    [0.140, 0.141) = 1 
    [0.141, 0.141) = 0 
    [0.141, 0.141) = 0 
    [0.141, 0.141) = 0 
    [0.141, 0.142) = 0 
    [0.142, 0.142) = 0 
    [0.142, 0.142) = 0 
    [0.142, 0.142) = 0 
    [0.142, 0.143) = 0 
    [0.143, 0.143) = 3 
    [0.143, 0.143) = 1 
    [0.143, 0.143) = 0 
    [0.143, 0.144) = 0 
    [0.144, 0.144) = 4 
    [0.144, 0.144) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.140 s/op
     p(50.0000) =      0.143 s/op
     p(90.0000) =      0.144 s/op
     p(95.0000) =      0.144 s/op
     p(99.0000) =      0.144 s/op
     p(99.9000) =      0.144 s/op
     p(99.9900) =      0.144 s/op
     p(99.9990) =      0.144 s/op
     p(99.9999) =      0.144 s/op
    p(100.0000) =      0.144 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarPOW

# Run progress: 33.33% complete, ETA 00:54:26
# Fork: 1 of 1
# Warmup Iteration   1: 1.722 s/op
# Warmup Iteration   2: 1.709 s/op
# Warmup Iteration   3: 1.778 s/op
# Warmup Iteration   4: 1.778 s/op
# Warmup Iteration   5: 1.778 s/op
# Warmup Iteration   6: 1.778 s/op
# Warmup Iteration   7: 1.778 s/op
# Warmup Iteration   8: 1.778 s/op
# Warmup Iteration   9: 1.778 s/op
# Warmup Iteration  10: 1.778 s/op
# Warmup Iteration  11: 1.778 s/op
# Warmup Iteration  12: 1.778 s/op
# Warmup Iteration  13: 1.778 s/op
# Warmup Iteration  14: 1.778 s/op
# Warmup Iteration  15: 1.778 s/op
# Warmup Iteration  16: 1.778 s/op
# Warmup Iteration  17: 1.778 s/op
# Warmup Iteration  18: 1.778 s/op
# Warmup Iteration  19: 1.778 s/op
# Warmup Iteration  20: 1.778 s/op
Iteration   1: 1.778 s/op
Iteration   2: 1.778 s/op
Iteration   3: 1.778 s/op
Iteration   4: 1.778 s/op
Iteration   5: 1.778 s/op
Iteration   6: 1.778 s/op
Iteration   7: 1.778 s/op
Iteration   8: 1.778 s/op
Iteration   9: 1.778 s/op
Iteration  10: 1.778 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarPOW":
  N = 10
  mean =      1.778 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [1.778, 1.778) = 0 
    [1.778, 1.778) = 1 
    [1.778, 1.778) = 1 
    [1.778, 1.778) = 1 
    [1.778, 1.778) = 0 
    [1.778, 1.778) = 0 
    [1.778, 1.778) = 2 
    [1.778, 1.778) = 0 
    [1.778, 1.778) = 2 
    [1.778, 1.778) = 0 
    [1.778, 1.778) = 1 
    [1.778, 1.778) = 1 
    [1.778, 1.778) = 1 
    [1.778, 1.778) = 0 
    [1.778, 1.778) = 0 

  Percentiles, s/op:
      p(0.0000) =      1.778 s/op
     p(50.0000) =      1.778 s/op
     p(90.0000) =      1.778 s/op
     p(95.0000) =      1.778 s/op
     p(99.0000) =      1.778 s/op
     p(99.9000) =      1.778 s/op
     p(99.9900) =      1.778 s/op
     p(99.9990) =      1.778 s/op
     p(99.9999) =      1.778 s/op
    p(100.0000) =      1.778 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarPOW0

# Run progress: 35.42% complete, ETA 00:51:25
# Fork: 1 of 1
# Warmup Iteration   1: 1.159 s/op
# Warmup Iteration   2: 1.153 s/op
# Warmup Iteration   3: 1.146 s/op
# Warmup Iteration   4: 1.146 s/op
# Warmup Iteration   5: 1.146 s/op
# Warmup Iteration   6: 1.146 s/op
# Warmup Iteration   7: 1.146 s/op
# Warmup Iteration   8: 1.146 s/op
# Warmup Iteration   9: 1.146 s/op
# Warmup Iteration  10: 1.146 s/op
# Warmup Iteration  11: 1.146 s/op
# Warmup Iteration  12: 1.146 s/op
# Warmup Iteration  13: 1.146 s/op
# Warmup Iteration  14: 1.146 s/op
# Warmup Iteration  15: 1.146 s/op
# Warmup Iteration  16: 1.146 s/op
# Warmup Iteration  17: 1.146 s/op
# Warmup Iteration  18: 1.146 s/op
# Warmup Iteration  19: 1.146 s/op
# Warmup Iteration  20: 1.146 s/op
Iteration   1: 1.146 s/op
Iteration   2: 1.146 s/op
Iteration   3: 1.146 s/op
Iteration   4: 1.146 s/op
Iteration   5: 1.146 s/op
Iteration   6: 1.146 s/op
Iteration   7: 1.146 s/op
Iteration   8: 1.146 s/op
Iteration   9: 1.146 s/op
Iteration  10: 1.146 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarPOW0":
  N = 10
  mean =      1.146 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [1.146, 1.146) = 1 
    [1.146, 1.146) = 1 
    [1.146, 1.146) = 1 
    [1.146, 1.146) = 2 
    [1.146, 1.146) = 0 
    [1.146, 1.146) = 1 
    [1.146, 1.146) = 1 
    [1.146, 1.146) = 1 
    [1.146, 1.146) = 1 
    [1.146, 1.146) = 0 
    [1.146, 1.146) = 0 
    [1.146, 1.146) = 1 

  Percentiles, s/op:
      p(0.0000) =      1.146 s/op
     p(50.0000) =      1.146 s/op
     p(90.0000) =      1.146 s/op
     p(95.0000) =      1.146 s/op
     p(99.0000) =      1.146 s/op
     p(99.9000) =      1.146 s/op
     p(99.9900) =      1.146 s/op
     p(99.9990) =      1.146 s/op
     p(99.9999) =      1.146 s/op
    p(100.0000) =      1.146 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarPOW1

# Run progress: 37.50% complete, ETA 00:48:06
# Fork: 1 of 1
# Warmup Iteration   1: 1.633 s/op
# Warmup Iteration   2: 1.635 s/op
# Warmup Iteration   3: 1.694 s/op
# Warmup Iteration   4: 1.694 s/op
# Warmup Iteration   5: 1.694 s/op
# Warmup Iteration   6: 1.694 s/op
# Warmup Iteration   7: 1.694 s/op
# Warmup Iteration   8: 1.694 s/op
# Warmup Iteration   9: 1.694 s/op
# Warmup Iteration  10: 1.694 s/op
# Warmup Iteration  11: 1.694 s/op
# Warmup Iteration  12: 1.694 s/op
# Warmup Iteration  13: 1.694 s/op
# Warmup Iteration  14: 1.694 s/op
# Warmup Iteration  15: 1.694 s/op
# Warmup Iteration  16: 1.694 s/op
# Warmup Iteration  17: 1.694 s/op
# Warmup Iteration  18: 1.694 s/op
# Warmup Iteration  19: 1.694 s/op
# Warmup Iteration  20: 1.694 s/op
Iteration   1: 1.694 s/op
Iteration   2: 1.694 s/op
Iteration   3: 1.694 s/op
Iteration   4: 1.694 s/op
Iteration   5: 1.694 s/op
Iteration   6: 1.694 s/op
Iteration   7: 1.694 s/op
Iteration   8: 1.694 s/op
Iteration   9: 1.694 s/op
Iteration  10: 1.694 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarPOW1":
  N = 10
  mean =      1.694 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [1.694, 1.694) = 1 
    [1.694, 1.694) = 0 
    [1.694, 1.694) = 0 
    [1.694, 1.694) = 0 
    [1.694, 1.694) = 1 
    [1.694, 1.694) = 2 
    [1.694, 1.694) = 1 
    [1.694, 1.694) = 2 
    [1.694, 1.694) = 2 
    [1.694, 1.694) = 0 
    [1.694, 1.694) = 1 

  Percentiles, s/op:
      p(0.0000) =      1.694 s/op
     p(50.0000) =      1.694 s/op
     p(90.0000) =      1.694 s/op
     p(95.0000) =      1.694 s/op
     p(99.0000) =      1.694 s/op
     p(99.9000) =      1.694 s/op
     p(99.9900) =      1.694 s/op
     p(99.9990) =      1.694 s/op
     p(99.9999) =      1.694 s/op
    p(100.0000) =      1.694 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarPOW2

# Run progress: 39.58% complete, ETA 00:45:29
# Fork: 1 of 1
# Warmup Iteration   1: 0.160 s/op
# Warmup Iteration   2: 0.159 s/op
# Warmup Iteration   3: 0.144 s/op
# Warmup Iteration   4: 0.144 s/op
# Warmup Iteration   5: 0.143 s/op
# Warmup Iteration   6: 0.141 s/op
# Warmup Iteration   7: 0.143 s/op
# Warmup Iteration   8: 0.142 s/op
# Warmup Iteration   9: 0.143 s/op
# Warmup Iteration  10: 0.143 s/op
# Warmup Iteration  11: 0.142 s/op
# Warmup Iteration  12: 0.143 s/op
# Warmup Iteration  13: 0.142 s/op
# Warmup Iteration  14: 0.140 s/op
# Warmup Iteration  15: 0.140 s/op
# Warmup Iteration  16: 0.141 s/op
# Warmup Iteration  17: 0.140 s/op
# Warmup Iteration  18: 0.140 s/op
# Warmup Iteration  19: 0.139 s/op
# Warmup Iteration  20: 0.137 s/op
Iteration   1: 0.137 s/op
Iteration   2: 0.144 s/op
Iteration   3: 0.144 s/op
Iteration   4: 0.144 s/op
Iteration   5: 0.144 s/op
Iteration   6: 0.143 s/op
Iteration   7: 0.142 s/op
Iteration   8: 0.142 s/op
Iteration   9: 0.142 s/op
Iteration  10: 0.141 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarPOW2":
  N = 10
  mean =      0.142 ±(99.9%) 0.003 s/op

  Histogram, s/op:
    [0.136, 0.137) = 0 
    [0.137, 0.137) = 1 
    [0.137, 0.138) = 0 
    [0.138, 0.138) = 0 
    [0.138, 0.139) = 0 
    [0.139, 0.139) = 0 
    [0.139, 0.140) = 0 
    [0.140, 0.140) = 0 
    [0.140, 0.141) = 0 
    [0.141, 0.141) = 0 
    [0.141, 0.142) = 1 
    [0.142, 0.142) = 0 
    [0.142, 0.143) = 3 
    [0.143, 0.143) = 0 
    [0.143, 0.144) = 1 
    [0.144, 0.144) = 4 

  Percentiles, s/op:
      p(0.0000) =      0.137 s/op
     p(50.0000) =      0.143 s/op
     p(90.0000) =      0.144 s/op
     p(95.0000) =      0.144 s/op
     p(99.0000) =      0.144 s/op
     p(99.9000) =      0.144 s/op
     p(99.9900) =      0.144 s/op
     p(99.9990) =      0.144 s/op
     p(99.9999) =      0.144 s/op
    p(100.0000) =      0.144 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarSIN

# Run progress: 41.67% complete, ETA 00:41:57
# Fork: 1 of 1
# Warmup Iteration   1: 1.079 s/op
# Warmup Iteration   2: 1.081 s/op
# Warmup Iteration   3: 1.086 s/op
# Warmup Iteration   4: 1.086 s/op
# Warmup Iteration   5: 1.086 s/op
# Warmup Iteration   6: 1.086 s/op
# Warmup Iteration   7: 1.086 s/op
# Warmup Iteration   8: 1.086 s/op
# Warmup Iteration   9: 1.086 s/op
# Warmup Iteration  10: 1.086 s/op
# Warmup Iteration  11: 1.086 s/op
# Warmup Iteration  12: 1.086 s/op
# Warmup Iteration  13: 1.086 s/op
# Warmup Iteration  14: 1.086 s/op
# Warmup Iteration  15: 1.086 s/op
# Warmup Iteration  16: 1.086 s/op
# Warmup Iteration  17: 1.086 s/op
# Warmup Iteration  18: 1.086 s/op
# Warmup Iteration  19: 1.086 s/op
# Warmup Iteration  20: 1.086 s/op
Iteration   1: 1.086 s/op
Iteration   2: 1.086 s/op
Iteration   3: 1.086 s/op
Iteration   4: 1.086 s/op
Iteration   5: 1.086 s/op
Iteration   6: 1.086 s/op
Iteration   7: 1.086 s/op
Iteration   8: 1.086 s/op
Iteration   9: 1.086 s/op
Iteration  10: 1.086 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarSIN":
  N = 10
  mean =      1.086 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [1.086, 1.086) = 0 
    [1.086, 1.086) = 0 
    [1.086, 1.086) = 0 
    [1.086, 1.086) = 1 
    [1.086, 1.086) = 0 
    [1.086, 1.086) = 0 
    [1.086, 1.086) = 0 
    [1.086, 1.086) = 0 
    [1.086, 1.086) = 0 
    [1.086, 1.086) = 2 
    [1.086, 1.086) = 1 
    [1.086, 1.086) = 0 
    [1.086, 1.086) = 1 
    [1.086, 1.086) = 1 
    [1.086, 1.086) = 0 
    [1.086, 1.086) = 1 
    [1.086, 1.086) = 1 
    [1.086, 1.086) = 1 
    [1.086, 1.086) = 0 

  Percentiles, s/op:
      p(0.0000) =      1.086 s/op
     p(50.0000) =      1.086 s/op
     p(90.0000) =      1.086 s/op
     p(95.0000) =      1.086 s/op
     p(99.0000) =      1.086 s/op
     p(99.9000) =      1.086 s/op
     p(99.9900) =      1.086 s/op
     p(99.9990) =      1.086 s/op
     p(99.9999) =      1.086 s/op
    p(100.0000) =      1.086 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarSINH

# Run progress: 43.75% complete, ETA 00:39:21
# Fork: 1 of 1
# Warmup Iteration   1: 5.622 s/op
# Warmup Iteration   2: 5.621 s/op
# Warmup Iteration   3: 5.625 s/op
# Warmup Iteration   4: 5.625 s/op
# Warmup Iteration   5: 5.626 s/op
# Warmup Iteration   6: 5.626 s/op
# Warmup Iteration   7: 5.625 s/op
# Warmup Iteration   8: 5.625 s/op
# Warmup Iteration   9: 5.625 s/op
# Warmup Iteration  10: 5.627 s/op
# Warmup Iteration  11: 5.626 s/op
# Warmup Iteration  12: 5.625 s/op
# Warmup Iteration  13: 5.626 s/op
# Warmup Iteration  14: 5.626 s/op
# Warmup Iteration  15: 5.629 s/op
# Warmup Iteration  16: 5.625 s/op
# Warmup Iteration  17: 5.624 s/op
# Warmup Iteration  18: 5.625 s/op
# Warmup Iteration  19: 5.626 s/op
# Warmup Iteration  20: 5.627 s/op
Iteration   1: 5.625 s/op
Iteration   2: 5.627 s/op
Iteration   3: 5.625 s/op
Iteration   4: 5.627 s/op
Iteration   5: 5.625 s/op
Iteration   6: 5.626 s/op
Iteration   7: 5.626 s/op
Iteration   8: 5.624 s/op
Iteration   9: 5.624 s/op
Iteration  10: 5.626 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarSINH":
  N = 10
  mean =      5.625 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [5.624, 5.624) = 1 
    [5.624, 5.625) = 1 
    [5.625, 5.625) = 1 
    [5.625, 5.625) = 0 
    [5.625, 5.625) = 1 
    [5.625, 5.626) = 1 
    [5.626, 5.626) = 1 
    [5.626, 5.626) = 1 
    [5.626, 5.626) = 1 
    [5.626, 5.627) = 0 
    [5.627, 5.627) = 1 

  Percentiles, s/op:
      p(0.0000) =      5.624 s/op
     p(50.0000) =      5.626 s/op
     p(90.0000) =      5.627 s/op
     p(95.0000) =      5.627 s/op
     p(99.0000) =      5.627 s/op
     p(99.9000) =      5.627 s/op
     p(99.9900) =      5.627 s/op
     p(99.9990) =      5.627 s/op
     p(99.9999) =      5.627 s/op
    p(100.0000) =      5.627 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarTAN

# Run progress: 45.83% complete, ETA 00:39:36
# Fork: 1 of 1
# Warmup Iteration   1: 1.539 s/op
# Warmup Iteration   2: 1.535 s/op
# Warmup Iteration   3: 1.548 s/op
# Warmup Iteration   4: 1.547 s/op
# Warmup Iteration   5: 1.547 s/op
# Warmup Iteration   6: 1.548 s/op
# Warmup Iteration   7: 1.548 s/op
# Warmup Iteration   8: 1.548 s/op
# Warmup Iteration   9: 1.548 s/op
# Warmup Iteration  10: 1.548 s/op
# Warmup Iteration  11: 1.548 s/op
# Warmup Iteration  12: 1.548 s/op
# Warmup Iteration  13: 1.548 s/op
# Warmup Iteration  14: 1.548 s/op
# Warmup Iteration  15: 1.548 s/op
# Warmup Iteration  16: 1.548 s/op
# Warmup Iteration  17: 1.547 s/op
# Warmup Iteration  18: 1.547 s/op
# Warmup Iteration  19: 1.547 s/op
# Warmup Iteration  20: 1.548 s/op
Iteration   1: 1.547 s/op
Iteration   2: 1.547 s/op
Iteration   3: 1.547 s/op
Iteration   4: 1.547 s/op
Iteration   5: 1.547 s/op
Iteration   6: 1.548 s/op
Iteration   7: 1.547 s/op
Iteration   8: 1.547 s/op
Iteration   9: 1.547 s/op
Iteration  10: 1.547 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarTAN":
  N = 10
  mean =      1.547 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [1.547, 1.547) = 0 
    [1.547, 1.547) = 0 
    [1.547, 1.547) = 0 
    [1.547, 1.547) = 3 
    [1.547, 1.547) = 1 
    [1.547, 1.547) = 0 
    [1.547, 1.547) = 0 
    [1.547, 1.547) = 3 
    [1.547, 1.547) = 0 
    [1.547, 1.547) = 1 
    [1.547, 1.547) = 0 
    [1.547, 1.548) = 1 
    [1.548, 1.548) = 0 
    [1.548, 1.548) = 0 
    [1.548, 1.548) = 0 

  Percentiles, s/op:
      p(0.0000) =      1.547 s/op
     p(50.0000) =      1.547 s/op
     p(90.0000) =      1.548 s/op
     p(95.0000) =      1.548 s/op
     p(99.0000) =      1.548 s/op
     p(99.9000) =      1.548 s/op
     p(99.9900) =      1.548 s/op
     p(99.9990) =      1.548 s/op
     p(99.9999) =      1.548 s/op
    p(100.0000) =      1.548 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarTANH

# Run progress: 47.92% complete, ETA 00:37:22
# Fork: 1 of 1
# Warmup Iteration   1: 6.538 s/op
# Warmup Iteration   2: 6.537 s/op
# Warmup Iteration   3: 6.536 s/op
# Warmup Iteration   4: 6.536 s/op
# Warmup Iteration   5: 6.545 s/op
# Warmup Iteration   6: 6.536 s/op
# Warmup Iteration   7: 6.536 s/op
# Warmup Iteration   8: 6.537 s/op
# Warmup Iteration   9: 6.536 s/op
# Warmup Iteration  10: 6.545 s/op
# Warmup Iteration  11: 6.536 s/op
# Warmup Iteration  12: 6.536 s/op
# Warmup Iteration  13: 6.536 s/op
# Warmup Iteration  14: 6.537 s/op
# Warmup Iteration  15: 6.535 s/op
# Warmup Iteration  16: 6.536 s/op
# Warmup Iteration  17: 6.536 s/op
# Warmup Iteration  18: 6.536 s/op
# Warmup Iteration  19: 6.536 s/op
# Warmup Iteration  20: 6.536 s/op
Iteration   1: 6.536 s/op
Iteration   2: 6.545 s/op
Iteration   3: 6.535 s/op
Iteration   4: 6.536 s/op
Iteration   5: 6.535 s/op
Iteration   6: 6.536 s/op
Iteration   7: 6.536 s/op
Iteration   8: 6.536 s/op
Iteration   9: 6.538 s/op
Iteration  10: 6.536 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.scalarTANH":
  N = 10
  mean =      6.537 ±(99.9%) 0.004 s/op

  Histogram, s/op:
    [6.535, 6.536) = 2 
    [6.536, 6.536) = 5 
    [6.536, 6.537) = 1 
    [6.537, 6.537) = 0 
    [6.537, 6.538) = 0 
    [6.538, 6.538) = 0 
    [6.538, 6.539) = 1 
    [6.539, 6.539) = 0 
    [6.539, 6.540) = 0 
    [6.540, 6.540) = 0 
    [6.540, 6.541) = 0 
    [6.541, 6.541) = 0 
    [6.541, 6.542) = 0 
    [6.542, 6.542) = 0 
    [6.542, 6.543) = 0 
    [6.543, 6.543) = 0 
    [6.543, 6.544) = 0 
    [6.544, 6.544) = 0 
    [6.544, 6.545) = 0 

  Percentiles, s/op:
      p(0.0000) =      6.535 s/op
     p(50.0000) =      6.536 s/op
     p(90.0000) =      6.544 s/op
     p(95.0000) =      6.545 s/op
     p(99.0000) =      6.545 s/op
     p(99.9000) =      6.545 s/op
     p(99.9900) =      6.545 s/op
     p(99.9990) =      6.545 s/op
     p(99.9999) =      6.545 s/op
    p(100.0000) =      6.545 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorACOS

# Run progress: 50.00% complete, ETA 00:37:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.785 s/op
# Warmup Iteration   2: 0.528 s/op
# Warmup Iteration   3: 0.420 s/op
# Warmup Iteration   4: 0.539 s/op
# Warmup Iteration   5: 0.569 s/op
# Warmup Iteration   6: 0.512 s/op
# Warmup Iteration   7: 0.486 s/op
# Warmup Iteration   8: 0.386 s/op
# Warmup Iteration   9: 0.385 s/op
# Warmup Iteration  10: 0.477 s/op
# Warmup Iteration  11: 0.386 s/op
# Warmup Iteration  12: 0.477 s/op
# Warmup Iteration  13: 0.386 s/op
# Warmup Iteration  14: 0.385 s/op
# Warmup Iteration  15: 0.535 s/op
# Warmup Iteration  16: 0.568 s/op
# Warmup Iteration  17: 0.570 s/op
# Warmup Iteration  18: 0.672 s/op
# Warmup Iteration  19: 0.387 s/op
# Warmup Iteration  20: 0.385 s/op
Iteration   1: 0.386 s/op
Iteration   2: 0.488 s/op
Iteration   3: 0.387 s/op
Iteration   4: 0.385 s/op
Iteration   5: 0.487 s/op
Iteration   6: 0.386 s/op
Iteration   7: 0.387 s/op
Iteration   8: 0.640 s/op
Iteration   9: 0.571 s/op
Iteration  10: 0.393 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorACOS":
  N = 10
  mean =      0.451 ±(99.9%) 0.140 s/op

  Histogram, s/op:
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 0 
    [0.350, 0.375) = 0 
    [0.375, 0.400) = 6 
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 0 
    [0.450, 0.475) = 0 
    [0.475, 0.500) = 2 
    [0.500, 0.525) = 0 
    [0.525, 0.550) = 0 
    [0.550, 0.575) = 1 
    [0.575, 0.600) = 0 
    [0.600, 0.625) = 0 
    [0.625, 0.650) = 1 
    [0.650, 0.675) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.385 s/op
     p(50.0000) =      0.390 s/op
     p(90.0000) =      0.633 s/op
     p(95.0000) =      0.640 s/op
     p(99.0000) =      0.640 s/op
     p(99.9000) =      0.640 s/op
     p(99.9900) =      0.640 s/op
     p(99.9990) =      0.640 s/op
     p(99.9999) =      0.640 s/op
    p(100.0000) =      0.640 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorASIN

# Run progress: 52.08% complete, ETA 00:35:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.770 s/op
# Warmup Iteration   2: 0.507 s/op
# Warmup Iteration   3: 0.397 s/op
# Warmup Iteration   4: 0.515 s/op
# Warmup Iteration   5: 0.549 s/op
# Warmup Iteration   6: 0.491 s/op
# Warmup Iteration   7: 0.474 s/op
# Warmup Iteration   8: 0.364 s/op
# Warmup Iteration   9: 0.362 s/op
# Warmup Iteration  10: 0.457 s/op
# Warmup Iteration  11: 0.363 s/op
# Warmup Iteration  12: 0.363 s/op
# Warmup Iteration  13: 0.456 s/op
# Warmup Iteration  14: 0.364 s/op
# Warmup Iteration  15: 0.500 s/op
# Warmup Iteration  16: 0.545 s/op
# Warmup Iteration  17: 0.547 s/op
# Warmup Iteration  18: 0.539 s/op
# Warmup Iteration  19: 0.481 s/op
# Warmup Iteration  20: 0.362 s/op
Iteration   1: 0.364 s/op
Iteration   2: 0.467 s/op
Iteration   3: 0.365 s/op
Iteration   4: 0.363 s/op
Iteration   5: 0.465 s/op
Iteration   6: 0.363 s/op
Iteration   7: 0.365 s/op
Iteration   8: 0.619 s/op
Iteration   9: 0.548 s/op
Iteration  10: 0.422 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorASIN":
  N = 10
  mean =      0.434 ±(99.9%) 0.137 s/op

  Histogram, s/op:
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 0 
    [0.350, 0.375) = 5 
    [0.375, 0.400) = 0 
    [0.400, 0.425) = 1 
    [0.425, 0.450) = 0 
    [0.450, 0.475) = 2 
    [0.475, 0.500) = 0 
    [0.500, 0.525) = 0 
    [0.525, 0.550) = 1 
    [0.550, 0.575) = 0 
    [0.575, 0.600) = 0 
    [0.600, 0.625) = 1 
    [0.625, 0.650) = 0 
    [0.650, 0.675) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.363 s/op
     p(50.0000) =      0.394 s/op
     p(90.0000) =      0.612 s/op
     p(95.0000) =      0.619 s/op
     p(99.0000) =      0.619 s/op
     p(99.9000) =      0.619 s/op
     p(99.9900) =      0.619 s/op
     p(99.9990) =      0.619 s/op
     p(99.9999) =      0.619 s/op
    p(100.0000) =      0.619 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorATAN

# Run progress: 54.17% complete, ETA 00:32:34
# Fork: 1 of 1
# Warmup Iteration   1: 0.684 s/op
# Warmup Iteration   2: 0.464 s/op
# Warmup Iteration   3: 0.410 s/op
# Warmup Iteration   4: 0.531 s/op
# Warmup Iteration   5: 0.557 s/op
# Warmup Iteration   6: 0.497 s/op
# Warmup Iteration   7: 0.496 s/op
# Warmup Iteration   8: 0.376 s/op
# Warmup Iteration   9: 0.374 s/op
# Warmup Iteration  10: 0.470 s/op
# Warmup Iteration  11: 0.376 s/op
# Warmup Iteration  12: 0.375 s/op
# Warmup Iteration  13: 0.469 s/op
# Warmup Iteration  14: 0.376 s/op
# Warmup Iteration  15: 0.501 s/op
# Warmup Iteration  16: 0.562 s/op
# Warmup Iteration  17: 0.556 s/op
# Warmup Iteration  18: 0.554 s/op
# Warmup Iteration  19: 0.502 s/op
# Warmup Iteration  20: 0.379 s/op
Iteration   1: 0.377 s/op
Iteration   2: 0.479 s/op
Iteration   3: 0.376 s/op
Iteration   4: 0.377 s/op
Iteration   5: 0.477 s/op
Iteration   6: 0.377 s/op
Iteration   7: 0.375 s/op
Iteration   8: 0.621 s/op
Iteration   9: 0.560 s/op
Iteration  10: 0.417 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorATAN":
  N = 10
  mean =      0.444 ±(99.9%) 0.134 s/op

  Histogram, s/op:
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 0 
    [0.350, 0.375) = 0 
    [0.375, 0.400) = 5 
    [0.400, 0.425) = 1 
    [0.425, 0.450) = 0 
    [0.450, 0.475) = 0 
    [0.475, 0.500) = 2 
    [0.500, 0.525) = 0 
    [0.525, 0.550) = 0 
    [0.550, 0.575) = 1 
    [0.575, 0.600) = 0 
    [0.600, 0.625) = 1 
    [0.625, 0.650) = 0 
    [0.650, 0.675) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.375 s/op
     p(50.0000) =      0.397 s/op
     p(90.0000) =      0.615 s/op
     p(95.0000) =      0.621 s/op
     p(99.0000) =      0.621 s/op
     p(99.9000) =      0.621 s/op
     p(99.9900) =      0.621 s/op
     p(99.9990) =      0.621 s/op
     p(99.9999) =      0.621 s/op
    p(100.0000) =      0.621 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorATAN2

# Run progress: 56.25% complete, ETA 00:30:14
# Fork: 1 of 1
# Warmup Iteration   1: 0.820 s/op
# Warmup Iteration   2: 0.581 s/op
# Warmup Iteration   3: 0.524 s/op
# Warmup Iteration   4: 0.661 s/op
# Warmup Iteration   5: 0.680 s/op
# Warmup Iteration   6: 0.612 s/op
# Warmup Iteration   7: 0.596 s/op
# Warmup Iteration   8: 0.495 s/op
# Warmup Iteration   9: 0.494 s/op
# Warmup Iteration  10: 0.587 s/op
# Warmup Iteration  11: 0.494 s/op
# Warmup Iteration  12: 0.586 s/op
# Warmup Iteration  13: 0.493 s/op
# Warmup Iteration  14: 0.494 s/op
# Warmup Iteration  15: 0.660 s/op
# Warmup Iteration  16: 0.680 s/op
# Warmup Iteration  17: 0.678 s/op
# Warmup Iteration  18: 0.768 s/op
# Warmup Iteration  19: 0.495 s/op
# Warmup Iteration  20: 0.495 s/op
Iteration   1: 0.595 s/op
Iteration   2: 0.496 s/op
Iteration   3: 0.495 s/op
Iteration   4: 0.495 s/op
Iteration   5: 0.596 s/op
Iteration   6: 0.495 s/op
Iteration   7: 0.494 s/op
Iteration   8: 0.767 s/op
Iteration   9: 0.522 s/op
Iteration  10: 0.496 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorATAN2":
  N = 10
  mean =      0.545 ±(99.9%) 0.133 s/op

  Histogram, s/op:
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 0 
    [0.450, 0.475) = 0 
    [0.475, 0.500) = 6 
    [0.500, 0.525) = 1 
    [0.525, 0.550) = 0 
    [0.550, 0.575) = 0 
    [0.575, 0.600) = 2 
    [0.600, 0.625) = 0 
    [0.625, 0.650) = 0 
    [0.650, 0.675) = 0 
    [0.675, 0.700) = 0 
    [0.700, 0.725) = 0 
    [0.725, 0.750) = 0 
    [0.750, 0.775) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.494 s/op
     p(50.0000) =      0.496 s/op
     p(90.0000) =      0.750 s/op
     p(95.0000) =      0.767 s/op
     p(99.0000) =      0.767 s/op
     p(99.9000) =      0.767 s/op
     p(99.9900) =      0.767 s/op
     p(99.9990) =      0.767 s/op
     p(99.9999) =      0.767 s/op
    p(100.0000) =      0.767 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorCBRT

# Run progress: 58.33% complete, ETA 00:28:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.652 s/op
# Warmup Iteration   2: 0.437 s/op
# Warmup Iteration   3: 0.384 s/op
# Warmup Iteration   4: 0.503 s/op
# Warmup Iteration   5: 0.532 s/op
# Warmup Iteration   6: 0.474 s/op
# Warmup Iteration   7: 0.474 s/op
# Warmup Iteration   8: 0.350 s/op
# Warmup Iteration   9: 0.351 s/op
# Warmup Iteration  10: 0.444 s/op
# Warmup Iteration  11: 0.351 s/op
# Warmup Iteration  12: 0.350 s/op
# Warmup Iteration  13: 0.443 s/op
# Warmup Iteration  14: 0.351 s/op
# Warmup Iteration  15: 0.477 s/op
# Warmup Iteration  16: 0.529 s/op
# Warmup Iteration  17: 0.531 s/op
# Warmup Iteration  18: 0.527 s/op
# Warmup Iteration  19: 0.475 s/op
# Warmup Iteration  20: 0.350 s/op
Iteration   1: 0.351 s/op
Iteration   2: 0.453 s/op
Iteration   3: 0.352 s/op
Iteration   4: 0.351 s/op
Iteration   5: 0.452 s/op
Iteration   6: 0.350 s/op
Iteration   7: 0.351 s/op
Iteration   8: 0.594 s/op
Iteration   9: 0.533 s/op
Iteration  10: 0.438 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorCBRT":
  N = 10
  mean =      0.423 ±(99.9%) 0.133 s/op

  Histogram, s/op:
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 0 
    [0.350, 0.375) = 5 
    [0.375, 0.400) = 0 
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 1 
    [0.450, 0.475) = 2 
    [0.475, 0.500) = 0 
    [0.500, 0.525) = 0 
    [0.525, 0.550) = 1 
    [0.550, 0.575) = 0 
    [0.575, 0.600) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.350 s/op
     p(50.0000) =      0.395 s/op
     p(90.0000) =      0.588 s/op
     p(95.0000) =      0.594 s/op
     p(99.0000) =      0.594 s/op
     p(99.9000) =      0.594 s/op
     p(99.9900) =      0.594 s/op
     p(99.9990) =      0.594 s/op
     p(99.9999) =      0.594 s/op
    p(100.0000) =      0.594 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorCOS

# Run progress: 60.42% complete, ETA 00:25:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.641 s/op
# Warmup Iteration   2: 0.436 s/op
# Warmup Iteration   3: 0.383 s/op
# Warmup Iteration   4: 0.512 s/op
# Warmup Iteration   5: 0.543 s/op
# Warmup Iteration   6: 0.483 s/op
# Warmup Iteration   7: 0.478 s/op
# Warmup Iteration   8: 0.351 s/op
# Warmup Iteration   9: 0.351 s/op
# Warmup Iteration  10: 0.445 s/op
# Warmup Iteration  11: 0.353 s/op
# Warmup Iteration  12: 0.351 s/op
# Warmup Iteration  13: 0.444 s/op
# Warmup Iteration  14: 0.351 s/op
# Warmup Iteration  15: 0.479 s/op
# Warmup Iteration  16: 0.535 s/op
# Warmup Iteration  17: 0.528 s/op
# Warmup Iteration  18: 0.537 s/op
# Warmup Iteration  19: 0.474 s/op
# Warmup Iteration  20: 0.353 s/op
Iteration   1: 0.352 s/op
Iteration   2: 0.456 s/op
Iteration   3: 0.353 s/op
Iteration   4: 0.352 s/op
Iteration   5: 0.452 s/op
Iteration   6: 0.353 s/op
Iteration   7: 0.351 s/op
Iteration   8: 0.596 s/op
Iteration   9: 0.529 s/op
Iteration  10: 0.438 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorCOS":
  N = 10
  mean =      0.423 ±(99.9%) 0.132 s/op

  Histogram, s/op:
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 0 
    [0.350, 0.375) = 5 
    [0.375, 0.400) = 0 
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 1 
    [0.450, 0.475) = 2 
    [0.475, 0.500) = 0 
    [0.500, 0.525) = 0 
    [0.525, 0.550) = 1 
    [0.550, 0.575) = 0 
    [0.575, 0.600) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.351 s/op
     p(50.0000) =      0.395 s/op
     p(90.0000) =      0.589 s/op
     p(95.0000) =      0.596 s/op
     p(99.0000) =      0.596 s/op
     p(99.9000) =      0.596 s/op
     p(99.9900) =      0.596 s/op
     p(99.9990) =      0.596 s/op
     p(99.9999) =      0.596 s/op
    p(100.0000) =      0.596 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorCOSH

# Run progress: 62.50% complete, ETA 00:24:01
# Fork: 1 of 1
# Warmup Iteration   1: 0.665 s/op
# Warmup Iteration   2: 0.449 s/op
# Warmup Iteration   3: 0.375 s/op
# Warmup Iteration   4: 0.493 s/op
# Warmup Iteration   5: 0.520 s/op
# Warmup Iteration   6: 0.462 s/op
# Warmup Iteration   7: 0.450 s/op
# Warmup Iteration   8: 0.342 s/op
# Warmup Iteration   9: 0.341 s/op
# Warmup Iteration  10: 0.437 s/op
# Warmup Iteration  11: 0.342 s/op
# Warmup Iteration  12: 0.341 s/op
# Warmup Iteration  13: 0.434 s/op
# Warmup Iteration  14: 0.342 s/op
# Warmup Iteration  15: 0.477 s/op
# Warmup Iteration  16: 0.521 s/op
# Warmup Iteration  17: 0.516 s/op
# Warmup Iteration  18: 0.519 s/op
# Warmup Iteration  19: 0.456 s/op
# Warmup Iteration  20: 0.342 s/op
Iteration   1: 0.341 s/op
Iteration   2: 0.446 s/op
Iteration   3: 0.342 s/op
Iteration   4: 0.343 s/op
Iteration   5: 0.443 s/op
Iteration   6: 0.343 s/op
Iteration   7: 0.342 s/op
Iteration   8: 0.588 s/op
Iteration   9: 0.519 s/op
Iteration  10: 0.444 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorCOSH":
  N = 10
  mean =      0.415 ±(99.9%) 0.133 s/op

  Histogram, s/op:
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 5 
    [0.350, 0.375) = 0 
    [0.375, 0.400) = 0 
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 3 
    [0.450, 0.475) = 0 
    [0.475, 0.500) = 0 
    [0.500, 0.525) = 1 
    [0.525, 0.550) = 0 
    [0.550, 0.575) = 0 
    [0.575, 0.600) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.341 s/op
     p(50.0000) =      0.393 s/op
     p(90.0000) =      0.581 s/op
     p(95.0000) =      0.588 s/op
     p(99.0000) =      0.588 s/op
     p(99.9000) =      0.588 s/op
     p(99.9900) =      0.588 s/op
     p(99.9990) =      0.588 s/op
     p(99.9999) =      0.588 s/op
    p(100.0000) =      0.588 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorEXP

# Run progress: 64.58% complete, ETA 00:22:09
# Fork: 1 of 1
# Warmup Iteration   1: 0.631 s/op
# Warmup Iteration   2: 0.445 s/op
# Warmup Iteration   3: 0.368 s/op
# Warmup Iteration   4: 0.495 s/op
# Warmup Iteration   5: 0.519 s/op
# Warmup Iteration   6: 0.457 s/op
# Warmup Iteration   7: 0.458 s/op
# Warmup Iteration   8: 0.338 s/op
# Warmup Iteration   9: 0.339 s/op
# Warmup Iteration  10: 0.431 s/op
# Warmup Iteration  11: 0.338 s/op
# Warmup Iteration  12: 0.338 s/op
# Warmup Iteration  13: 0.430 s/op
# Warmup Iteration  14: 0.339 s/op
# Warmup Iteration  15: 0.472 s/op
# Warmup Iteration  16: 0.517 s/op
# Warmup Iteration  17: 0.518 s/op
# Warmup Iteration  18: 0.515 s/op
# Warmup Iteration  19: 0.459 s/op
# Warmup Iteration  20: 0.338 s/op
Iteration   1: 0.339 s/op
Iteration   2: 0.441 s/op
Iteration   3: 0.340 s/op
Iteration   4: 0.338 s/op
Iteration   5: 0.441 s/op
Iteration   6: 0.339 s/op
Iteration   7: 0.339 s/op
Iteration   8: 0.584 s/op
Iteration   9: 0.520 s/op
Iteration  10: 0.451 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorEXP":
  N = 10
  mean =      0.413 ±(99.9%) 0.134 s/op

  Histogram, s/op:
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 5 
    [0.350, 0.375) = 0 
    [0.375, 0.400) = 0 
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 2 
    [0.450, 0.475) = 1 
    [0.475, 0.500) = 0 
    [0.500, 0.525) = 1 
    [0.525, 0.550) = 0 
    [0.550, 0.575) = 0 
    [0.575, 0.600) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.338 s/op
     p(50.0000) =      0.390 s/op
     p(90.0000) =      0.578 s/op
     p(95.0000) =      0.584 s/op
     p(99.0000) =      0.584 s/op
     p(99.9000) =      0.584 s/op
     p(99.9900) =      0.584 s/op
     p(99.9990) =      0.584 s/op
     p(99.9999) =      0.584 s/op
    p(100.0000) =      0.584 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorEXPM1

# Run progress: 66.67% complete, ETA 00:20:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.648 s/op
# Warmup Iteration   2: 0.449 s/op
# Warmup Iteration   3: 0.383 s/op
# Warmup Iteration   4: 0.504 s/op
# Warmup Iteration   5: 0.533 s/op
# Warmup Iteration   6: 0.471 s/op
# Warmup Iteration   7: 0.463 s/op
# Warmup Iteration   8: 0.351 s/op
# Warmup Iteration   9: 0.349 s/op
# Warmup Iteration  10: 0.445 s/op
# Warmup Iteration  11: 0.350 s/op
# Warmup Iteration  12: 0.349 s/op
# Warmup Iteration  13: 0.443 s/op
# Warmup Iteration  14: 0.350 s/op
# Warmup Iteration  15: 0.485 s/op
# Warmup Iteration  16: 0.535 s/op
# Warmup Iteration  17: 0.531 s/op
# Warmup Iteration  18: 0.529 s/op
# Warmup Iteration  19: 0.467 s/op
# Warmup Iteration  20: 0.352 s/op
Iteration   1: 0.350 s/op
Iteration   2: 0.454 s/op
Iteration   3: 0.351 s/op
Iteration   4: 0.351 s/op
Iteration   5: 0.452 s/op
Iteration   6: 0.352 s/op
Iteration   7: 0.351 s/op
Iteration   8: 0.595 s/op
Iteration   9: 0.536 s/op
Iteration  10: 0.435 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorEXPM1":
  N = 10
  mean =      0.423 ±(99.9%) 0.134 s/op

  Histogram, s/op:
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 0 
    [0.350, 0.375) = 5 
    [0.375, 0.400) = 0 
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 1 
    [0.450, 0.475) = 2 
    [0.475, 0.500) = 0 
    [0.500, 0.525) = 0 
    [0.525, 0.550) = 1 
    [0.550, 0.575) = 0 
    [0.575, 0.600) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.350 s/op
     p(50.0000) =      0.393 s/op
     p(90.0000) =      0.589 s/op
     p(95.0000) =      0.595 s/op
     p(99.0000) =      0.595 s/op
     p(99.9000) =      0.595 s/op
     p(99.9900) =      0.595 s/op
     p(99.9990) =      0.595 s/op
     p(99.9999) =      0.595 s/op
    p(100.0000) =      0.595 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorHYPOT

# Run progress: 68.75% complete, ETA 00:18:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.683 s/op
# Warmup Iteration   2: 0.473 s/op
# Warmup Iteration   3: 0.419 s/op
# Warmup Iteration   4: 0.544 s/op
# Warmup Iteration   5: 0.564 s/op
# Warmup Iteration   6: 0.505 s/op
# Warmup Iteration   7: 0.503 s/op
# Warmup Iteration   8: 0.390 s/op
# Warmup Iteration   9: 0.390 s/op
# Warmup Iteration  10: 0.486 s/op
# Warmup Iteration  11: 0.393 s/op
# Warmup Iteration  12: 0.486 s/op
# Warmup Iteration  13: 0.391 s/op
# Warmup Iteration  14: 0.389 s/op
# Warmup Iteration  15: 0.526 s/op
# Warmup Iteration  16: 0.568 s/op
# Warmup Iteration  17: 0.566 s/op
# Warmup Iteration  18: 0.562 s/op
# Warmup Iteration  19: 0.503 s/op
# Warmup Iteration  20: 0.392 s/op
Iteration   1: 0.391 s/op
Iteration   2: 0.493 s/op
Iteration   3: 0.391 s/op
Iteration   4: 0.390 s/op
Iteration   5: 0.493 s/op
Iteration   6: 0.391 s/op
Iteration   7: 0.390 s/op
Iteration   8: 0.639 s/op
Iteration   9: 0.564 s/op
Iteration  10: 0.398 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorHYPOT":
  N = 10
  mean =      0.454 ±(99.9%) 0.136 s/op

  Histogram, s/op:
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 0 
    [0.350, 0.375) = 0 
    [0.375, 0.400) = 6 
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 0 
    [0.450, 0.475) = 0 
    [0.475, 0.500) = 2 
    [0.500, 0.525) = 0 
    [0.525, 0.550) = 0 
    [0.550, 0.575) = 1 
    [0.575, 0.600) = 0 
    [0.600, 0.625) = 0 
    [0.625, 0.650) = 1 
    [0.650, 0.675) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.390 s/op
     p(50.0000) =      0.394 s/op
     p(90.0000) =      0.632 s/op
     p(95.0000) =      0.639 s/op
     p(99.0000) =      0.639 s/op
     p(99.9000) =      0.639 s/op
     p(99.9900) =      0.639 s/op
     p(99.9990) =      0.639 s/op
     p(99.9999) =      0.639 s/op
    p(100.0000) =      0.639 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorLOG

# Run progress: 70.83% complete, ETA 00:17:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.626 s/op
# Warmup Iteration   2: 0.443 s/op
# Warmup Iteration   3: 0.371 s/op
# Warmup Iteration   4: 0.498 s/op
# Warmup Iteration   5: 0.521 s/op
# Warmup Iteration   6: 0.458 s/op
# Warmup Iteration   7: 0.452 s/op
# Warmup Iteration   8: 0.342 s/op
# Warmup Iteration   9: 0.341 s/op
# Warmup Iteration  10: 0.435 s/op
# Warmup Iteration  11: 0.341 s/op
# Warmup Iteration  12: 0.433 s/op
# Warmup Iteration  13: 0.341 s/op
# Warmup Iteration  14: 0.342 s/op
# Warmup Iteration  15: 0.482 s/op
# Warmup Iteration  16: 0.522 s/op
# Warmup Iteration  17: 0.519 s/op
# Warmup Iteration  18: 0.520 s/op
# Warmup Iteration  19: 0.452 s/op
# Warmup Iteration  20: 0.343 s/op
Iteration   1: 0.342 s/op
Iteration   2: 0.445 s/op
Iteration   3: 0.342 s/op
Iteration   4: 0.342 s/op
Iteration   5: 0.442 s/op
Iteration   6: 0.343 s/op
Iteration   7: 0.342 s/op
Iteration   8: 0.597 s/op
Iteration   9: 0.520 s/op
Iteration  10: 0.437 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorLOG":
  N = 10
  mean =      0.415 ±(99.9%) 0.136 s/op

  Histogram, s/op:
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 5 
    [0.350, 0.375) = 0 
    [0.375, 0.400) = 0 
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 3 
    [0.450, 0.475) = 0 
    [0.475, 0.500) = 0 
    [0.500, 0.525) = 1 
    [0.525, 0.550) = 0 
    [0.550, 0.575) = 0 
    [0.575, 0.600) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.342 s/op
     p(50.0000) =      0.390 s/op
     p(90.0000) =      0.589 s/op
     p(95.0000) =      0.597 s/op
     p(99.0000) =      0.597 s/op
     p(99.9000) =      0.597 s/op
     p(99.9900) =      0.597 s/op
     p(99.9990) =      0.597 s/op
     p(99.9999) =      0.597 s/op
    p(100.0000) =      0.597 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorLOG10

# Run progress: 72.92% complete, ETA 00:15:32
# Fork: 1 of 1
# Warmup Iteration   1: 0.636 s/op
# Warmup Iteration   2: 0.429 s/op
# Warmup Iteration   3: 0.375 s/op
# Warmup Iteration   4: 0.498 s/op
# Warmup Iteration   5: 0.525 s/op
# Warmup Iteration   6: 0.465 s/op
# Warmup Iteration   7: 0.465 s/op
# Warmup Iteration   8: 0.343 s/op
# Warmup Iteration   9: 0.343 s/op
# Warmup Iteration  10: 0.437 s/op
# Warmup Iteration  11: 0.343 s/op
# Warmup Iteration  12: 0.343 s/op
# Warmup Iteration  13: 0.436 s/op
# Warmup Iteration  14: 0.343 s/op
# Warmup Iteration  15: 0.471 s/op
# Warmup Iteration  16: 0.526 s/op
# Warmup Iteration  17: 0.523 s/op
# Warmup Iteration  18: 0.522 s/op
# Warmup Iteration  19: 0.466 s/op
# Warmup Iteration  20: 0.345 s/op
Iteration   1: 0.345 s/op
Iteration   2: 0.446 s/op
Iteration   3: 0.345 s/op
Iteration   4: 0.344 s/op
Iteration   5: 0.446 s/op
Iteration   6: 0.345 s/op
Iteration   7: 0.344 s/op
Iteration   8: 0.589 s/op
Iteration   9: 0.523 s/op
Iteration  10: 0.447 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorLOG10":
  N = 10
  mean =      0.417 ±(99.9%) 0.133 s/op

  Histogram, s/op:
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 5 
    [0.350, 0.375) = 0 
    [0.375, 0.400) = 0 
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 3 
    [0.450, 0.475) = 0 
    [0.475, 0.500) = 0 
    [0.500, 0.525) = 1 
    [0.525, 0.550) = 0 
    [0.550, 0.575) = 0 
    [0.575, 0.600) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.344 s/op
     p(50.0000) =      0.395 s/op
     p(90.0000) =      0.582 s/op
     p(95.0000) =      0.589 s/op
     p(99.0000) =      0.589 s/op
     p(99.9000) =      0.589 s/op
     p(99.9900) =      0.589 s/op
     p(99.9990) =      0.589 s/op
     p(99.9999) =      0.589 s/op
    p(100.0000) =      0.589 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorLOG1P

# Run progress: 75.00% complete, ETA 00:14:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.676 s/op
# Warmup Iteration   2: 0.460 s/op
# Warmup Iteration   3: 0.402 s/op
# Warmup Iteration   4: 0.526 s/op
# Warmup Iteration   5: 0.554 s/op
# Warmup Iteration   6: 0.496 s/op
# Warmup Iteration   7: 0.483 s/op
# Warmup Iteration   8: 0.369 s/op
# Warmup Iteration   9: 0.369 s/op
# Warmup Iteration  10: 0.465 s/op
# Warmup Iteration  11: 0.369 s/op
# Warmup Iteration  12: 0.369 s/op
# Warmup Iteration  13: 0.464 s/op
# Warmup Iteration  14: 0.369 s/op
# Warmup Iteration  15: 0.503 s/op
# Warmup Iteration  16: 0.556 s/op
# Warmup Iteration  17: 0.546 s/op
# Warmup Iteration  18: 0.560 s/op
# Warmup Iteration  19: 0.487 s/op
# Warmup Iteration  20: 0.370 s/op
Iteration   1: 0.370 s/op
Iteration   2: 0.474 s/op
Iteration   3: 0.369 s/op
Iteration   4: 0.371 s/op
Iteration   5: 0.470 s/op
Iteration   6: 0.371 s/op
Iteration   7: 0.369 s/op
Iteration   8: 0.621 s/op
Iteration   9: 0.551 s/op
Iteration  10: 0.415 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorLOG1P":
  N = 10
  mean =      0.438 ±(99.9%) 0.135 s/op

  Histogram, s/op:
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 0 
    [0.350, 0.375) = 5 
    [0.375, 0.400) = 0 
    [0.400, 0.425) = 1 
    [0.425, 0.450) = 0 
    [0.450, 0.475) = 2 
    [0.475, 0.500) = 0 
    [0.500, 0.525) = 0 
    [0.525, 0.550) = 0 
    [0.550, 0.575) = 1 
    [0.575, 0.600) = 0 
    [0.600, 0.625) = 1 
    [0.625, 0.650) = 0 
    [0.650, 0.675) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.369 s/op
     p(50.0000) =      0.393 s/op
     p(90.0000) =      0.614 s/op
     p(95.0000) =      0.621 s/op
     p(99.0000) =      0.621 s/op
     p(99.9000) =      0.621 s/op
     p(99.9900) =      0.621 s/op
     p(99.9990) =      0.621 s/op
     p(99.9999) =      0.621 s/op
    p(100.0000) =      0.621 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorMUL0

# Run progress: 77.08% complete, ETA 00:12:39
# Fork: 1 of 1
# Warmup Iteration   1: 0.600 s/op
# Warmup Iteration   2: 0.377 s/op
# Warmup Iteration   3: 0.321 s/op
# Warmup Iteration   4: 0.445 s/op
# Warmup Iteration   5: 0.458 s/op
# Warmup Iteration   6: 0.405 s/op
# Warmup Iteration   7: 0.423 s/op
# Warmup Iteration   8: 0.291 s/op
# Warmup Iteration   9: 0.291 s/op
# Warmup Iteration  10: 0.386 s/op
# Warmup Iteration  11: 0.291 s/op
# Warmup Iteration  12: 0.290 s/op
# Warmup Iteration  13: 0.386 s/op
# Warmup Iteration  14: 0.291 s/op
# Warmup Iteration  15: 0.389 s/op
# Warmup Iteration  16: 0.460 s/op
# Warmup Iteration  17: 0.457 s/op
# Warmup Iteration  18: 0.460 s/op
# Warmup Iteration  19: 0.433 s/op
# Warmup Iteration  20: 0.293 s/op
Iteration   1: 0.291 s/op
Iteration   2: 0.393 s/op
Iteration   3: 0.291 s/op
Iteration   4: 0.292 s/op
Iteration   5: 0.393 s/op
Iteration   6: 0.293 s/op
Iteration   7: 0.291 s/op
Iteration   8: 0.504 s/op
Iteration   9: 0.458 s/op
Iteration  10: 0.461 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorMUL0":
  N = 10
  mean =      0.367 ±(99.9%) 0.129 s/op

  Histogram, s/op:
    [0.200, 0.225) = 0 
    [0.225, 0.250) = 0 
    [0.250, 0.275) = 0 
    [0.275, 0.300) = 5 
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 0 
    [0.350, 0.375) = 0 
    [0.375, 0.400) = 2 
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 0 
    [0.450, 0.475) = 2 
    [0.475, 0.500) = 0 
    [0.500, 0.525) = 1 
    [0.525, 0.550) = 0 
    [0.550, 0.575) = 0 
    [0.575, 0.600) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.291 s/op
     p(50.0000) =      0.343 s/op
     p(90.0000) =      0.499 s/op
     p(95.0000) =      0.504 s/op
     p(99.0000) =      0.504 s/op
     p(99.9000) =      0.504 s/op
     p(99.9900) =      0.504 s/op
     p(99.9990) =      0.504 s/op
     p(99.9999) =      0.504 s/op
    p(100.0000) =      0.504 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorMUL1

# Run progress: 79.17% complete, ETA 00:11:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.595 s/op
# Warmup Iteration   2: 0.394 s/op
# Warmup Iteration   3: 0.325 s/op
# Warmup Iteration   4: 0.455 s/op
# Warmup Iteration   5: 0.460 s/op
# Warmup Iteration   6: 0.401 s/op
# Warmup Iteration   7: 0.418 s/op
# Warmup Iteration   8: 0.294 s/op
# Warmup Iteration   9: 0.293 s/op
# Warmup Iteration  10: 0.389 s/op
# Warmup Iteration  11: 0.294 s/op
# Warmup Iteration  12: 0.293 s/op
# Warmup Iteration  13: 0.389 s/op
# Warmup Iteration  14: 0.294 s/op
# Warmup Iteration  15: 0.406 s/op
# Warmup Iteration  16: 0.462 s/op
# Warmup Iteration  17: 0.459 s/op
# Warmup Iteration  18: 0.461 s/op
# Warmup Iteration  19: 0.423 s/op
# Warmup Iteration  20: 0.296 s/op
Iteration   1: 0.294 s/op
Iteration   2: 0.398 s/op
Iteration   3: 0.294 s/op
Iteration   4: 0.295 s/op
Iteration   5: 0.395 s/op
Iteration   6: 0.295 s/op
Iteration   7: 0.294 s/op
Iteration   8: 0.518 s/op
Iteration   9: 0.460 s/op
Iteration  10: 0.462 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorMUL1":
  N = 10
  mean =      0.371 ±(99.9%) 0.132 s/op

  Histogram, s/op:
    [0.200, 0.225) = 0 
    [0.225, 0.250) = 0 
    [0.250, 0.275) = 0 
    [0.275, 0.300) = 5 
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 0 
    [0.350, 0.375) = 0 
    [0.375, 0.400) = 2 
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 0 
    [0.450, 0.475) = 2 
    [0.475, 0.500) = 0 
    [0.500, 0.525) = 1 
    [0.525, 0.550) = 0 
    [0.550, 0.575) = 0 
    [0.575, 0.600) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.294 s/op
     p(50.0000) =      0.345 s/op
     p(90.0000) =      0.513 s/op
     p(95.0000) =      0.518 s/op
     p(99.0000) =      0.518 s/op
     p(99.9000) =      0.518 s/op
     p(99.9900) =      0.518 s/op
     p(99.9990) =      0.518 s/op
     p(99.9999) =      0.518 s/op
    p(100.0000) =      0.518 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorMUL2

# Run progress: 81.25% complete, ETA 00:09:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.569 s/op
# Warmup Iteration   2: 0.372 s/op
# Warmup Iteration   3: 0.323 s/op
# Warmup Iteration   4: 0.438 s/op
# Warmup Iteration   5: 0.457 s/op
# Warmup Iteration   6: 0.411 s/op
# Warmup Iteration   7: 0.419 s/op
# Warmup Iteration   8: 0.291 s/op
# Warmup Iteration   9: 0.292 s/op
# Warmup Iteration  10: 0.385 s/op
# Warmup Iteration  11: 0.291 s/op
# Warmup Iteration  12: 0.291 s/op
# Warmup Iteration  13: 0.386 s/op
# Warmup Iteration  14: 0.291 s/op
# Warmup Iteration  15: 0.292 s/op
# Warmup Iteration  16: 0.554 s/op
# Warmup Iteration  17: 0.458 s/op
# Warmup Iteration  18: 0.455 s/op
# Warmup Iteration  19: 0.434 s/op
# Warmup Iteration  20: 0.292 s/op
Iteration   1: 0.293 s/op
Iteration   2: 0.394 s/op
Iteration   3: 0.293 s/op
Iteration   4: 0.292 s/op
Iteration   5: 0.393 s/op
Iteration   6: 0.292 s/op
Iteration   7: 0.293 s/op
Iteration   8: 0.501 s/op
Iteration   9: 0.460 s/op
Iteration  10: 0.457 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorMUL2":
  N = 10
  mean =      0.367 ±(99.9%) 0.127 s/op

  Histogram, s/op:
    [0.200, 0.225) = 0 
    [0.225, 0.250) = 0 
    [0.250, 0.275) = 0 
    [0.275, 0.300) = 5 
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 0 
    [0.350, 0.375) = 0 
    [0.375, 0.400) = 2 
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 0 
    [0.450, 0.475) = 2 
    [0.475, 0.500) = 0 
    [0.500, 0.525) = 1 
    [0.525, 0.550) = 0 
    [0.550, 0.575) = 0 
    [0.575, 0.600) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.292 s/op
     p(50.0000) =      0.343 s/op
     p(90.0000) =      0.497 s/op
     p(95.0000) =      0.501 s/op
     p(99.0000) =      0.501 s/op
     p(99.9000) =      0.501 s/op
     p(99.9900) =      0.501 s/op
     p(99.9990) =      0.501 s/op
     p(99.9999) =      0.501 s/op
    p(100.0000) =      0.501 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorPOW

# Run progress: 83.33% complete, ETA 00:08:43
# Fork: 1 of 1
# Warmup Iteration   1: 0.798 s/op
# Warmup Iteration   2: 0.594 s/op
# Warmup Iteration   3: 0.518 s/op
# Warmup Iteration   4: 0.655 s/op
# Warmup Iteration   5: 0.671 s/op
# Warmup Iteration   6: 0.601 s/op
# Warmup Iteration   7: 0.587 s/op
# Warmup Iteration   8: 0.487 s/op
# Warmup Iteration   9: 0.485 s/op
# Warmup Iteration  10: 0.579 s/op
# Warmup Iteration  11: 0.487 s/op
# Warmup Iteration  12: 0.577 s/op
# Warmup Iteration  13: 0.486 s/op
# Warmup Iteration  14: 0.486 s/op
# Warmup Iteration  15: 0.651 s/op
# Warmup Iteration  16: 0.671 s/op
# Warmup Iteration  17: 0.673 s/op
# Warmup Iteration  18: 0.762 s/op
# Warmup Iteration  19: 0.488 s/op
# Warmup Iteration  20: 0.487 s/op
Iteration   1: 0.590 s/op
Iteration   2: 0.487 s/op
Iteration   3: 0.487 s/op
Iteration   4: 0.486 s/op
Iteration   5: 0.590 s/op
Iteration   6: 0.487 s/op
Iteration   7: 0.487 s/op
Iteration   8: 0.758 s/op
Iteration   9: 0.522 s/op
Iteration  10: 0.488 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorPOW":
  N = 10
  mean =      0.538 ±(99.9%) 0.133 s/op

  Histogram, s/op:
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 0 
    [0.450, 0.475) = 0 
    [0.475, 0.500) = 6 
    [0.500, 0.525) = 1 
    [0.525, 0.550) = 0 
    [0.550, 0.575) = 0 
    [0.575, 0.600) = 2 
    [0.600, 0.625) = 0 
    [0.625, 0.650) = 0 
    [0.650, 0.675) = 0 
    [0.675, 0.700) = 0 
    [0.700, 0.725) = 0 
    [0.725, 0.750) = 0 
    [0.750, 0.775) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.486 s/op
     p(50.0000) =      0.488 s/op
     p(90.0000) =      0.741 s/op
     p(95.0000) =      0.758 s/op
     p(99.0000) =      0.758 s/op
     p(99.9000) =      0.758 s/op
     p(99.9900) =      0.758 s/op
     p(99.9990) =      0.758 s/op
     p(99.9999) =      0.758 s/op
    p(100.0000) =      0.758 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorPOW0

# Run progress: 85.42% complete, ETA 00:07:30
# Fork: 1 of 1
# Warmup Iteration   1: 0.788 s/op
# Warmup Iteration   2: 0.553 s/op
# Warmup Iteration   3: 0.491 s/op
# Warmup Iteration   4: 0.633 s/op
# Warmup Iteration   5: 0.646 s/op
# Warmup Iteration   6: 0.575 s/op
# Warmup Iteration   7: 0.617 s/op
# Warmup Iteration   8: 0.462 s/op
# Warmup Iteration   9: 0.461 s/op
# Warmup Iteration  10: 0.556 s/op
# Warmup Iteration  11: 0.462 s/op
# Warmup Iteration  12: 0.462 s/op
# Warmup Iteration  13: 0.555 s/op
# Warmup Iteration  14: 0.462 s/op
# Warmup Iteration  15: 0.575 s/op
# Warmup Iteration  16: 0.647 s/op
# Warmup Iteration  17: 0.645 s/op
# Warmup Iteration  18: 0.648 s/op
# Warmup Iteration  19: 0.595 s/op
# Warmup Iteration  20: 0.463 s/op
Iteration   1: 0.462 s/op
Iteration   2: 0.566 s/op
Iteration   3: 0.462 s/op
Iteration   4: 0.463 s/op
Iteration   5: 0.563 s/op
Iteration   6: 0.464 s/op
Iteration   7: 0.462 s/op
Iteration   8: 0.692 s/op
Iteration   9: 0.566 s/op
Iteration  10: 0.463 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorPOW0":
  N = 10
  mean =      0.516 ±(99.9%) 0.118 s/op

  Histogram, s/op:
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 0 
    [0.450, 0.475) = 6 
    [0.475, 0.500) = 0 
    [0.500, 0.525) = 0 
    [0.525, 0.550) = 0 
    [0.550, 0.575) = 3 
    [0.575, 0.600) = 0 
    [0.600, 0.625) = 0 
    [0.625, 0.650) = 0 
    [0.650, 0.675) = 0 
    [0.675, 0.700) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.462 s/op
     p(50.0000) =      0.463 s/op
     p(90.0000) =      0.679 s/op
     p(95.0000) =      0.692 s/op
     p(99.0000) =      0.692 s/op
     p(99.9000) =      0.692 s/op
     p(99.9900) =      0.692 s/op
     p(99.9990) =      0.692 s/op
     p(99.9999) =      0.692 s/op
    p(100.0000) =      0.692 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorPOW1

# Run progress: 87.50% complete, ETA 00:06:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.795 s/op
# Warmup Iteration   2: 0.557 s/op
# Warmup Iteration   3: 0.493 s/op
# Warmup Iteration   4: 0.623 s/op
# Warmup Iteration   5: 0.645 s/op
# Warmup Iteration   6: 0.586 s/op
# Warmup Iteration   7: 0.563 s/op
# Warmup Iteration   8: 0.464 s/op
# Warmup Iteration   9: 0.462 s/op
# Warmup Iteration  10: 0.557 s/op
# Warmup Iteration  11: 0.463 s/op
# Warmup Iteration  12: 0.554 s/op
# Warmup Iteration  13: 0.464 s/op
# Warmup Iteration  14: 0.463 s/op
# Warmup Iteration  15: 0.621 s/op
# Warmup Iteration  16: 0.660 s/op
# Warmup Iteration  17: 0.658 s/op
# Warmup Iteration  18: 0.765 s/op
# Warmup Iteration  19: 0.465 s/op
# Warmup Iteration  20: 0.464 s/op
Iteration   1: 0.463 s/op
Iteration   2: 0.565 s/op
Iteration   3: 0.464 s/op
Iteration   4: 0.463 s/op
Iteration   5: 0.565 s/op
Iteration   6: 0.463 s/op
Iteration   7: 0.464 s/op
Iteration   8: 0.717 s/op
Iteration   9: 0.535 s/op
Iteration  10: 0.464 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorPOW1":
  N = 10
  mean =      0.516 ±(99.9%) 0.126 s/op

  Histogram, s/op:
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 0 
    [0.450, 0.475) = 6 
    [0.475, 0.500) = 0 
    [0.500, 0.525) = 0 
    [0.525, 0.550) = 1 
    [0.550, 0.575) = 2 
    [0.575, 0.600) = 0 
    [0.600, 0.625) = 0 
    [0.625, 0.650) = 0 
    [0.650, 0.675) = 0 
    [0.675, 0.700) = 0 
    [0.700, 0.725) = 1 
    [0.725, 0.750) = 0 
    [0.750, 0.775) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.463 s/op
     p(50.0000) =      0.464 s/op
     p(90.0000) =      0.702 s/op
     p(95.0000) =      0.717 s/op
     p(99.0000) =      0.717 s/op
     p(99.9000) =      0.717 s/op
     p(99.9900) =      0.717 s/op
     p(99.9990) =      0.717 s/op
     p(99.9999) =      0.717 s/op
    p(100.0000) =      0.717 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorPOW2

# Run progress: 89.58% complete, ETA 00:05:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.780 s/op
# Warmup Iteration   2: 0.551 s/op
# Warmup Iteration   3: 0.491 s/op
# Warmup Iteration   4: 0.630 s/op
# Warmup Iteration   5: 0.646 s/op
# Warmup Iteration   6: 0.573 s/op
# Warmup Iteration   7: 0.558 s/op
# Warmup Iteration   8: 0.462 s/op
# Warmup Iteration   9: 0.555 s/op
# Warmup Iteration  10: 0.462 s/op
# Warmup Iteration  11: 0.462 s/op
# Warmup Iteration  12: 0.555 s/op
# Warmup Iteration  13: 0.462 s/op
# Warmup Iteration  14: 0.462 s/op
# Warmup Iteration  15: 0.661 s/op
# Warmup Iteration  16: 0.647 s/op
# Warmup Iteration  17: 0.645 s/op
# Warmup Iteration  18: 0.706 s/op
# Warmup Iteration  19: 0.464 s/op
# Warmup Iteration  20: 0.463 s/op
Iteration   1: 0.565 s/op
Iteration   2: 0.464 s/op
Iteration   3: 0.462 s/op
Iteration   4: 0.564 s/op
Iteration   5: 0.466 s/op
Iteration   6: 0.466 s/op
Iteration   7: 0.581 s/op
Iteration   8: 0.649 s/op
Iteration   9: 0.491 s/op
Iteration  10: 0.565 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorPOW2":
  N = 10
  mean =      0.527 ±(99.9%) 0.099 s/op

  Histogram, s/op:
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 0 
    [0.450, 0.475) = 4 
    [0.475, 0.500) = 1 
    [0.500, 0.525) = 0 
    [0.525, 0.550) = 0 
    [0.550, 0.575) = 3 
    [0.575, 0.600) = 1 
    [0.600, 0.625) = 0 
    [0.625, 0.650) = 1 
    [0.650, 0.675) = 0 
    [0.675, 0.700) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.462 s/op
     p(50.0000) =      0.528 s/op
     p(90.0000) =      0.642 s/op
     p(95.0000) =      0.649 s/op
     p(99.0000) =      0.649 s/op
     p(99.9000) =      0.649 s/op
     p(99.9900) =      0.649 s/op
     p(99.9990) =      0.649 s/op
     p(99.9999) =      0.649 s/op
    p(100.0000) =      0.649 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorSIN

# Run progress: 91.67% complete, ETA 00:04:06
# Fork: 1 of 1
# Warmup Iteration   1: 0.658 s/op
# Warmup Iteration   2: 0.467 s/op
# Warmup Iteration   3: 0.392 s/op
# Warmup Iteration   4: 0.519 s/op
# Warmup Iteration   5: 0.547 s/op
# Warmup Iteration   6: 0.486 s/op
# Warmup Iteration   7: 0.482 s/op
# Warmup Iteration   8: 0.361 s/op
# Warmup Iteration   9: 0.362 s/op
# Warmup Iteration  10: 0.456 s/op
# Warmup Iteration  11: 0.362 s/op
# Warmup Iteration  12: 0.363 s/op
# Warmup Iteration  13: 0.455 s/op
# Warmup Iteration  14: 0.362 s/op
# Warmup Iteration  15: 0.495 s/op
# Warmup Iteration  16: 0.542 s/op
# Warmup Iteration  17: 0.540 s/op
# Warmup Iteration  18: 0.536 s/op
# Warmup Iteration  19: 0.485 s/op
# Warmup Iteration  20: 0.363 s/op
Iteration   1: 0.363 s/op
Iteration   2: 0.465 s/op
Iteration   3: 0.364 s/op
Iteration   4: 0.363 s/op
Iteration   5: 0.464 s/op
Iteration   6: 0.364 s/op
Iteration   7: 0.363 s/op
Iteration   8: 0.607 s/op
Iteration   9: 0.545 s/op
Iteration  10: 0.425 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorSIN":
  N = 10
  mean =      0.432 ±(99.9%) 0.133 s/op

  Histogram, s/op:
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 0 
    [0.350, 0.375) = 5 
    [0.375, 0.400) = 0 
    [0.400, 0.425) = 1 
    [0.425, 0.450) = 0 
    [0.450, 0.475) = 2 
    [0.475, 0.500) = 0 
    [0.500, 0.525) = 0 
    [0.525, 0.550) = 1 
    [0.550, 0.575) = 0 
    [0.575, 0.600) = 0 
    [0.600, 0.625) = 1 
    [0.625, 0.650) = 0 
    [0.650, 0.675) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.363 s/op
     p(50.0000) =      0.394 s/op
     p(90.0000) =      0.601 s/op
     p(95.0000) =      0.607 s/op
     p(99.0000) =      0.607 s/op
     p(99.9000) =      0.607 s/op
     p(99.9900) =      0.607 s/op
     p(99.9990) =      0.607 s/op
     p(99.9999) =      0.607 s/op
    p(100.0000) =      0.607 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorSINH

# Run progress: 93.75% complete, ETA 00:03:02
# Fork: 1 of 1
# Warmup Iteration   1: 0.690 s/op
# Warmup Iteration   2: 0.467 s/op
# Warmup Iteration   3: 0.398 s/op
# Warmup Iteration   4: 0.517 s/op
# Warmup Iteration   5: 0.544 s/op
# Warmup Iteration   6: 0.487 s/op
# Warmup Iteration   7: 0.472 s/op
# Warmup Iteration   8: 0.364 s/op
# Warmup Iteration   9: 0.362 s/op
# Warmup Iteration  10: 0.457 s/op
# Warmup Iteration  11: 0.363 s/op
# Warmup Iteration  12: 0.361 s/op
# Warmup Iteration  13: 0.455 s/op
# Warmup Iteration  14: 0.362 s/op
# Warmup Iteration  15: 0.502 s/op
# Warmup Iteration  16: 0.554 s/op
# Warmup Iteration  17: 0.543 s/op
# Warmup Iteration  18: 0.541 s/op
# Warmup Iteration  19: 0.481 s/op
# Warmup Iteration  20: 0.365 s/op
Iteration   1: 0.363 s/op
Iteration   2: 0.465 s/op
Iteration   3: 0.363 s/op
Iteration   4: 0.364 s/op
Iteration   5: 0.464 s/op
Iteration   6: 0.363 s/op
Iteration   7: 0.364 s/op
Iteration   8: 0.603 s/op
Iteration   9: 0.548 s/op
Iteration  10: 0.426 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorSINH":
  N = 10
  mean =      0.432 ±(99.9%) 0.132 s/op

  Histogram, s/op:
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 0 
    [0.350, 0.375) = 5 
    [0.375, 0.400) = 0 
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 1 
    [0.450, 0.475) = 2 
    [0.475, 0.500) = 0 
    [0.500, 0.525) = 0 
    [0.525, 0.550) = 1 
    [0.550, 0.575) = 0 
    [0.575, 0.600) = 0 
    [0.600, 0.625) = 1 
    [0.625, 0.650) = 0 
    [0.650, 0.675) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.363 s/op
     p(50.0000) =      0.395 s/op
     p(90.0000) =      0.598 s/op
     p(95.0000) =      0.603 s/op
     p(99.0000) =      0.603 s/op
     p(99.9000) =      0.603 s/op
     p(99.9900) =      0.603 s/op
     p(99.9990) =      0.603 s/op
     p(99.9999) =      0.603 s/op
    p(100.0000) =      0.603 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorTAN

# Run progress: 95.83% complete, ETA 00:01:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.695 s/op
# Warmup Iteration   2: 0.483 s/op
# Warmup Iteration   3: 0.429 s/op
# Warmup Iteration   4: 0.553 s/op
# Warmup Iteration   5: 0.579 s/op
# Warmup Iteration   6: 0.523 s/op
# Warmup Iteration   7: 0.509 s/op
# Warmup Iteration   8: 0.396 s/op
# Warmup Iteration   9: 0.394 s/op
# Warmup Iteration  10: 0.490 s/op
# Warmup Iteration  11: 0.396 s/op
# Warmup Iteration  12: 0.395 s/op
# Warmup Iteration  13: 0.488 s/op
# Warmup Iteration  14: 0.394 s/op
# Warmup Iteration  15: 0.532 s/op
# Warmup Iteration  16: 0.580 s/op
# Warmup Iteration  17: 0.581 s/op
# Warmup Iteration  18: 0.581 s/op
# Warmup Iteration  19: 0.516 s/op
# Warmup Iteration  20: 0.396 s/op
Iteration   1: 0.397 s/op
Iteration   2: 0.498 s/op
Iteration   3: 0.397 s/op
Iteration   4: 0.395 s/op
Iteration   5: 0.497 s/op
Iteration   6: 0.396 s/op
Iteration   7: 0.397 s/op
Iteration   8: 0.647 s/op
Iteration   9: 0.578 s/op
Iteration  10: 0.397 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorTAN":
  N = 10
  mean =      0.460 ±(99.9%) 0.139 s/op

  Histogram, s/op:
    [0.300, 0.325) = 0 
    [0.325, 0.350) = 0 
    [0.350, 0.375) = 0 
    [0.375, 0.400) = 6 
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 0 
    [0.450, 0.475) = 0 
    [0.475, 0.500) = 2 
    [0.500, 0.525) = 0 
    [0.525, 0.550) = 0 
    [0.550, 0.575) = 0 
    [0.575, 0.600) = 1 
    [0.600, 0.625) = 0 
    [0.625, 0.650) = 1 
    [0.650, 0.675) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.395 s/op
     p(50.0000) =      0.397 s/op
     p(90.0000) =      0.640 s/op
     p(95.0000) =      0.647 s/op
     p(99.0000) =      0.647 s/op
     p(99.9000) =      0.647 s/op
     p(99.9900) =      0.647 s/op
     p(99.9990) =      0.647 s/op
     p(99.9999) =      0.647 s/op
    p(100.0000) =      0.647 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc.root.jdk19
# VM invoker: /usr/lib/jvm/jdk19/build/linux-x86_64-server-fastdebug/jdk/bin/java
# VM options: --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 20 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorTANH

# Run progress: 97.92% complete, ETA 00:00:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.790 s/op
# Warmup Iteration   2: 0.547 s/op
# Warmup Iteration   3: 0.479 s/op
# Warmup Iteration   4: 0.598 s/op
# Warmup Iteration   5: 0.625 s/op
# Warmup Iteration   6: 0.572 s/op
# Warmup Iteration   7: 0.557 s/op
# Warmup Iteration   8: 0.452 s/op
# Warmup Iteration   9: 0.451 s/op
# Warmup Iteration  10: 0.541 s/op
# Warmup Iteration  11: 0.444 s/op
# Warmup Iteration  12: 0.443 s/op
# Warmup Iteration  13: 0.538 s/op
# Warmup Iteration  14: 0.444 s/op
# Warmup Iteration  15: 0.581 s/op
# Warmup Iteration  16: 0.629 s/op
# Warmup Iteration  17: 0.626 s/op
# Warmup Iteration  18: 0.626 s/op
# Warmup Iteration  19: 0.566 s/op
# Warmup Iteration  20: 0.445 s/op
Iteration   1: 0.444 s/op
Iteration   2: 0.547 s/op
Iteration   3: 0.446 s/op
Iteration   4: 0.444 s/op
Iteration   5: 0.547 s/op
Iteration   6: 0.445 s/op
Iteration   7: 0.445 s/op
Iteration   8: 0.684 s/op
Iteration   9: 0.553 s/op
Iteration  10: 0.445 s/op


Result "inf.usi.dag.micro.TranscendentalOperationBenchmark.vectorTANH":
  N = 10
  mean =      0.500 ±(99.9%) 0.123 s/op

  Histogram, s/op:
    [0.400, 0.425) = 0 
    [0.425, 0.450) = 6 
    [0.450, 0.475) = 0 
    [0.475, 0.500) = 0 
    [0.500, 0.525) = 0 
    [0.525, 0.550) = 2 
    [0.550, 0.575) = 1 
    [0.575, 0.600) = 0 
    [0.600, 0.625) = 0 
    [0.625, 0.650) = 0 
    [0.650, 0.675) = 0 
    [0.675, 0.700) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.444 s/op
     p(50.0000) =      0.445 s/op
     p(90.0000) =      0.671 s/op
     p(95.0000) =      0.684 s/op
     p(99.0000) =      0.684 s/op
     p(99.9000) =      0.684 s/op
     p(99.9900) =      0.684 s/op
     p(99.9990) =      0.684 s/op
     p(99.9999) =      0.684 s/op
    p(100.0000) =      0.684 s/op


# Run complete. Total time: 00:46:45

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                     Mode  Cnt   Score    Error  Units
TranscendentalOperationBenchmark.scalarACOS     ss   10  12.295 ±  0.008   s/op
TranscendentalOperationBenchmark.scalarASIN     ss   10  13.314 ±  0.005   s/op
TranscendentalOperationBenchmark.scalarATAN     ss   10   3.021 ±  0.017   s/op
TranscendentalOperationBenchmark.scalarATAN2    ss   10   5.349 ±  0.002   s/op
TranscendentalOperationBenchmark.scalarCBRT     ss   10   1.213 ±  0.001   s/op
TranscendentalOperationBenchmark.scalarCOS      ss   10   1.087 ±  0.001   s/op
TranscendentalOperationBenchmark.scalarCOSH     ss   10   5.049 ±  0.001   s/op
TranscendentalOperationBenchmark.scalarEXP      ss   10   0.729 ±  0.001   s/op
TranscendentalOperationBenchmark.scalarEXPM1    ss   10   2.375 ±  0.003   s/op
TranscendentalOperationBenchmark.scalarHYPOT    ss   10   1.581 ±  0.003   s/op
TranscendentalOperationBenchmark.scalarLOG      ss   10   0.779 ±  0.001   s/op
TranscendentalOperationBenchmark.scalarLOG10    ss   10   0.889 ±  0.001   s/op
TranscendentalOperationBenchmark.scalarLOG1P    ss   10   3.316 ±  0.004   s/op
TranscendentalOperationBenchmark.scalarMUL0     ss   10   0.138 ±  0.003   s/op
TranscendentalOperationBenchmark.scalarMUL1     ss   10   0.113 ±  0.001   s/op
TranscendentalOperationBenchmark.scalarMUL2     ss   10   0.143 ±  0.002   s/op
TranscendentalOperationBenchmark.scalarPOW      ss   10   1.778 ±  0.001   s/op
TranscendentalOperationBenchmark.scalarPOW0     ss   10   1.146 ±  0.001   s/op
TranscendentalOperationBenchmark.scalarPOW1     ss   10   1.694 ±  0.001   s/op
TranscendentalOperationBenchmark.scalarPOW2     ss   10   0.142 ±  0.003   s/op
TranscendentalOperationBenchmark.scalarSIN      ss   10   1.086 ±  0.001   s/op
TranscendentalOperationBenchmark.scalarSINH     ss   10   5.625 ±  0.001   s/op
TranscendentalOperationBenchmark.scalarTAN      ss   10   1.547 ±  0.001   s/op
TranscendentalOperationBenchmark.scalarTANH     ss   10   6.537 ±  0.004   s/op
TranscendentalOperationBenchmark.vectorACOS     ss   10   0.451 ±  0.140   s/op
TranscendentalOperationBenchmark.vectorASIN     ss   10   0.434 ±  0.137   s/op
TranscendentalOperationBenchmark.vectorATAN     ss   10   0.444 ±  0.134   s/op
TranscendentalOperationBenchmark.vectorATAN2    ss   10   0.545 ±  0.133   s/op
TranscendentalOperationBenchmark.vectorCBRT     ss   10   0.423 ±  0.133   s/op
TranscendentalOperationBenchmark.vectorCOS      ss   10   0.423 ±  0.132   s/op
TranscendentalOperationBenchmark.vectorCOSH     ss   10   0.415 ±  0.133   s/op
TranscendentalOperationBenchmark.vectorEXP      ss   10   0.413 ±  0.134   s/op
TranscendentalOperationBenchmark.vectorEXPM1    ss   10   0.423 ±  0.134   s/op
TranscendentalOperationBenchmark.vectorHYPOT    ss   10   0.454 ±  0.136   s/op
TranscendentalOperationBenchmark.vectorLOG      ss   10   0.415 ±  0.136   s/op
TranscendentalOperationBenchmark.vectorLOG10    ss   10   0.417 ±  0.133   s/op
TranscendentalOperationBenchmark.vectorLOG1P    ss   10   0.438 ±  0.135   s/op
TranscendentalOperationBenchmark.vectorMUL0     ss   10   0.367 ±  0.129   s/op
TranscendentalOperationBenchmark.vectorMUL1     ss   10   0.371 ±  0.132   s/op
TranscendentalOperationBenchmark.vectorMUL2     ss   10   0.367 ±  0.127   s/op
TranscendentalOperationBenchmark.vectorPOW      ss   10   0.538 ±  0.133   s/op
TranscendentalOperationBenchmark.vectorPOW0     ss   10   0.516 ±  0.118   s/op
TranscendentalOperationBenchmark.vectorPOW1     ss   10   0.516 ±  0.126   s/op
TranscendentalOperationBenchmark.vectorPOW2     ss   10   0.527 ±  0.099   s/op
TranscendentalOperationBenchmark.vectorSIN      ss   10   0.432 ±  0.133   s/op
TranscendentalOperationBenchmark.vectorSINH     ss   10   0.432 ±  0.132   s/op
TranscendentalOperationBenchmark.vectorTAN      ss   10   0.460 ±  0.139   s/op
TranscendentalOperationBenchmark.vectorTANH     ss   10   0.500 ±  0.123   s/op

Benchmark result is saved to paper/jdk19/tower/pattern/performance/2022-07-31_21:32:45/transcendentalOperation/transcendentalOperation.csv
