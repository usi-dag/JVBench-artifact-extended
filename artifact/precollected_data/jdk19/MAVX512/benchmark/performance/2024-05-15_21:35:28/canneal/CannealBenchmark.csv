"Benchmark","Mode","Threads","Samples","Score","Score Error (99.9%)","Unit"
"jvbench.canneal.CannealBenchmark.autoVec","ss",1,10,4.768011,0.045237,"s/op"
"jvbench.canneal.CannealBenchmark.autoVec:·gc.alloc.rate","ss",1,10,0.001006,0.000009,"MB/sec"
"jvbench.canneal.CannealBenchmark.autoVec:·gc.alloc.rate.norm","ss",1,10,5560.000000,0.000000,"B/op"
"jvbench.canneal.CannealBenchmark.autoVec:·gc.count","ss",1,10,0.000000,NaN,"counts"
"jvbench.canneal.CannealBenchmark.explicitVec","ss",1,10,2.991730,0.042444,"s/op"
"jvbench.canneal.CannealBenchmark.explicitVec:·gc.alloc.rate","ss",1,10,453.533384,5.477388,"MB/sec"
"jvbench.canneal.CannealBenchmark.explicitVec:·gc.alloc.rate.norm","ss",1,10,1661006776.000000,656588.494725,"B/op"
"jvbench.canneal.CannealBenchmark.explicitVec:·gc.churn.G1_Eden_Space","ss",1,10,489.463901,1560.093018,"MB/sec"
"jvbench.canneal.CannealBenchmark.explicitVec:·gc.churn.G1_Eden_Space.norm","ss",1,10,1808583884.800000,5764454305.035121,"B/op"
"jvbench.canneal.CannealBenchmark.explicitVec:·gc.count","ss",1,10,2.000000,NaN,"counts"
"jvbench.canneal.CannealBenchmark.explicitVec:·gc.time","ss",1,10,29.000000,NaN,"ms"
"jvbench.canneal.CannealBenchmark.fullVec","ss",1,10,3.007597,0.043719,"s/op"
"jvbench.canneal.CannealBenchmark.fullVec:·gc.alloc.rate","ss",1,10,451.483439,5.612649,"MB/sec"
"jvbench.canneal.CannealBenchmark.fullVec:·gc.alloc.rate.norm","ss",1,10,1661006781.600000,656594.112144,"B/op"
"jvbench.canneal.CannealBenchmark.fullVec:·gc.churn.G1_Eden_Space","ss",1,10,483.467656,1540.946766,"MB/sec"
"jvbench.canneal.CannealBenchmark.fullVec:·gc.churn.G1_Eden_Space.norm","ss",1,10,1798517555.200000,5732370143.782607,"B/op"
"jvbench.canneal.CannealBenchmark.fullVec:·gc.churn.G1_Survivor_Space","ss",1,10,0.012557,0.060034,"MB/sec"
"jvbench.canneal.CannealBenchmark.fullVec:·gc.churn.G1_Survivor_Space.norm","ss",1,10,46785.600000,223677.863880,"B/op"
"jvbench.canneal.CannealBenchmark.fullVec:·gc.count","ss",1,10,2.000000,NaN,"counts"
"jvbench.canneal.CannealBenchmark.fullVec:·gc.time","ss",1,10,38.000000,NaN,"ms"
"jvbench.canneal.CannealBenchmark.serial","ss",1,10,4.768534,0.038976,"s/op"
"jvbench.canneal.CannealBenchmark.serial:·gc.alloc.rate","ss",1,10,0.001006,0.000007,"MB/sec"
"jvbench.canneal.CannealBenchmark.serial:·gc.alloc.rate.norm","ss",1,10,5560.000000,0.000000,"B/op"
"jvbench.canneal.CannealBenchmark.serial:·gc.count","ss",1,10,0.000000,NaN,"counts"
