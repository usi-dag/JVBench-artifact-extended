# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dinput=/blackscholes/input/in_512K.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.blackscholes.BlackscholesBenchmark.autoVec

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 2.288 s/op
# Warmup Iteration   2: 2.280 s/op
# Warmup Iteration   3: 2.121 s/op
# Warmup Iteration   4: 2.121 s/op
# Warmup Iteration   5: 2.121 s/op
# Warmup Iteration   6: 2.121 s/op
# Warmup Iteration   7: 2.121 s/op
# Warmup Iteration   8: 2.121 s/op
# Warmup Iteration   9: 2.121 s/op
# Warmup Iteration  10: 2.121 s/op
Iteration   1: 2.121 s/op
Iteration   2: 2.121 s/op
Iteration   3: 2.121 s/op
Iteration   4: 2.123 s/op
Iteration   5: 2.121 s/op
Iteration   6: 2.122 s/op
Iteration   7: 2.121 s/op
Iteration   8: 2.121 s/op
Iteration   9: 2.122 s/op
Iteration  10: 2.121 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 330821.288 bytes/s; standard:  0.187 s, 62081 bytes, 745 methods; osr:  0.007 s, 2206 bytes, 5 methods; nmethods_size: 1215296 bytes; nmethods_code_size: 858016 bytes}
  C2 {speed: 55806.846 bytes/s; standard:  0.378 s, 21034 bytes, 111 methods; osr:  0.051 s, 2892 bytes, 7 methods; nmethods_size: 159800 bytes; nmethods_code_size: 100064 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 107045.834 bytes/s; standard:  0.005 s, 579 bytes, 120 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 28800 bytes; nmethods_code_size: 18240 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 337228.236 bytes/s; standard:  0.182 s, 61502 bytes, 625 methods; osr:  0.007 s, 2206 bytes, 5 methods; nmethods_size: 1186496 bytes; nmethods_code_size: 839776 bytes}
  Tier4 {speed: 55806.846 bytes/s; standard:  0.378 s, 21034 bytes, 111 methods; osr:  0.051 s, 2892 bytes, 7 methods; nmethods_size: 159800 bytes; nmethods_code_size: 100064 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.624 s
    Standard compilation   :   0.565 s, Average : 0.001 s
    Bailed out compilation :   0.001 s, Average : 0.001 s
    On stack replacement   :   0.058 s, Average : 0.005 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.193 s
       Setup time:            0.001 s
       Build HIR:             0.079 s
         Parse:                 0.061 s
         Optimize blocks:       0.000 s
         GVN:                   0.007 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.074 s
         LIR Gen:               0.016 s
         Linear Scan:           0.057 s
         Other:                 0.001 s
       Code Emission:         0.020 s
       Code Installation:     0.016 s
       Other:                 0.004 s

    C2 Compile Time:        0.430 s
       Parse:                 0.045 s
       Optimize:              0.157 s
         Escape Analysis:       0.004 s
           Conn Graph:            0.003 s
           Macro Eliminate:       0.001 s
         GVN 1:                 0.011 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.104 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.002 s
         GVN 2:                 0.001 s
         Macro Expand:          0.006 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.003 s
         Other:                 0.025 s
       Matcher:                    0.025 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.032 s
       Regalloc:              0.146 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.003 s
         Build IFG (phys):      0.029 s
         Compute Liveness:      0.044 s
         Regalloc Split:        0.013 s
         Postalloc Copy Rem:    0.021 s
         Merge multidefs:       0.010 s
         Fixup Spills:          0.000 s
         Compact:               0.001 s
         Coalesce 1:            0.004 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.002 s
         Cache LRG:             0.000 s
         Simplify:              0.007 s
         Select:                0.009 s
         Other:                 0.001 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.021 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.004 s
         Build OOP maps:        0.007 s
         Fill buffer:           0.005 s
         Code Installation:     0.002 s
         Other:                 0.002 s
       Other:                 0.000 s

  Total compiled methods    :      868 methods
    Standard compilation    :      856 methods
    On stack replacement    :       12 methods
  Total compiled bytecodes  :    88213 bytes
    Standard compilation    :    83115 bytes
    On stack replacement    :     5098 bytes
  Average compilation speed :   141407 bytes/s

  nmethod code size         :  1375096 bytes
  nmethod total size        :   958080 bytes


Result "jvbench.blackscholes.BlackscholesBenchmark.autoVec":
  N = 10
  mean =      2.121 Â±(99.9%) 0.001 s/op

  Histogram, s/op:
    [2.120, 2.120) = 0 
    [2.120, 2.121) = 0 
    [2.121, 2.121) = 1 
    [2.121, 2.121) = 5 
    [2.121, 2.121) = 1 
    [2.121, 2.122) = 0 
    [2.122, 2.122) = 0 
    [2.122, 2.122) = 2 
    [2.122, 2.122) = 0 
    [2.122, 2.123) = 0 
    [2.123, 2.123) = 0 
    [2.123, 2.123) = 1 

  Percentiles, s/op:
      p(0.0000) =      2.121 s/op
     p(50.0000) =      2.121 s/op
     p(90.0000) =      2.123 s/op
     p(95.0000) =      2.123 s/op
     p(99.0000) =      2.123 s/op
     p(99.9000) =      2.123 s/op
     p(99.9900) =      2.123 s/op
     p(99.9990) =      2.123 s/op
     p(99.9999) =      2.123 s/op
    p(100.0000) =      2.123 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dinput=/blackscholes/input/in_512K.input -XX:-UseSuperWord
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.blackscholes.BlackscholesBenchmark.explicitVec

# Run progress: 25.00% complete, ETA 00:02:10
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.424 s/op
# Warmup Iteration   2: 0.262 s/op
# Warmup Iteration   3: 0.171 s/op
# Warmup Iteration   4: 0.220 s/op
# Warmup Iteration   5: 0.187 s/op
# Warmup Iteration   6: 0.271 s/op
# Warmup Iteration   7: 0.271 s/op
# Warmup Iteration   8: 0.204 s/op
# Warmup Iteration   9: 0.172 s/op
# Warmup Iteration  10: 0.170 s/op
Iteration   1: 0.170 s/op
Iteration   2: 0.170 s/op
Iteration   3: 0.174 s/op
Iteration   4: 0.170 s/op
Iteration   5: 0.170 s/op
Iteration   6: 0.170 s/op
Iteration   7: 0.170 s/op
Iteration   8: 0.170 s/op
Iteration   9: 0.174 s/op
Iteration  10: 0.170 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 270196.879 bytes/s; standard:  0.293 s, 79050 bytes, 1048 methods; osr:  0.007 s, 2167 bytes, 4 methods; nmethods_size: 1888600 bytes; nmethods_code_size: 1355520 bytes}
  C2 {speed: 45956.335 bytes/s; standard:  0.665 s, 32153 bytes, 185 methods; osr:  0.090 s, 2542 bytes, 15 methods; nmethods_size: 257072 bytes; nmethods_code_size: 158016 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 99486.128 bytes/s; standard:  0.006 s, 619 bytes, 128 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 30656 bytes; nmethods_code_size: 19392 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 273805.211 bytes/s; standard:  0.287 s, 78431 bytes, 920 methods; osr:  0.007 s, 2167 bytes, 4 methods; nmethods_size: 1857944 bytes; nmethods_code_size: 1336128 bytes}
  Tier4 {speed: 45956.335 bytes/s; standard:  0.665 s, 32153 bytes, 185 methods; osr:  0.090 s, 2542 bytes, 15 methods; nmethods_size: 257072 bytes; nmethods_code_size: 158016 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   1.056 s
    Standard compilation   :   0.958 s, Average : 0.001 s
    Bailed out compilation :   0.001 s, Average : 0.001 s
    On stack replacement   :   0.097 s, Average : 0.005 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.299 s
       Setup time:            0.001 s
       Build HIR:             0.124 s
         Parse:                 0.100 s
         Optimize blocks:       0.000 s
         GVN:                   0.009 s
         Null checks elim:      0.005 s
         Range checks elim:     0.001 s
         Other:                 0.008 s
       Emit LIR:              0.109 s
         LIR Gen:               0.025 s
         Linear Scan:           0.083 s
         Other:                 0.001 s
       Code Emission:         0.032 s
       Code Installation:     0.026 s
       Other:                 0.007 s

    C2 Compile Time:        0.756 s
       Parse:                 0.114 s
       Optimize:              0.295 s
         Escape Analysis:       0.007 s
           Conn Graph:            0.005 s
           Macro Eliminate:       0.002 s
         GVN 1:                 0.018 s
         Incremental Inline:    0.012 s
           IdealLoop:             0.000 s
          (IGVN:                  0.003 s)
          (Inline:                0.008 s)
          (Prune Useless:         0.001 s)
           Other:                 0.012 s
         Vector:                0.006 s
           Box elimination:     0.006 s
             IGVN:              0.002 s
             Prune Useless:     0.001 s
         Renumber Live:         0.001 s
         IdealLoop:             0.193 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.004 s
         GVN 2:                 0.002 s
         Macro Expand:          0.014 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.004 s
         Other:                 0.034 s
       Matcher:                    0.048 s
         Post Selection Cleanup:   0.004 s
       Scheduler:                  0.050 s
       Regalloc:              0.209 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.004 s
         Build IFG (phys):      0.040 s
         Compute Liveness:      0.065 s
         Regalloc Split:        0.018 s
         Postalloc Copy Rem:    0.033 s
         Merge multidefs:       0.016 s
         Fixup Spills:          0.001 s
         Compact:               0.001 s
         Coalesce 1:            0.006 s
         Coalesce 2:            0.002 s
         Coalesce 3:            0.003 s
         Cache LRG:             0.001 s
         Simplify:              0.008 s
         Select:                0.011 s
         Other:                 0.000 s
       Block Ordering:        0.003 s
       Peephole:              0.001 s
       Code Emission:           0.033 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.006 s
         Build OOP maps:        0.012 s
         Fill buffer:           0.009 s
         Code Installation:     0.004 s
         Other:                 0.002 s

  Total compiled methods    :     1252 methods
    Standard compilation    :     1233 methods
    On stack replacement    :       19 methods
  Total compiled bytecodes  :   115912 bytes
    Standard compilation    :   111203 bytes
    On stack replacement    :     4709 bytes
  Average compilation speed :   109733 bytes/s

  nmethod code size         :  2145672 bytes
  nmethod total size        :  1513536 bytes


Result "jvbench.blackscholes.BlackscholesBenchmark.explicitVec":
  N = 10
  mean =      0.171 Â±(99.9%) 0.002 s/op

  Histogram, s/op:
    [0.170, 0.171) = 8 
    [0.171, 0.171) = 0 
    [0.171, 0.172) = 0 
    [0.172, 0.172) = 0 
    [0.172, 0.173) = 0 
    [0.173, 0.173) = 0 
    [0.173, 0.174) = 0 
    [0.174, 0.174) = 1 
    [0.174, 0.175) = 1 
    [0.175, 0.175) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.170 s/op
     p(50.0000) =      0.170 s/op
     p(90.0000) =      0.174 s/op
     p(95.0000) =      0.174 s/op
     p(99.0000) =      0.174 s/op
     p(99.9000) =      0.174 s/op
     p(99.9900) =      0.174 s/op
     p(99.9990) =      0.174 s/op
     p(99.9999) =      0.174 s/op
    p(100.0000) =      0.174 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dinput=/blackscholes/input/in_512K.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.blackscholes.BlackscholesBenchmark.fullVec

# Run progress: 50.00% complete, ETA 00:00:48
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.419 s/op
# Warmup Iteration   2: 0.263 s/op
# Warmup Iteration   3: 0.170 s/op
# Warmup Iteration   4: 0.218 s/op
# Warmup Iteration   5: 0.186 s/op
# Warmup Iteration   6: 0.270 s/op
# Warmup Iteration   7: 0.270 s/op
# Warmup Iteration   8: 0.209 s/op
# Warmup Iteration   9: 0.169 s/op
# Warmup Iteration  10: 0.171 s/op
Iteration   1: 0.169 s/op
Iteration   2: 0.169 s/op
Iteration   3: 0.173 s/op
Iteration   4: 0.169 s/op
Iteration   5: 0.169 s/op
Iteration   6: 0.169 s/op
Iteration   7: 0.169 s/op
Iteration   8: 0.169 s/op
Iteration   9: 0.173 s/op
Iteration  10: 0.169 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 272275.248 bytes/s; standard:  0.291 s, 79073 bytes, 1051 methods; osr:  0.007 s, 2167 bytes, 4 methods; nmethods_size: 1890960 bytes; nmethods_code_size: 1358816 bytes}
  C2 {speed: 44938.265 bytes/s; standard:  0.679 s, 32525 bytes, 185 methods; osr:  0.107 s, 2810 bytes, 16 methods; nmethods_size: 263128 bytes; nmethods_code_size: 162144 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 100976.124 bytes/s; standard:  0.006 s, 619 bytes, 128 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 30656 bytes; nmethods_code_size: 19392 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 275868.444 bytes/s; standard:  0.285 s, 78454 bytes, 923 methods; osr:  0.007 s, 2167 bytes, 4 methods; nmethods_size: 1860304 bytes; nmethods_code_size: 1339424 bytes}
  Tier4 {speed: 44938.265 bytes/s; standard:  0.679 s, 32525 bytes, 185 methods; osr:  0.107 s, 2810 bytes, 16 methods; nmethods_size: 263128 bytes; nmethods_code_size: 162144 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   1.085 s
    Standard compilation   :   0.970 s, Average : 0.001 s
    Bailed out compilation :   0.001 s, Average : 0.001 s
    On stack replacement   :   0.115 s, Average : 0.006 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.297 s
       Setup time:            0.001 s
       Build HIR:             0.123 s
         Parse:                 0.098 s
         Optimize blocks:       0.000 s
         GVN:                   0.009 s
         Null checks elim:      0.005 s
         Range checks elim:     0.001 s
         Other:                 0.008 s
       Emit LIR:              0.108 s
         LIR Gen:               0.025 s
         Linear Scan:           0.082 s
         Other:                 0.001 s
       Code Emission:         0.031 s
       Code Installation:     0.028 s
       Other:                 0.006 s

    C2 Compile Time:        0.787 s
       Parse:                 0.118 s
       Optimize:              0.314 s
         Escape Analysis:       0.007 s
           Conn Graph:            0.005 s
           Macro Eliminate:       0.002 s
         GVN 1:                 0.019 s
         Incremental Inline:    0.012 s
           IdealLoop:             0.000 s
          (IGVN:                  0.003 s)
          (Inline:                0.008 s)
          (Prune Useless:         0.001 s)
           Other:                 0.012 s
         Vector:                0.006 s
           Box elimination:     0.006 s
             IGVN:              0.002 s
             Prune Useless:     0.001 s
         Renumber Live:         0.001 s
         IdealLoop:             0.205 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.004 s
         GVN 2:                 0.002 s
         Macro Expand:          0.019 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.005 s
         Other:                 0.035 s
       Matcher:                    0.043 s
         Post Selection Cleanup:   0.004 s
       Scheduler:                  0.051 s
       Regalloc:              0.219 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.004 s
         Build IFG (phys):      0.042 s
         Compute Liveness:      0.068 s
         Regalloc Split:        0.019 s
         Postalloc Copy Rem:    0.034 s
         Merge multidefs:       0.017 s
         Fixup Spills:          0.001 s
         Compact:               0.001 s
         Coalesce 1:            0.006 s
         Coalesce 2:            0.002 s
         Coalesce 3:            0.003 s
         Cache LRG:             0.001 s
         Simplify:              0.009 s
         Select:                0.012 s
         Other:                 0.001 s
       Block Ordering:        0.003 s
       Peephole:              0.001 s
       Code Emission:           0.033 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.006 s
         Build OOP maps:        0.012 s
         Fill buffer:           0.009 s
         Code Installation:     0.004 s
         Other:                 0.002 s
       Other:                 0.000 s

  Total compiled methods    :     1256 methods
    Standard compilation    :     1236 methods
    On stack replacement    :       20 methods
  Total compiled bytecodes  :   116575 bytes
    Standard compilation    :   111598 bytes
    On stack replacement    :     4977 bytes
  Average compilation speed :   107396 bytes/s

  nmethod code size         :  2154088 bytes
  nmethod total size        :  1520960 bytes


Result "jvbench.blackscholes.BlackscholesBenchmark.fullVec":
  N = 10
  mean =      0.170 Â±(99.9%) 0.002 s/op

  Histogram, s/op:
    [0.169, 0.169) = 7 
    [0.169, 0.170) = 1 
    [0.170, 0.170) = 0 
    [0.170, 0.170) = 0 
    [0.170, 0.170) = 0 
    [0.170, 0.171) = 0 
    [0.171, 0.171) = 0 
    [0.171, 0.171) = 0 
    [0.171, 0.171) = 0 
    [0.171, 0.172) = 0 
    [0.172, 0.172) = 0 
    [0.172, 0.172) = 0 
    [0.172, 0.172) = 0 
    [0.172, 0.173) = 0 
    [0.173, 0.173) = 1 
    [0.173, 0.173) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.169 s/op
     p(50.0000) =      0.169 s/op
     p(90.0000) =      0.173 s/op
     p(95.0000) =      0.173 s/op
     p(99.0000) =      0.173 s/op
     p(99.9000) =      0.173 s/op
     p(99.9900) =      0.173 s/op
     p(99.9990) =      0.173 s/op
     p(99.9999) =      0.173 s/op
    p(100.0000) =      0.173 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dinput=/blackscholes/input/in_512K.input -XX:-UseSuperWord
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.blackscholes.BlackscholesBenchmark.serial

# Run progress: 75.00% complete, ETA 00:00:17
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 2.277 s/op
# Warmup Iteration   2: 2.269 s/op
# Warmup Iteration   3: 2.118 s/op
# Warmup Iteration   4: 2.118 s/op
# Warmup Iteration   5: 2.118 s/op
# Warmup Iteration   6: 2.118 s/op
# Warmup Iteration   7: 2.118 s/op
# Warmup Iteration   8: 2.119 s/op
# Warmup Iteration   9: 2.118 s/op
# Warmup Iteration  10: 2.116 s/op
Iteration   1: 2.116 s/op
Iteration   2: 2.116 s/op
Iteration   3: 2.116 s/op
Iteration   4: 2.116 s/op
Iteration   5: 2.116 s/op
Iteration   6: 2.116 s/op
Iteration   7: 2.116 s/op
Iteration   8: 2.116 s/op
Iteration   9: 2.116 s/op
Iteration  10: 2.116 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 327136.985 bytes/s; standard:  0.189 s, 62081 bytes, 744 methods; osr:  0.007 s, 2206 bytes, 5 methods; nmethods_size: 1215456 bytes; nmethods_code_size: 858144 bytes}
  C2 {speed: 56143.774 bytes/s; standard:  0.384 s, 21406 bytes, 114 methods; osr:  0.049 s, 2892 bytes, 7 methods; nmethods_size: 163040 bytes; nmethods_code_size: 102528 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 104079.933 bytes/s; standard:  0.006 s, 579 bytes, 120 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 28800 bytes; nmethods_code_size: 18240 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 333635.372 bytes/s; standard:  0.184 s, 61502 bytes, 624 methods; osr:  0.007 s, 2206 bytes, 5 methods; nmethods_size: 1186656 bytes; nmethods_code_size: 839904 bytes}
  Tier4 {speed: 56143.774 bytes/s; standard:  0.384 s, 21406 bytes, 114 methods; osr:  0.049 s, 2892 bytes, 7 methods; nmethods_size: 163040 bytes; nmethods_code_size: 102528 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.630 s
    Standard compilation   :   0.573 s, Average : 0.001 s
    Bailed out compilation :   0.001 s, Average : 0.001 s
    On stack replacement   :   0.056 s, Average : 0.005 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.196 s
       Setup time:            0.001 s
       Build HIR:             0.080 s
         Parse:                 0.062 s
         Optimize blocks:       0.000 s
         GVN:                   0.007 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.074 s
         LIR Gen:               0.017 s
         Linear Scan:           0.056 s
         Other:                 0.001 s
       Code Emission:         0.020 s
       Code Installation:     0.017 s
       Other:                 0.005 s

    C2 Compile Time:        0.434 s
       Parse:                 0.046 s
       Optimize:              0.151 s
         Escape Analysis:       0.004 s
           Conn Graph:            0.003 s
           Macro Eliminate:       0.001 s
         GVN 1:                 0.011 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.103 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.002 s
         GVN 2:                 0.001 s
         Macro Expand:          0.006 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.003 s
         Other:                 0.020 s
       Matcher:                    0.031 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.032 s
       Regalloc:              0.147 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.003 s
         Build IFG (phys):      0.029 s
         Compute Liveness:      0.045 s
         Regalloc Split:        0.013 s
         Postalloc Copy Rem:    0.021 s
         Merge multidefs:       0.011 s
         Fixup Spills:          0.000 s
         Compact:               0.001 s
         Coalesce 1:            0.004 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.002 s
         Cache LRG:             0.000 s
         Simplify:              0.007 s
         Select:                0.008 s
         Other:                 0.001 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.021 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.004 s
         Build OOP maps:        0.008 s
         Fill buffer:           0.006 s
         Code Installation:     0.003 s
         Other:                 0.002 s
       Other:                 0.000 s

  Total compiled methods    :      870 methods
    Standard compilation    :      858 methods
    On stack replacement    :       12 methods
  Total compiled bytecodes  :    88585 bytes
    Standard compilation    :    83487 bytes
    On stack replacement    :     5098 bytes
  Average compilation speed :   140594 bytes/s

  nmethod code size         :  1378496 bytes
  nmethod total size        :   960672 bytes


Result "jvbench.blackscholes.BlackscholesBenchmark.serial":
  N = 10
  mean =      2.116 Â±(99.9%) 0.001 s/op

  Histogram, s/op:
    [2.116, 2.116) = 2 
    [2.116, 2.116) = 2 
    [2.116, 2.116) = 3 
    [2.116, 2.116) = 0 
    [2.116, 2.116) = 1 
    [2.116, 2.116) = 0 
    [2.116, 2.116) = 0 
    [2.116, 2.116) = 0 
    [2.116, 2.116) = 0 
    [2.116, 2.116) = 0 
    [2.116, 2.116) = 0 
    [2.116, 2.116) = 1 
    [2.116, 2.116) = 0 
    [2.116, 2.116) = 0 
    [2.116, 2.116) = 1 

  Percentiles, s/op:
      p(0.0000) =      2.116 s/op
     p(50.0000) =      2.116 s/op
     p(90.0000) =      2.116 s/op
     p(95.0000) =      2.116 s/op
     p(99.0000) =      2.116 s/op
     p(99.9000) =      2.116 s/op
     p(99.9900) =      2.116 s/op
     p(99.9990) =      2.116 s/op
     p(99.9999) =      2.116 s/op
    p(100.0000) =      2.116 s/op


# Run complete. Total time: 00:01:36

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                          Mode  Cnt  Score    Error  Units
BlackscholesBenchmark.autoVec        ss   10  2.121 Â±  0.001   s/op
BlackscholesBenchmark.explicitVec    ss   10  0.171 Â±  0.002   s/op
BlackscholesBenchmark.fullVec        ss   10  0.170 Â±  0.002   s/op
BlackscholesBenchmark.serial         ss   10  2.116 Â±  0.001   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/benchmark/performance/2024-05-02_10:13:25/blackscholes/BlackscholesBenchmark.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 335942.596 bytes/s; standard:  0.269 s, 90592 bytes, 1129 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1784288 bytes; nmethods_code_size: 1263904 bytes}
  C2 {speed: 44800.537 bytes/s; standard:  0.286 s, 13007 bytes, 98 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 116304 bytes; nmethods_code_size: 73536 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 101766.595 bytes/s; standard:  0.007 s, 700 bytes, 148 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 35640 bytes; nmethods_code_size: 22464 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 342027.460 bytes/s; standard:  0.262 s, 89892 bytes, 981 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1748648 bytes; nmethods_code_size: 1241440 bytes}
  Tier4 {speed: 44800.537 bytes/s; standard:  0.286 s, 13007 bytes, 98 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 116304 bytes; nmethods_code_size: 73536 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.563 s
    Standard compilation   :   0.556 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.008 s, Average : 0.003 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.269 s
       Setup time:            0.001 s
       Build HIR:             0.099 s
         Parse:                 0.074 s
         Optimize blocks:       0.000 s
         GVN:                   0.009 s
         Null checks elim:      0.005 s
         Range checks elim:     0.001 s
         Other:                 0.009 s
       Emit LIR:              0.107 s
         LIR Gen:               0.024 s
         Linear Scan:           0.082 s
         Other:                 0.001 s
       Code Emission:         0.029 s
       Code Installation:     0.025 s
       Other:                 0.007 s

    C2 Compile Time:        0.294 s
       Parse:                 0.034 s
       Optimize:              0.085 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.008 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.056 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.002 s
         GVN 2:                 0.001 s
         Macro Expand:          0.003 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.011 s
       Matcher:                    0.021 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.025 s
       Regalloc:              0.108 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.019 s
         Compute Liveness:      0.034 s
         Regalloc Split:        0.012 s
         Postalloc Copy Rem:    0.020 s
         Merge multidefs:       0.009 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.004 s
         Select:                0.005 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.016 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.003 s
         Build OOP maps:        0.006 s
         Fill buffer:           0.005 s
         Code Installation:     0.002 s
         Other:                 0.001 s

  Total compiled methods    :     1230 methods
    Standard compilation    :     1227 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :   104314 bytes
    Standard compilation    :   103599 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   185150 bytes/s

  nmethod code size         :  1900592 bytes
  nmethod total size        :  1337440 bytes
