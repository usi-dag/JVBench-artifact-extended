# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dsteps=10 -Dn=128
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.somier.SomierPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 3.476 s/op
# Warmup Iteration   2: 2.794 s/op
# Warmup Iteration   3: 2.787 s/op
# Warmup Iteration   4: 2.787 s/op
# Warmup Iteration   5: 2.760 s/op
# Warmup Iteration   6: 2.654 s/op
# Warmup Iteration   7: 2.515 s/op
# Warmup Iteration   8: 2.525 s/op
# Warmup Iteration   9: 2.519 s/op
# Warmup Iteration  10: 2.461 s/op
Iteration   1: 2.534 s/op
                 ·gc.alloc.rate:               203.881 MB/sec
                 ·gc.alloc.rate.norm:          648925608.000 B/op
                 ·gc.churn.G1_Eden_Space:      1054.223 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 3355443200.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms

Iteration   2: 2.517 s/op
                 ·gc.alloc.rate:      205.039 MB/sec
                 ·gc.alloc.rate.norm: 648899064.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.446 s/op
                 ·gc.alloc.rate:      210.007 MB/sec
                 ·gc.alloc.rate.norm: 648899064.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.506 s/op
                 ·gc.alloc.rate:      205.802 MB/sec
                 ·gc.alloc.rate.norm: 648899064.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.508 s/op
                 ·gc.alloc.rate:      205.625 MB/sec
                 ·gc.alloc.rate.norm: 648899064.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 2.496 s/op
                 ·gc.alloc.rate:               206.507 MB/sec
                 ·gc.alloc.rate.norm:          648925608.000 B/op
                 ·gc.churn.G1_Eden_Space:      1067.797 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 3355443200.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     ≈ 0 ms

Iteration   7: 2.512 s/op
                 ·gc.alloc.rate:      205.375 MB/sec
                 ·gc.alloc.rate.norm: 648899064.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 2.517 s/op
                 ·gc.alloc.rate:      205.003 MB/sec
                 ·gc.alloc.rate.norm: 648899064.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 2.453 s/op
                 ·gc.alloc.rate:      209.441 MB/sec
                 ·gc.alloc.rate.norm: 648899064.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 2.589 s/op
                 ·gc.alloc.rate:      200.234 MB/sec
                 ·gc.alloc.rate.norm: 648899064.000 B/op
                 ·gc.count:           ≈ 0 counts


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 189666.563 bytes/s; standard:  0.428 s, 86772 bytes, 1196 methods; osr:  0.047 s, 3360 bytes, 8 methods; nmethods_size: 2917144 bytes; nmethods_code_size: 2122784 bytes}
  C2 {speed: 48338.724 bytes/s; standard:  0.658 s, 32463 bytes, 153 methods; osr:  0.203 s, 9146 bytes, 16 methods; nmethods_size: 300168 bytes; nmethods_code_size: 177216 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 108081.224 bytes/s; standard:  0.007 s, 738 bytes, 152 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 36416 bytes; nmethods_code_size: 23008 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 190855.929 bytes/s; standard:  0.421 s, 86034 bytes, 1044 methods; osr:  0.047 s, 3360 bytes, 8 methods; nmethods_size: 2880728 bytes; nmethods_code_size: 2099776 bytes}
  Tier4 {speed: 48338.724 bytes/s; standard:  0.658 s, 32463 bytes, 153 methods; osr:  0.203 s, 9146 bytes, 16 methods; nmethods_size: 300168 bytes; nmethods_code_size: 177216 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   1.337 s
    Standard compilation   :   1.086 s, Average : 0.001 s
    Bailed out compilation :   0.001 s, Average : 0.001 s
    On stack replacement   :   0.250 s, Average : 0.010 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.473 s
       Setup time:            0.001 s
       Build HIR:             0.187 s
         Parse:                 0.149 s
         Optimize blocks:       0.000 s
         GVN:                   0.016 s
         Null checks elim:      0.008 s
         Range checks elim:     0.002 s
         Other:                 0.013 s
       Emit LIR:              0.173 s
         LIR Gen:               0.038 s
         Linear Scan:           0.133 s
         Other:                 0.001 s
       Code Emission:         0.062 s
       Code Installation:     0.042 s
       Other:                 0.007 s

    C2 Compile Time:        0.862 s
       Parse:                 0.199 s
       Optimize:              0.312 s
         Escape Analysis:       0.004 s
           Conn Graph:            0.004 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.020 s
         Incremental Inline:    0.024 s
           IdealLoop:             0.000 s
          (IGVN:                  0.011 s)
          (Inline:                0.009 s)
          (Prune Useless:         0.004 s)
           Other:                 0.024 s
         Vector:                0.014 s
           Box elimination:     0.014 s
             IGVN:              0.004 s
             Prune Useless:     0.004 s
         Renumber Live:         0.003 s
         IdealLoop:             0.200 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.003 s
         GVN 2:                 0.002 s
         Macro Expand:          0.010 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.005 s
         Other:                 0.027 s
       Matcher:                    0.041 s
         Post Selection Cleanup:   0.004 s
       Scheduler:                  0.050 s
       Regalloc:              0.217 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.004 s
         Build IFG (phys):      0.038 s
         Compute Liveness:      0.065 s
         Regalloc Split:        0.017 s
         Postalloc Copy Rem:    0.045 s
         Merge multidefs:       0.017 s
         Fixup Spills:          0.001 s
         Compact:               0.001 s
         Coalesce 1:            0.006 s
         Coalesce 2:            0.002 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.001 s
         Simplify:              0.008 s
         Select:                0.011 s
         Other:                 0.001 s
       Block Ordering:        0.003 s
       Peephole:              0.001 s
       Code Emission:           0.035 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.006 s
         Build OOP maps:        0.012 s
         Fill buffer:           0.010 s
         Code Installation:     0.004 s
         Other:                 0.003 s

  Total compiled methods    :     1373 methods
    Standard compilation    :     1349 methods
    On stack replacement    :       24 methods
  Total compiled bytecodes  :   131741 bytes
    Standard compilation    :   119235 bytes
    On stack replacement    :    12506 bytes
  Average compilation speed :    98552 bytes/s

  nmethod code size         :  3217312 bytes
  nmethod total size        :  2300000 bytes


Result "jvbench.somier.SomierPatternBenchmark.indexInRange":
  N = 10
  mean =      2.508 ±(99.9%) 0.061 s/op

  Histogram, s/op:
    [2.400, 2.413) = 0 
    [2.413, 2.425) = 0 
    [2.425, 2.438) = 0 
    [2.438, 2.450) = 1 
    [2.450, 2.463) = 1 
    [2.463, 2.475) = 0 
    [2.475, 2.488) = 0 
    [2.488, 2.500) = 1 
    [2.500, 2.513) = 3 
    [2.513, 2.525) = 2 
    [2.525, 2.538) = 1 
    [2.538, 2.550) = 0 
    [2.550, 2.563) = 0 
    [2.563, 2.575) = 0 
    [2.575, 2.588) = 0 

  Percentiles, s/op:
      p(0.0000) =      2.446 s/op
     p(50.0000) =      2.510 s/op
     p(90.0000) =      2.584 s/op
     p(95.0000) =      2.589 s/op
     p(99.0000) =      2.589 s/op
     p(99.9000) =      2.589 s/op
     p(99.9900) =      2.589 s/op
     p(99.9990) =      2.589 s/op
     p(99.9999) =      2.589 s/op
    p(100.0000) =      2.589 s/op

Secondary result "jvbench.somier.SomierPatternBenchmark.indexInRange:·gc.alloc.rate":
  205.691 ±(99.9%) 4.138 MB/sec [Average]
  (min, avg, max) = (200.234, 205.691, 210.007), stdev = 2.737
  CI (99.9%): [201.553, 209.830] (assumes normal distribution)

Secondary result "jvbench.somier.SomierPatternBenchmark.indexInRange:·gc.alloc.rate.norm":
  648904372.800 ±(99.9%) 16920.606 B/op [Average]
  (min, avg, max) = (648899064.000, 648904372.800, 648925608.000), stdev = 11191.933
  CI (99.9%): [648887452.194, 648921293.406] (assumes normal distribution)

Secondary result "jvbench.somier.SomierPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space":
  212.202 ±(99.9%) 676.364 MB/sec [Average]
  (min, avg, max) = (≈ 0, 212.202, 1067.797), stdev = 447.373
  CI (99.9%): [≈ 0, 888.566] (assumes normal distribution)

Secondary result "jvbench.somier.SomierPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm":
  671088640.000 ±(99.9%) 2138944083.501 B/op [Average]
  (min, avg, max) = (≈ 0, 671088640.000, 3355443200.000), stdev = 1414779076.177
  CI (99.9%): [≈ 0, 2810032723.501] (assumes normal distribution)

Secondary result "jvbench.somier.SomierPatternBenchmark.indexInRange:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.422
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "jvbench.somier.SomierPatternBenchmark.indexInRange:·gc.time":
  1.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.100, 1.000), stdev = 0.316
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                         Mode  Cnt          Score            Error   Units
SomierPatternBenchmark.indexInRange                                 ss   10          2.508 ±          0.061    s/op
SomierPatternBenchmark.indexInRange:·gc.alloc.rate                  ss   10        205.691 ±          4.138  MB/sec
SomierPatternBenchmark.indexInRange:·gc.alloc.rate.norm             ss   10  648904372.800 ±      16920.606    B/op
SomierPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space         ss   10        212.202 ±        676.364  MB/sec
SomierPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm    ss   10  671088640.000 ± 2138944083.501    B/op
SomierPatternBenchmark.indexInRange:·gc.count                       ss   10          2.000                   counts
SomierPatternBenchmark.indexInRange:·gc.time                        ss   10          1.000                       ms

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-15_22:26:43/somier/SomierPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 336085.220 bytes/s; standard:  0.237 s, 79610 bytes, 1050 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1598928 bytes; nmethods_code_size: 1134400 bytes}
  C2 {speed: 46565.542 bytes/s; standard:  0.235 s, 11156 bytes, 88 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 95432 bytes; nmethods_code_size: 61024 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 112821.467 bytes/s; standard:  0.006 s, 668 bytes, 141 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 33912 bytes; nmethods_code_size: 21472 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 341808.938 bytes/s; standard:  0.231 s, 78942 bytes, 909 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1565016 bytes; nmethods_code_size: 1112928 bytes}
  Tier4 {speed: 46565.542 bytes/s; standard:  0.235 s, 11156 bytes, 88 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 95432 bytes; nmethods_code_size: 61024 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.478 s
    Standard compilation   :   0.472 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.006 s, Average : 0.003 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.234 s
       Setup time:            0.001 s
       Build HIR:             0.087 s
         Parse:                 0.065 s
         Optimize blocks:       0.000 s
         GVN:                   0.008 s
         Null checks elim:      0.005 s
         Range checks elim:     0.001 s
         Other:                 0.007 s
       Emit LIR:              0.094 s
         LIR Gen:               0.021 s
         Linear Scan:           0.073 s
         Other:                 0.001 s
       Code Emission:         0.026 s
       Code Installation:     0.022 s
       Other:                 0.004 s

    C2 Compile Time:        0.243 s
       Parse:                 0.028 s
       Optimize:              0.069 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.007 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.044 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.003 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.009 s
       Matcher:                    0.018 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.021 s
       Regalloc:              0.089 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.015 s
         Compute Liveness:      0.029 s
         Regalloc Split:        0.010 s
         Postalloc Copy Rem:    0.015 s
         Merge multidefs:       0.007 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.003 s
         Select:                0.004 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.014 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.003 s
         Build OOP maps:        0.005 s
         Fill buffer:           0.004 s
         Code Installation:     0.002 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :     1140 methods
    Standard compilation    :     1138 methods
    On stack replacement    :        2 methods
  Total compiled bytecodes  :    90832 bytes
    Standard compilation    :    90766 bytes
    On stack replacement    :       66 bytes
  Average compilation speed :   190077 bytes/s

  nmethod code size         :  1694360 bytes
  nmethod total size        :  1195424 bytes
