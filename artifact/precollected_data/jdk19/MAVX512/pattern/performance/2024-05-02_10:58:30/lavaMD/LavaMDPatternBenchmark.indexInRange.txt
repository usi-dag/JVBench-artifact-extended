# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dinput=/lavaMD/input/lavaMD_127776.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.lavaMD.LavaMDPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 2.194 s/op
# Warmup Iteration   2: 1.610 s/op
# Warmup Iteration   3: 1.600 s/op
# Warmup Iteration   4: 0.390 s/op
# Warmup Iteration   5: 0.390 s/op
# Warmup Iteration   6: 0.389 s/op
# Warmup Iteration   7: 0.389 s/op
# Warmup Iteration   8: 0.389 s/op
# Warmup Iteration   9: 0.389 s/op
# Warmup Iteration  10: 0.389 s/op
Iteration   1: 0.389 s/op
Iteration   2: 0.390 s/op
Iteration   3: 0.389 s/op
Iteration   4: 0.389 s/op
Iteration   5: 0.389 s/op
Iteration   6: 0.388 s/op
Iteration   7: 0.388 s/op
Iteration   8: 0.388 s/op
Iteration   9: 0.389 s/op
Iteration  10: 0.388 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 281923.291 bytes/s; standard:  0.258 s, 73276 bytes, 932 methods; osr:  0.012 s, 3053 bytes, 3 methods; nmethods_size: 1743976 bytes; nmethods_code_size: 1231328 bytes}
  C2 {speed: 46639.809 bytes/s; standard:  0.454 s, 22016 bytes, 148 methods; osr:  0.315 s, 13822 bytes, 15 methods; nmethods_size: 268016 bytes; nmethods_code_size: 161248 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 111933.059 bytes/s; standard:  0.005 s, 574 bytes, 119 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 28456 bytes; nmethods_code_size: 17984 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 285205.178 bytes/s; standard:  0.253 s, 72702 bytes, 813 methods; osr:  0.012 s, 3053 bytes, 3 methods; nmethods_size: 1715520 bytes; nmethods_code_size: 1213344 bytes}
  Tier4 {speed: 46639.809 bytes/s; standard:  0.454 s, 22016 bytes, 148 methods; osr:  0.315 s, 13822 bytes, 15 methods; nmethods_size: 268016 bytes; nmethods_code_size: 161248 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   1.040 s
    Standard compilation   :   0.712 s, Average : 0.001 s
    Bailed out compilation :   0.001 s, Average : 0.001 s
    On stack replacement   :   0.327 s, Average : 0.018 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.269 s
       Setup time:            0.001 s
       Build HIR:             0.110 s
         Parse:                 0.088 s
         Optimize blocks:       0.000 s
         GVN:                   0.008 s
         Null checks elim:      0.005 s
         Range checks elim:     0.001 s
         Other:                 0.007 s
       Emit LIR:              0.101 s
         LIR Gen:               0.022 s
         Linear Scan:           0.078 s
         Other:                 0.001 s
       Code Emission:         0.029 s
       Code Installation:     0.023 s
       Other:                 0.005 s

    C2 Compile Time:        0.770 s
       Parse:                 0.123 s
       Optimize:              0.262 s
         Escape Analysis:       0.007 s
           Conn Graph:            0.005 s
           Macro Eliminate:       0.002 s
         GVN 1:                 0.018 s
         Incremental Inline:    0.011 s
           IdealLoop:             0.000 s
          (IGVN:                  0.006 s)
          (Inline:                0.003 s)
          (Prune Useless:         0.002 s)
           Other:                 0.011 s
         Vector:                0.008 s
           Box elimination:     0.008 s
             IGVN:              0.002 s
             Prune Useless:     0.002 s
         Renumber Live:         0.002 s
         IdealLoop:             0.164 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.003 s
         GVN 2:                 0.002 s
         Macro Expand:          0.013 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.004 s
         Other:                 0.030 s
       Matcher:                    0.039 s
         Post Selection Cleanup:   0.004 s
       Scheduler:                  0.049 s
       Regalloc:              0.260 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.004 s
         Build IFG (phys):      0.052 s
         Compute Liveness:      0.070 s
         Regalloc Split:        0.021 s
         Postalloc Copy Rem:    0.039 s
         Merge multidefs:       0.016 s
         Fixup Spills:          0.000 s
         Compact:               0.001 s
         Coalesce 1:            0.007 s
         Coalesce 2:            0.002 s
         Coalesce 3:            0.003 s
         Cache LRG:             0.001 s
         Simplify:              0.016 s
         Select:                0.020 s
         Other:                 0.008 s
       Block Ordering:        0.003 s
       Peephole:              0.001 s
       Code Emission:           0.031 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.006 s
         Build OOP maps:        0.011 s
         Fill buffer:           0.009 s
         Code Installation:     0.004 s
         Other:                 0.002 s

  Total compiled methods    :     1098 methods
    Standard compilation    :     1080 methods
    On stack replacement    :       18 methods
  Total compiled bytecodes  :   112167 bytes
    Standard compilation    :    95292 bytes
    On stack replacement    :    16875 bytes
  Average compilation speed :   107861 bytes/s

  nmethod code size         :  2011992 bytes
  nmethod total size        :  1392576 bytes


Result "jvbench.lavaMD.LavaMDPatternBenchmark.indexInRange":
  N = 10
  mean =      0.389 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [0.387, 0.387) = 0 
    [0.387, 0.388) = 0 
    [0.388, 0.388) = 0 
    [0.388, 0.388) = 1 
    [0.388, 0.388) = 2 
    [0.388, 0.389) = 1 
    [0.389, 0.389) = 2 
    [0.389, 0.389) = 1 
    [0.389, 0.389) = 2 
    [0.389, 0.390) = 0 
    [0.390, 0.390) = 0 
    [0.390, 0.390) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.388 s/op
     p(50.0000) =      0.389 s/op
     p(90.0000) =      0.390 s/op
     p(95.0000) =      0.390 s/op
     p(99.0000) =      0.390 s/op
     p(99.9000) =      0.390 s/op
     p(99.9900) =      0.390 s/op
     p(99.9990) =      0.390 s/op
     p(99.9999) =      0.390 s/op
    p(100.0000) =      0.390 s/op


# Run complete. Total time: 00:00:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                   Mode  Cnt  Score   Error  Units
lavaMD.LavaMDPatternBenchmark.indexInRange    ss   10  0.389 ± 0.001   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-02_10:58:30/lavaMD/LavaMDPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 337895.115 bytes/s; standard:  0.182 s, 61684 bytes, 854 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1248320 bytes; nmethods_code_size: 886048 bytes}
  C2 {speed: 41337.957 bytes/s; standard:  0.236 s, 9929 bytes, 76 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 91672 bytes; nmethods_code_size: 57760 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 114352.636 bytes/s; standard:  0.005 s, 605 bytes, 128 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 30752 bytes; nmethods_code_size: 19456 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 344495.521 bytes/s; standard:  0.177 s, 61079 bytes, 726 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1217568 bytes; nmethods_code_size: 866592 bytes}
  Tier4 {speed: 41337.957 bytes/s; standard:  0.236 s, 9929 bytes, 76 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 91672 bytes; nmethods_code_size: 57760 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.426 s
    Standard compilation   :   0.418 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.008 s, Average : 0.003 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.183 s
       Setup time:            0.001 s
       Build HIR:             0.067 s
         Parse:                 0.050 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.074 s
         LIR Gen:               0.016 s
         Linear Scan:           0.057 s
         Other:                 0.001 s
       Code Emission:         0.020 s
       Code Installation:     0.017 s
       Other:                 0.004 s

    C2 Compile Time:        0.244 s
       Parse:                 0.026 s
       Optimize:              0.072 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.007 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.048 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.009 s
       Matcher:                    0.016 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.021 s
       Regalloc:              0.092 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.016 s
         Compute Liveness:      0.029 s
         Regalloc Split:        0.010 s
         Postalloc Copy Rem:    0.016 s
         Merge multidefs:       0.007 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.004 s
         Select:                0.005 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.013 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.005 s
         Fill buffer:           0.004 s
         Code Installation:     0.002 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :      933 methods
    Standard compilation    :      930 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    72328 bytes
    Standard compilation    :    71613 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   169679 bytes/s

  nmethod code size         :  1339992 bytes
  nmethod total size        :   943808 bytes
