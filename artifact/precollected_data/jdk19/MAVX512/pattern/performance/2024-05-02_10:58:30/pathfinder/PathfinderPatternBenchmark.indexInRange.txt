# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dinput=/pathfinder/input/pathfinder_5000_5000.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.pathfinder.PathfinderPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 5.348 s/op
# Warmup Iteration   2: 4.914 s/op
# Warmup Iteration   3: 4.478 s/op
# Warmup Iteration   4: 4.467 s/op
# Warmup Iteration   5: 4.470 s/op
# Warmup Iteration   6: 4.476 s/op
# Warmup Iteration   7: 4.468 s/op
# Warmup Iteration   8: 4.470 s/op
# Warmup Iteration   9: 4.468 s/op
# Warmup Iteration  10: 4.471 s/op
Iteration   1: 4.466 s/op
Iteration   2: 4.472 s/op
Iteration   3: 4.469 s/op
Iteration   4: 4.466 s/op
Iteration   5: 4.473 s/op
Iteration   6: 4.466 s/op
Iteration   7: 4.465 s/op
Iteration   8: 4.468 s/op
Iteration   9: 4.466 s/op
Iteration  10: 4.470 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 228686.223 bytes/s; standard:  0.254 s, 65998 bytes, 930 methods; osr:  0.048 s, 3032 bytes, 5 methods; nmethods_size: 1845248 bytes; nmethods_code_size: 1343584 bytes}
  C2 {speed: 51210.095 bytes/s; standard:  0.537 s, 27634 bytes, 167 methods; osr:  0.143 s, 7204 bytes, 13 methods; nmethods_size: 240280 bytes; nmethods_code_size: 149248 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 106573.981 bytes/s; standard:  0.005 s, 574 bytes, 119 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 28456 bytes; nmethods_code_size: 17984 bytes}
  Tier2 {speed: 304136.253 bytes/s; standard:  0.000 s, 67 bytes, 1 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 760 bytes; nmethods_code_size: 416 bytes}
  Tier3 {speed: 230850.172 bytes/s; standard:  0.248 s, 65357 bytes, 810 methods; osr:  0.048 s, 3032 bytes, 5 methods; nmethods_size: 1816032 bytes; nmethods_code_size: 1325184 bytes}
  Tier4 {speed: 51210.095 bytes/s; standard:  0.537 s, 27634 bytes, 167 methods; osr:  0.143 s, 7204 bytes, 13 methods; nmethods_size: 240280 bytes; nmethods_code_size: 149248 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.983 s
    Standard compilation   :   0.791 s, Average : 0.001 s
    Bailed out compilation :   0.001 s, Average : 0.001 s
    On stack replacement   :   0.191 s, Average : 0.011 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.300 s
       Setup time:            0.001 s
       Build HIR:             0.124 s
         Parse:                 0.098 s
         Optimize blocks:       0.000 s
         GVN:                   0.010 s
         Null checks elim:      0.006 s
         Range checks elim:     0.001 s
         Other:                 0.010 s
       Emit LIR:              0.110 s
         LIR Gen:               0.025 s
         Linear Scan:           0.084 s
         Other:                 0.001 s
       Code Emission:         0.035 s
       Code Installation:     0.024 s
       Other:                 0.006 s

    C2 Compile Time:        0.682 s
       Parse:                 0.112 s
       Optimize:              0.258 s
         Escape Analysis:       0.004 s
           Conn Graph:            0.004 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.015 s
         Incremental Inline:    0.005 s
           IdealLoop:             0.000 s
          (IGVN:                  0.003 s)
          (Inline:                0.001 s)
          (Prune Useless:         0.001 s)
           Other:                 0.005 s
         Vector:                0.006 s
           Box elimination:     0.006 s
             IGVN:              0.002 s
             Prune Useless:     0.002 s
         Renumber Live:         0.001 s
         IdealLoop:             0.180 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.003 s
         GVN 2:                 0.002 s
         Macro Expand:          0.011 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.004 s
         Other:                 0.026 s
       Matcher:                    0.038 s
         Post Selection Cleanup:   0.003 s
       Scheduler:                  0.046 s
       Regalloc:              0.190 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.004 s
         Build IFG (phys):      0.035 s
         Compute Liveness:      0.058 s
         Regalloc Split:        0.015 s
         Postalloc Copy Rem:    0.035 s
         Merge multidefs:       0.015 s
         Fixup Spills:          0.000 s
         Compact:               0.001 s
         Coalesce 1:            0.005 s
         Coalesce 2:            0.002 s
         Coalesce 3:            0.002 s
         Cache LRG:             0.001 s
         Simplify:              0.007 s
         Select:                0.010 s
         Other:                 0.001 s
       Block Ordering:        0.003 s
       Peephole:              0.001 s
       Code Emission:           0.031 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.006 s
         Build OOP maps:        0.010 s
         Fill buffer:           0.009 s
         Code Installation:     0.004 s
         Other:                 0.002 s
       Other:                 0.000 s

  Total compiled methods    :     1115 methods
    Standard compilation    :     1097 methods
    On stack replacement    :       18 methods
  Total compiled bytecodes  :   103868 bytes
    Standard compilation    :    93632 bytes
    On stack replacement    :    10236 bytes
  Average compilation speed :   105672 bytes/s

  nmethod code size         :  2085528 bytes
  nmethod total size        :  1492832 bytes


Result "jvbench.pathfinder.PathfinderPatternBenchmark.indexInRange":
  N = 10
  mean =      4.468 ±(99.9%) 0.004 s/op

  Histogram, s/op:
    [4.465, 4.466) = 1 
    [4.466, 4.466) = 3 
    [4.466, 4.467) = 1 
    [4.467, 4.467) = 0 
    [4.467, 4.468) = 0 
    [4.468, 4.468) = 1 
    [4.468, 4.469) = 0 
    [4.469, 4.469) = 0 
    [4.469, 4.470) = 1 
    [4.470, 4.470) = 1 
    [4.470, 4.470) = 0 
    [4.470, 4.471) = 0 
    [4.471, 4.472) = 0 
    [4.472, 4.472) = 0 
    [4.472, 4.473) = 1 
    [4.473, 4.473) = 0 
    [4.473, 4.474) = 1 
    [4.474, 4.474) = 0 

  Percentiles, s/op:
      p(0.0000) =      4.465 s/op
     p(50.0000) =      4.467 s/op
     p(90.0000) =      4.473 s/op
     p(95.0000) =      4.473 s/op
     p(99.0000) =      4.473 s/op
     p(99.9000) =      4.473 s/op
     p(99.9900) =      4.473 s/op
     p(99.9990) =      4.473 s/op
     p(99.9999) =      4.473 s/op
    p(100.0000) =      4.473 s/op


# Run complete. Total time: 00:01:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                Mode  Cnt  Score   Error  Units
PathfinderPatternBenchmark.indexInRange    ss   10  4.468 ± 0.004   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-02_10:58:30/pathfinder/PathfinderPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 331820.234 bytes/s; standard:  0.187 s, 62283 bytes, 869 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1264576 bytes; nmethods_code_size: 897632 bytes}
  C2 {speed: 42029.072 bytes/s; standard:  0.241 s, 10294 bytes, 78 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 94824 bytes; nmethods_code_size: 59744 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 108400.448 bytes/s; standard:  0.006 s, 610 bytes, 129 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 31000 bytes; nmethods_code_size: 19616 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 342439.856 bytes/s; standard:  0.183 s, 62684 bytes, 741 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1239392 bytes; nmethods_code_size: 882016 bytes}
  Tier4 {speed: 42029.072 bytes/s; standard:  0.241 s, 10294 bytes, 78 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 94824 bytes; nmethods_code_size: 59744 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.437 s
    Standard compilation   :   0.429 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.008 s, Average : 0.003 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.189 s
       Setup time:            0.001 s
       Build HIR:             0.068 s
         Parse:                 0.051 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.076 s
         LIR Gen:               0.017 s
         Linear Scan:           0.058 s
         Other:                 0.001 s
       Code Emission:         0.021 s
       Code Installation:     0.018 s
       Other:                 0.005 s

    C2 Compile Time:        0.249 s
       Parse:                 0.027 s
       Optimize:              0.072 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.007 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.048 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.009 s
       Matcher:                    0.017 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.021 s
       Regalloc:              0.094 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.016 s
         Compute Liveness:      0.029 s
         Regalloc Split:        0.010 s
         Postalloc Copy Rem:    0.016 s
         Merge multidefs:       0.007 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.004 s
         Select:                0.005 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.014 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.005 s
         Fill buffer:           0.004 s
         Code Installation:     0.002 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :      951 methods
    Standard compilation    :      948 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    74303 bytes
    Standard compilation    :    73588 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   170002 bytes/s

  nmethod code size         :  1365216 bytes
  nmethod total size        :   961376 bytes
