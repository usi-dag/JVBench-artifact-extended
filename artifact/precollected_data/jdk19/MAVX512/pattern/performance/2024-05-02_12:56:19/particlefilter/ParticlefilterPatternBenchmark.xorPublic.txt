# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19-xor/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dx=128 -Dy=128 -Dz=24 -Dnp=32768
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.particlefilter.ParticlefilterPatternBenchmark.xorPublic

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 6.174 s/op
# Warmup Iteration   2: 5.830 s/op
# Warmup Iteration   3: 2.671 s/op
# Warmup Iteration   4: 2.222 s/op
# Warmup Iteration   5: 2.225 s/op
# Warmup Iteration   6: 2.223 s/op
# Warmup Iteration   7: 2.032 s/op
# Warmup Iteration   8: 2.042 s/op
# Warmup Iteration   9: 2.042 s/op
# Warmup Iteration  10: 2.040 s/op
Iteration   1: 2.040 s/op
Iteration   2: 2.044 s/op
Iteration   3: 2.040 s/op
Iteration   4: 2.039 s/op
Iteration   5: 2.043 s/op
Iteration   6: 2.042 s/op
Iteration   7: 2.041 s/op
Iteration   8: 2.043 s/op
Iteration   9: 2.044 s/op
Iteration  10: 2.044 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 239091.387 bytes/s; standard:  0.245 s, 61986 bytes, 896 methods; osr:  0.047 s, 7857 bytes, 9 methods; nmethods_size: 1825680 bytes; nmethods_code_size: 1276224 bytes}
  C2 {speed: 23805.823 bytes/s; standard:  0.788 s, 18660 bytes, 136 methods; osr:  0.864 s, 20686 bytes, 21 methods; nmethods_size: 351800 bytes; nmethods_code_size: 229536 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 109598.799 bytes/s; standard:  0.005 s, 549 bytes, 114 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 27312 bytes; nmethods_code_size: 17280 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 241987.429 bytes/s; standard:  0.242 s, 62095 bytes, 783 methods; osr:  0.047 s, 7857 bytes, 9 methods; nmethods_size: 1811688 bytes; nmethods_code_size: 1267776 bytes}
  Tier4 {speed: 23805.823 bytes/s; standard:  0.788 s, 18660 bytes, 136 methods; osr:  0.864 s, 20686 bytes, 21 methods; nmethods_size: 351800 bytes; nmethods_code_size: 229536 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   1.948 s
    Standard compilation   :   1.035 s, Average : 0.001 s
    Bailed out compilation :   0.001 s, Average : 0.001 s
    On stack replacement   :   0.912 s, Average : 0.030 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.293 s
       Setup time:            0.001 s
       Build HIR:             0.117 s
         Parse:                 0.094 s
         Optimize blocks:       0.000 s
         GVN:                   0.009 s
         Null checks elim:      0.005 s
         Range checks elim:     0.001 s
         Other:                 0.008 s
       Emit LIR:              0.112 s
         LIR Gen:               0.024 s
         Linear Scan:           0.087 s
         Other:                 0.001 s
       Code Emission:         0.033 s
       Code Installation:     0.025 s
       Other:                 0.005 s

    C2 Compile Time:        1.654 s
       Parse:                 0.131 s
       Optimize:              0.711 s
         Escape Analysis:       0.004 s
           Conn Graph:            0.004 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.027 s
         Incremental Inline:    0.017 s
           IdealLoop:             0.000 s
          (IGVN:                  0.007 s)
          (Inline:                0.005 s)
          (Prune Useless:         0.005 s)
           Other:                 0.017 s
         Vector:                0.010 s
           Box elimination:     0.010 s
             IGVN:              0.002 s
             Prune Useless:     0.004 s
         Renumber Live:         0.003 s
         IdealLoop:             0.580 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.004 s
         GVN 2:                 0.002 s
         Macro Expand:          0.016 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.005 s
         Other:                 0.043 s
       Matcher:                    0.051 s
         Post Selection Cleanup:   0.005 s
       Scheduler:                  0.068 s
       Regalloc:              0.643 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.009 s
         Build IFG (phys):      0.140 s
         Compute Liveness:      0.171 s
         Regalloc Split:        0.054 s
         Postalloc Copy Rem:    0.064 s
         Merge multidefs:       0.022 s
         Fixup Spills:          0.001 s
         Compact:               0.002 s
         Coalesce 1:            0.021 s
         Coalesce 2:            0.017 s
         Coalesce 3:            0.005 s
         Cache LRG:             0.002 s
         Simplify:              0.048 s
         Select:                0.055 s
         Other:                 0.032 s
       Block Ordering:        0.004 s
       Peephole:              0.001 s
       Code Emission:           0.040 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.007 s
         Build OOP maps:        0.016 s
         Fill buffer:           0.011 s
         Code Installation:     0.004 s
         Other:                 0.003 s
       Other:                 0.001 s

  Total compiled methods    :     1063 methods
    Standard compilation    :     1033 methods
    On stack replacement    :       30 methods
  Total compiled bytecodes  :   109847 bytes
    Standard compilation    :    81304 bytes
    On stack replacement    :    28543 bytes
  Average compilation speed :    56400 bytes/s

  nmethod code size         :  2190800 bytes
  nmethod total size        :  1514592 bytes


Result "jvbench.particlefilter.ParticlefilterPatternBenchmark.xorPublic":
  N = 10
  mean =      2.042 ±(99.9%) 0.003 s/op

  Histogram, s/op:
    [2.039, 2.040) = 1 
    [2.040, 2.040) = 0 
    [2.040, 2.041) = 2 
    [2.041, 2.041) = 0 
    [2.041, 2.042) = 1 
    [2.042, 2.042) = 1 
    [2.042, 2.043) = 0 
    [2.043, 2.043) = 1 
    [2.043, 2.044) = 1 
    [2.044, 2.044) = 2 
    [2.044, 2.045) = 1 

  Percentiles, s/op:
      p(0.0000) =      2.039 s/op
     p(50.0000) =      2.042 s/op
     p(90.0000) =      2.044 s/op
     p(95.0000) =      2.044 s/op
     p(99.0000) =      2.044 s/op
     p(99.9000) =      2.044 s/op
     p(99.9900) =      2.044 s/op
     p(99.9990) =      2.044 s/op
     p(99.9999) =      2.044 s/op
    p(100.0000) =      2.044 s/op


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                 Mode  Cnt  Score   Error  Units
ParticlefilterPatternBenchmark.xorPublic    ss   10  2.042 ± 0.003   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-02_12:56:19/particlefilter/ParticlefilterPatternBenchmark.xorPublic.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 331003.738 bytes/s; standard:  0.186 s, 61657 bytes, 857 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1249696 bytes; nmethods_code_size: 887200 bytes}
  C2 {speed: 41232.781 bytes/s; standard:  0.236 s, 9908 bytes, 73 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 91752 bytes; nmethods_code_size: 57664 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 108743.459 bytes/s; standard:  0.006 s, 605 bytes, 128 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 30752 bytes; nmethods_code_size: 19456 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 341590.288 bytes/s; standard:  0.181 s, 62063 bytes, 730 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1224760 bytes; nmethods_code_size: 871744 bytes}
  Tier4 {speed: 41232.781 bytes/s; standard:  0.236 s, 9908 bytes, 73 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 91752 bytes; nmethods_code_size: 57664 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.431 s
    Standard compilation   :   0.423 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.008 s, Average : 0.003 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.187 s
       Setup time:            0.001 s
       Build HIR:             0.069 s
         Parse:                 0.051 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.075 s
         LIR Gen:               0.017 s
         Linear Scan:           0.057 s
         Other:                 0.001 s
       Code Emission:         0.021 s
       Code Installation:     0.017 s
       Other:                 0.005 s

    C2 Compile Time:        0.244 s
       Parse:                 0.027 s
       Optimize:              0.071 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.007 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.047 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.009 s
       Matcher:                    0.017 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.021 s
       Regalloc:              0.092 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.016 s
         Compute Liveness:      0.029 s
         Regalloc Split:        0.010 s
         Postalloc Copy Rem:    0.016 s
         Merge multidefs:       0.007 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.004 s
         Select:                0.005 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.013 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.005 s
         Fill buffer:           0.004 s
         Code Installation:     0.002 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :      934 methods
    Standard compilation    :      931 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    73291 bytes
    Standard compilation    :    72576 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   170030 bytes/s

  nmethod code size         :  1347264 bytes
  nmethod total size        :   948864 bytes
