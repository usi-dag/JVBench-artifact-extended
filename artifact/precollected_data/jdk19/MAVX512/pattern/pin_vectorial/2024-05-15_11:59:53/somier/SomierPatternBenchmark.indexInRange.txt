# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dbenchmark.plugin=jvbench.plugin.SocketPlugin -Dsteps=10 -Dn=128
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.somier.SomierPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 17.152 s/op
# Warmup Iteration   2: 8.284 s/op
# Warmup Iteration   3: 8.230 s/op
# Warmup Iteration   4: 8.339 s/op
# Warmup Iteration   5: 8.452 s/op
# Warmup Iteration   6: 8.419 s/op
# Warmup Iteration   7: 8.461 s/op
# Warmup Iteration   8: 8.342 s/op
# Warmup Iteration   9: 8.193 s/op
# Warmup Iteration  10: 8.206 s/op
Iteration   1: 8.236 s/op
                 ·gc.alloc.rate:      70.608 MB/sec
                 ·gc.alloc.rate.norm: 648906536.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 8.198 s/op
                 ·gc.alloc.rate:      71.047 MB/sec
                 ·gc.alloc.rate.norm: 648899624.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 8.204 s/op
                 ·gc.alloc.rate:               70.962 MB/sec
                 ·gc.alloc.rate.norm:          648926200.000 B/op
                 ·gc.churn.G1_Eden_Space:      319.228 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 2919235584.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     4.000 ms

Iteration   4: 8.216 s/op
                 ·gc.alloc.rate:      70.933 MB/sec
                 ·gc.alloc.rate.norm: 648899624.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 8.191 s/op
                 ·gc.alloc.rate:      71.147 MB/sec
                 ·gc.alloc.rate.norm: 648899624.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 8.192 s/op
                 ·gc.alloc.rate:      71.042 MB/sec
                 ·gc.alloc.rate.norm: 648899624.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 8.210 s/op
                 ·gc.alloc.rate:               70.986 MB/sec
                 ·gc.alloc.rate.norm:          648926168.000 B/op
                 ·gc.churn.G1_Eden_Space:      319.337 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 2919235584.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     3.000 ms

Iteration   8: 8.206 s/op
                 ·gc.alloc.rate:      70.932 MB/sec
                 ·gc.alloc.rate.norm: 648899624.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 8.210 s/op
                 ·gc.alloc.rate:      70.937 MB/sec
                 ·gc.alloc.rate.norm: 648899656.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 8.228 s/op
                 ·gc.alloc.rate:      70.748 MB/sec
                 ·gc.alloc.rate.norm: 648899624.000 B/op
                 ·gc.count:           ≈ 0 counts


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 5007.878 bytes/s; standard: 17.772 s, 87034 bytes, 1192 methods; osr:  0.278 s, 3360 bytes, 8 methods; nmethods_size: 2947656 bytes; nmethods_code_size: 2143104 bytes}
  C2 {speed: 1174.569 bytes/s; standard: 33.737 s, 35113 bytes, 166 methods; osr:  4.299 s, 9563 bytes, 19 methods; nmethods_size: 331600 bytes; nmethods_code_size: 198688 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 5148.429 bytes/s; standard:  0.146 s, 753 bytes, 155 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 37096 bytes; nmethods_code_size: 23424 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 5006.730 bytes/s; standard: 17.626 s, 86281 bytes, 1037 methods; osr:  0.278 s, 3360 bytes, 8 methods; nmethods_size: 2910560 bytes; nmethods_code_size: 2119680 bytes}
  Tier4 {speed: 1174.569 bytes/s; standard: 33.737 s, 35113 bytes, 166 methods; osr:  4.299 s, 9563 bytes, 19 methods; nmethods_size: 331600 bytes; nmethods_code_size: 198688 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :  56.086 s
    Standard compilation   :  51.509 s, Average : 0.038 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   4.577 s, Average : 0.170 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       18.029 s
       Setup time:            0.019 s
       Build HIR:            11.952 s
         Parse:                10.620 s
         Optimize blocks:       0.007 s
         GVN:                   0.413 s
         Null checks elim:      0.317 s
         Range checks elim:     0.258 s
         Other:                 0.337 s
       Emit LIR:              3.895 s
         LIR Gen:               2.022 s
         Linear Scan:           1.829 s
         Other:                 0.044 s
       Code Emission:         1.391 s
       Code Installation:     0.525 s
       Other:                 0.246 s

    C2 Compile Time:       40.306 s
       Parse:                13.620 s
       Optimize:             12.805 s
         Escape Analysis:       0.842 s
           Conn Graph:            0.615 s
           Macro Eliminate:       0.082 s
         GVN 1:                 1.151 s
         Incremental Inline:    0.515 s
           IdealLoop:             0.000 s
          (IGVN:                  0.112 s)
          (Inline:                0.336 s)
          (Prune Useless:         0.054 s)
           Other:                 0.515 s
         Vector:                0.619 s
           Box elimination:     0.618 s
             IGVN:              0.062 s
             Prune Useless:     0.029 s
         Renumber Live:         0.027 s
         IdealLoop:             6.742 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.202 s
         GVN 2:                 0.038 s
         Macro Expand:          0.923 s
         Barrier Expand:        0.001 s
         Graph Reshape:         0.342 s
         Other:                 1.404 s
       Matcher:                    3.198 s
         Post Selection Cleanup:   0.345 s
       Scheduler:                  2.819 s
       Regalloc:              4.130 s
         Ctor Chaitin:          0.021 s
         Build IFG (virt):      0.090 s
         Build IFG (phys):      0.707 s
         Compute Liveness:      1.545 s
         Regalloc Split:        0.829 s
         Postalloc Copy Rem:    0.457 s
         Merge multidefs:       0.074 s
         Fixup Spills:          0.114 s
         Compact:               0.003 s
         Coalesce 1:            0.328 s
         Coalesce 2:            0.108 s
         Coalesce 3:            0.022 s
         Cache LRG:             0.002 s
         Simplify:              0.041 s
         Select:                0.069 s
       Block Ordering:        0.263 s
       Peephole:              0.024 s
       Code Emission:           2.892 s
         Insn Scheduling:       0.000 s
         Shorten branches:      1.362 s
         Build OOP maps:        0.224 s
         Fill buffer:           0.963 s
         Code Installation:     0.172 s
         Other:                 0.170 s
       Other:                 0.385 s

  Total compiled methods    :     1385 methods
    Standard compilation    :     1358 methods
    On stack replacement    :       27 methods
  Total compiled bytecodes  :   135070 bytes
    Standard compilation    :   122147 bytes
    On stack replacement    :    12923 bytes
  Average compilation speed :     2408 bytes/s

  nmethod code size         :  3279256 bytes
  nmethod total size        :  2341792 bytes


Result "jvbench.somier.SomierPatternBenchmark.indexInRange":
  N = 10
  mean =      8.209 ±(99.9%) 0.022 s/op

  Histogram, s/op:
    [8.190, 8.195) = 2 
    [8.195, 8.200) = 1 
    [8.200, 8.205) = 1 
    [8.205, 8.210) = 3 
    [8.210, 8.215) = 0 
    [8.215, 8.220) = 1 
    [8.220, 8.225) = 0 
    [8.225, 8.230) = 1 
    [8.230, 8.235) = 0 
    [8.235, 8.240) = 1 

  Percentiles, s/op:
      p(0.0000) =      8.191 s/op
     p(50.0000) =      8.208 s/op
     p(90.0000) =      8.235 s/op
     p(95.0000) =      8.236 s/op
     p(99.0000) =      8.236 s/op
     p(99.9000) =      8.236 s/op
     p(99.9900) =      8.236 s/op
     p(99.9990) =      8.236 s/op
     p(99.9999) =      8.236 s/op
    p(100.0000) =      8.236 s/op

Secondary result "jvbench.somier.SomierPatternBenchmark.indexInRange:·gc.alloc.rate":
  70.934 ±(99.9%) 0.234 MB/sec [Average]
  (min, avg, max) = (70.608, 70.934, 71.147), stdev = 0.155
  CI (99.9%): [70.701, 71.168] (assumes normal distribution)

Secondary result "jvbench.somier.SomierPatternBenchmark.indexInRange:·gc.alloc.rate.norm":
  648905630.400 ±(99.9%) 16698.067 B/op [Average]
  (min, avg, max) = (648899624.000, 648905630.400, 648926200.000), stdev = 11044.738
  CI (99.9%): [648888932.333, 648922328.467] (assumes normal distribution)

Secondary result "jvbench.somier.SomierPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space":
  63.856 ±(99.9%) 203.528 MB/sec [Average]
  (min, avg, max) = (≈ 0, 63.856, 319.337), stdev = 134.621
  CI (99.9%): [≈ 0, 267.385] (assumes normal distribution)

Secondary result "jvbench.somier.SomierPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm":
  583847116.800 ±(99.9%) 1860881352.646 B/op [Average]
  (min, avg, max) = (≈ 0, 583847116.800, 2919235584.000), stdev = 1230857796.274
  CI (99.9%): [≈ 0, 2444728469.446] (assumes normal distribution)

Secondary result "jvbench.somier.SomierPatternBenchmark.indexInRange:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.422
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "jvbench.somier.SomierPatternBenchmark.indexInRange:·gc.time":
  7.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.700, 4.000), stdev = 1.494
  CI (99.9%): [7.000, 7.000] (assumes normal distribution)


# Run complete. Total time: 00:03:33

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                         Mode  Cnt          Score            Error   Units
SomierPatternBenchmark.indexInRange                                 ss   10          8.209 ±          0.022    s/op
SomierPatternBenchmark.indexInRange:·gc.alloc.rate                  ss   10         70.934 ±          0.234  MB/sec
SomierPatternBenchmark.indexInRange:·gc.alloc.rate.norm             ss   10  648905630.400 ±      16698.067    B/op
SomierPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space         ss   10         63.856 ±        203.528  MB/sec
SomierPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm    ss   10  583847116.800 ± 1860881352.646    B/op
SomierPatternBenchmark.indexInRange:·gc.count                       ss   10          2.000                   counts
SomierPatternBenchmark.indexInRange:·gc.time                        ss   10          7.000                       ms

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/pin_vectorial/2024-05-15_11:59:53/somier/SomierPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 6159.548 bytes/s; standard: 12.865 s, 79241 bytes, 1056 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1594128 bytes; nmethods_code_size: 1128928 bytes}
  C2 {speed: 596.384 bytes/s; standard: 15.532 s, 10984 bytes, 86 methods; osr:  3.149 s, 157 bytes, 3 methods; nmethods_size: 100856 bytes; nmethods_code_size: 63648 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 3960.716 bytes/s; standard:  0.164 s, 651 bytes, 137 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 32952 bytes; nmethods_code_size: 20864 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 6188.005 bytes/s; standard: 12.700 s, 78590 bytes, 919 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1561176 bytes; nmethods_code_size: 1108064 bytes}
  Tier4 {speed: 596.384 bytes/s; standard: 15.532 s, 10984 bytes, 86 methods; osr:  3.149 s, 157 bytes, 3 methods; nmethods_size: 100856 bytes; nmethods_code_size: 63648 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :  31.546 s
    Standard compilation   :  28.396 s, Average : 0.025 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   3.149 s, Average : 1.050 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       12.821 s
       Setup time:            0.063 s
       Build HIR:             7.496 s
         Parse:                 6.231 s
         Optimize blocks:       0.007 s
         GVN:                   0.409 s
         Null checks elim:      0.292 s
         Range checks elim:     0.262 s
         Other:                 0.295 s
       Emit LIR:              3.054 s
         LIR Gen:               1.509 s
         Linear Scan:           1.496 s
         Other:                 0.049 s
       Code Emission:         1.373 s
       Code Installation:     0.544 s
       Other:                 0.292 s

    C2 Compile Time:       21.189 s
       Parse:                 4.969 s
       Optimize:              7.186 s
         Escape Analysis:       0.380 s
           Conn Graph:            0.352 s
           Macro Eliminate:       0.002 s
         GVN 1:                 1.099 s
         Incremental Inline:    0.001 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.001 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.013 s
         IdealLoop:             3.648 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.134 s
         GVN 2:                 0.032 s
         Macro Expand:          0.771 s
         Barrier Expand:        0.003 s
         Graph Reshape:         0.216 s
         Other:                 0.889 s
       Matcher:                    1.964 s
         Post Selection Cleanup:   0.167 s
       Scheduler:                  1.825 s
       Regalloc:              2.636 s
         Ctor Chaitin:          0.017 s
         Build IFG (virt):      0.084 s
         Build IFG (phys):      0.415 s
         Compute Liveness:      0.876 s
         Regalloc Split:        0.560 s
         Postalloc Copy Rem:    0.220 s
         Merge multidefs:       0.035 s
         Fixup Spills:          0.057 s
         Compact:               0.012 s
         Coalesce 1:            0.230 s
         Coalesce 2:            0.103 s
         Coalesce 3:            0.010 s
         Cache LRG:             0.002 s
         Simplify:              0.048 s
         Select:                0.054 s
       Block Ordering:        0.236 s
       Peephole:              0.024 s
       Code Emission:           1.658 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.729 s
         Build OOP maps:        0.171 s
         Fill buffer:           0.594 s
         Code Installation:     0.038 s
         Other:                 0.125 s
       Other:                 0.653 s

  Total compiled methods    :     1145 methods
    Standard compilation    :     1142 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    90382 bytes
    Standard compilation    :    90225 bytes
    On stack replacement    :      157 bytes
  Average compilation speed :     2865 bytes/s

  nmethod code size         :  1694984 bytes
  nmethod total size        :  1192576 bytes
