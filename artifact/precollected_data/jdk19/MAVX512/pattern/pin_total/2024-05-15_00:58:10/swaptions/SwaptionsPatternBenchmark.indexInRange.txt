# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dbenchmark.plugin=jvbench.plugin.SocketPlugin -Dms=64 -Dns=16384
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.swaptions.SwaptionsPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 42.420 s/op
# Warmup Iteration   2: 8.685 s/op
# Warmup Iteration   3: 7.821 s/op
# Warmup Iteration   4: 7.921 s/op
# Warmup Iteration   5: 8.291 s/op
# Warmup Iteration   6: 7.770 s/op
# Warmup Iteration   7: 7.766 s/op
# Warmup Iteration   8: 7.765 s/op
# Warmup Iteration   9: 7.969 s/op
# Warmup Iteration  10: 8.036 s/op
Iteration   1: 7.717 s/op
                 ·gc.alloc.rate:               349.932 MB/sec
                 ·gc.alloc.rate.norm:          3028977448.000 B/op
                 ·gc.churn.G1_Eden_Space:      281.045 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 2432696320.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     112.000 ms

Iteration   2: 7.943 s/op
                 ·gc.alloc.rate:                   341.620 MB/sec
                 ·gc.alloc.rate.norm:              3028970592.000 B/op
                 ·gc.churn.G1_Eden_Space:          274.370 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2432696320.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 65616.000 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         114.000 ms

Iteration   3: 7.840 s/op
                 ·gc.alloc.rate:                   346.133 MB/sec
                 ·gc.alloc.rate.norm:              3028996832.000 B/op
                 ·gc.churn.G1_Eden_Space:          555.983 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4865392640.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.010 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 83688.000 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         230.000 ms

Iteration   4: 7.742 s/op
                 ·gc.alloc.rate:                   350.144 MB/sec
                 ·gc.alloc.rate.norm:              3028970560.000 B/op
                 ·gc.churn.G1_Eden_Space:          281.215 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2432696320.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 11088.000 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         112.000 ms

Iteration   5: 7.702 s/op
                 ·gc.alloc.rate:                   351.706 MB/sec
                 ·gc.alloc.rate.norm:              3028970560.000 B/op
                 ·gc.churn.G1_Eden_Space:          282.470 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2432696320.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 31136.000 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         110.000 ms

Iteration   6: 7.697 s/op
                 ·gc.alloc.rate:                   351.553 MB/sec
                 ·gc.alloc.rate.norm:              3028970560.000 B/op
                 ·gc.churn.G1_Eden_Space:          282.347 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2432696320.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2064.000 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         110.000 ms

Iteration   7: 8.057 s/op
                 ·gc.alloc.rate:               337.045 MB/sec
                 ·gc.alloc.rate.norm:          3028996896.000 B/op
                 ·gc.churn.G1_Eden_Space:      541.386 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 4865392640.000 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     222.000 ms

Iteration   8: 7.766 s/op
                 ·gc.alloc.rate:               348.965 MB/sec
                 ·gc.alloc.rate.norm:          3028971008.000 B/op
                 ·gc.churn.G1_Eden_Space:      280.269 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 2432696320.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     111.000 ms

Iteration   9: 7.955 s/op
                 ·gc.alloc.rate:                   341.376 MB/sec
                 ·gc.alloc.rate.norm:              3028970592.000 B/op
                 ·gc.churn.G1_Eden_Space:          274.174 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2432696320.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 76904.000 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         112.000 ms

Iteration  10: 7.691 s/op
                 ·gc.alloc.rate:               352.282 MB/sec
                 ·gc.alloc.rate.norm:          3028970504.000 B/op
                 ·gc.churn.G1_Eden_Space:      282.933 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 2432696320.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     111.000 ms


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 2304.628 bytes/s; standard: 37.528 s, 91685 bytes, 1264 methods; osr:  7.925 s, 13068 bytes, 11 methods; nmethods_size: 3525544 bytes; nmethods_code_size: 2556448 bytes}
  C2 {speed: 359.578 bytes/s; standard: 103.264 s, 34404 bytes, 200 methods; osr: 22.995 s, 10996 bytes, 17 methods; nmethods_size: 343440 bytes; nmethods_code_size: 215744 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 2614.532 bytes/s; standard:  0.296 s, 774 bytes, 159 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 38088 bytes; nmethods_code_size: 24096 bytes}
  Tier2 {speed: 2212.644 bytes/s; standard:  0.028 s, 62 bytes, 1 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 736 bytes; nmethods_code_size: 384 bytes}
  Tier3 {speed: 2302.653 bytes/s; standard: 37.204 s, 90849 bytes, 1104 methods; osr:  7.925 s, 13068 bytes, 11 methods; nmethods_size: 3486720 bytes; nmethods_code_size: 2531968 bytes}
  Tier4 {speed: 359.578 bytes/s; standard: 103.264 s, 34404 bytes, 200 methods; osr: 22.995 s, 10996 bytes, 17 methods; nmethods_size: 343440 bytes; nmethods_code_size: 215744 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   : 171.712 s
    Standard compilation   : 140.792 s, Average : 0.096 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :  30.920 s, Average : 1.104 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       45.351 s
       Setup time:            0.172 s
       Build HIR:            24.162 s
         Parse:                20.420 s
         Optimize blocks:       0.011 s
         GVN:                   1.571 s
         Null checks elim:      0.693 s
         Range checks elim:     0.384 s
         Other:                 1.083 s
       Emit LIR:             14.595 s
         LIR Gen:               4.467 s
         Linear Scan:          10.026 s
         Other:                 0.102 s
       Code Emission:         4.185 s
       Code Installation:     1.688 s
       Other:                 0.549 s

    C2 Compile Time:      129.480 s
       Parse:                20.632 s
       Optimize:             51.126 s
         Escape Analysis:       1.283 s
           Conn Graph:            1.009 s
           Macro Eliminate:       0.212 s
         GVN 1:                 3.135 s
         Incremental Inline:    2.778 s
           IdealLoop:             0.000 s
          (IGVN:                  1.130 s)
          (Inline:                1.334 s)
          (Prune Useless:         0.290 s)
           Other:                 2.778 s
         Vector:                1.601 s
           Box elimination:     1.595 s
             IGVN:              0.387 s
             Prune Useless:     0.299 s
         Renumber Live:         0.278 s
         IdealLoop:            34.615 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.610 s
         GVN 2:                 0.187 s
         Macro Expand:          2.072 s
         Barrier Expand:        0.002 s
         Graph Reshape:         0.633 s
         Other:                 3.933 s
       Matcher:                    8.012 s
         Post Selection Cleanup:   0.511 s
       Scheduler:                  7.730 s
       Regalloc:             31.748 s
         Ctor Chaitin:          0.022 s
         Build IFG (virt):      0.444 s
         Build IFG (phys):      5.200 s
         Compute Liveness:      9.822 s
         Regalloc Split:        2.892 s
         Postalloc Copy Rem:    9.546 s
         Merge multidefs:       0.652 s
         Fixup Spills:          0.150 s
         Compact:               0.076 s
         Coalesce 1:            0.934 s
         Coalesce 2:            0.429 s
         Coalesce 3:            0.210 s
         Cache LRG:             0.060 s
         Simplify:              0.752 s
         Select:                1.245 s
       Block Ordering:        0.511 s
       Peephole:              0.169 s
       Code Emission:           7.835 s
         Insn Scheduling:       0.000 s
         Shorten branches:      1.689 s
         Build OOP maps:        2.946 s
         Fill buffer:           1.719 s
         Code Installation:     1.101 s
         Other:                 0.380 s
       Other:                 0.616 s

  Total compiled methods    :     1492 methods
    Standard compilation    :     1464 methods
    On stack replacement    :       28 methods
  Total compiled bytecodes  :   150153 bytes
    Standard compilation    :   126089 bytes
    On stack replacement    :    24064 bytes
  Average compilation speed :      874 bytes/s

  nmethod code size         :  3868984 bytes
  nmethod total size        :  2772192 bytes


Result "jvbench.swaptions.SwaptionsPatternBenchmark.indexInRange":
  N = 10
  mean =      7.811 ±(99.9%) 0.198 s/op

  Histogram, s/op:
    [7.600, 7.625) = 0 
    [7.625, 7.650) = 0 
    [7.650, 7.675) = 0 
    [7.675, 7.700) = 2 
    [7.700, 7.725) = 2 
    [7.725, 7.750) = 1 
    [7.750, 7.775) = 1 
    [7.775, 7.800) = 0 
    [7.800, 7.825) = 0 
    [7.825, 7.850) = 1 
    [7.850, 7.875) = 0 
    [7.875, 7.900) = 0 
    [7.900, 7.925) = 0 
    [7.925, 7.950) = 1 
    [7.950, 7.975) = 1 
    [7.975, 8.000) = 0 
    [8.000, 8.025) = 0 
    [8.025, 8.050) = 0 
    [8.050, 8.075) = 1 

  Percentiles, s/op:
      p(0.0000) =      7.691 s/op
     p(50.0000) =      7.754 s/op
     p(90.0000) =      8.047 s/op
     p(95.0000) =      8.057 s/op
     p(99.0000) =      8.057 s/op
     p(99.9000) =      8.057 s/op
     p(99.9900) =      8.057 s/op
     p(99.9990) =      8.057 s/op
     p(99.9999) =      8.057 s/op
    p(100.0000) =      8.057 s/op

Secondary result "jvbench.swaptions.SwaptionsPatternBenchmark.indexInRange:·gc.alloc.rate":
  347.076 ±(99.9%) 8.024 MB/sec [Average]
  (min, avg, max) = (337.045, 347.076, 352.282), stdev = 5.307
  CI (99.9%): [339.052, 355.099] (assumes normal distribution)

Secondary result "jvbench.swaptions.SwaptionsPatternBenchmark.indexInRange:·gc.alloc.rate.norm":
  3028976555.200 ±(99.9%) 16500.338 B/op [Average]
  (min, avg, max) = (3028970504.000, 3028976555.200, 3028996896.000), stdev = 10913.952
  CI (99.9%): [3028960054.862, 3028993055.538] (assumes normal distribution)

Secondary result "jvbench.swaptions.SwaptionsPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space":
  333.619 ±(99.9%) 171.512 MB/sec [Average]
  (min, avg, max) = (274.174, 333.619, 555.983), stdev = 113.445
  CI (99.9%): [162.107, 505.132] (assumes normal distribution)

Secondary result "jvbench.swaptions.SwaptionsPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm":
  2919235584.000 ±(99.9%) 1550734460.538 B/op [Average]
  (min, avg, max) = (2432696320.000, 2919235584.000, 4865392640.000), stdev = 1025714830.228
  CI (99.9%): [1368501123.462, 4469970044.538] (assumes normal distribution)

Secondary result "jvbench.swaptions.SwaptionsPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.006 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.003, 0.010), stdev = 0.004
  CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)

Secondary result "jvbench.swaptions.SwaptionsPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm":
  27049.600 ±(99.9%) 52862.693 B/op [Average]
  (min, avg, max) = (≈ 0, 27049.600, 83688.000), stdev = 34965.398
  CI (99.9%): [≈ 0, 79912.293] (assumes normal distribution)

Secondary result "jvbench.swaptions.SwaptionsPatternBenchmark.indexInRange:·gc.count":
  12.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.422
  CI (99.9%): [12.000, 12.000] (assumes normal distribution)

Secondary result "jvbench.swaptions.SwaptionsPatternBenchmark.indexInRange:·gc.time":
  1344.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (110.000, 134.400, 230.000), stdev = 48.328
  CI (99.9%): [1344.000, 1344.000] (assumes normal distribution)


# Run complete. Total time: 00:03:56

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                                Mode  Cnt           Score            Error   Units
SwaptionsPatternBenchmark.indexInRange                                     ss   10           7.811 ±          0.198    s/op
SwaptionsPatternBenchmark.indexInRange:·gc.alloc.rate                      ss   10         347.076 ±          8.024  MB/sec
SwaptionsPatternBenchmark.indexInRange:·gc.alloc.rate.norm                 ss   10  3028976555.200 ±      16500.338    B/op
SwaptionsPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space             ss   10         333.619 ±        171.512  MB/sec
SwaptionsPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm        ss   10  2919235584.000 ± 1550734460.538    B/op
SwaptionsPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space         ss   10           0.003 ±          0.006  MB/sec
SwaptionsPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm    ss   10       27049.600 ±      52862.693    B/op
SwaptionsPatternBenchmark.indexInRange:·gc.count                           ss   10          12.000                   counts
SwaptionsPatternBenchmark.indexInRange:·gc.time                            ss   10        1344.000                       ms

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/pin_total/2024-05-15_00:58:10/swaptions/SwaptionsPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 4242.963 bytes/s; standard: 20.396 s, 86710 bytes, 1088 methods; osr:  0.193 s, 649 bytes, 1 methods; nmethods_size: 1723096 bytes; nmethods_code_size: 1221696 bytes}
  C2 {speed: 405.806 bytes/s; standard: 23.351 s, 10941 bytes, 87 methods; osr:  3.997 s, 157 bytes, 3 methods; nmethods_size: 100648 bytes; nmethods_code_size: 64192 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 1748.770 bytes/s; standard:  0.368 s, 643 bytes, 136 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 32736 bytes; nmethods_code_size: 20736 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 4288.315 bytes/s; standard: 20.028 s, 86067 bytes, 952 methods; osr:  0.193 s, 649 bytes, 1 methods; nmethods_size: 1690360 bytes; nmethods_code_size: 1200960 bytes}
  Tier4 {speed: 405.806 bytes/s; standard: 23.351 s, 10941 bytes, 87 methods; osr:  3.997 s, 157 bytes, 3 methods; nmethods_size: 100648 bytes; nmethods_code_size: 64192 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :  48.220 s
    Standard compilation   :  43.747 s, Average : 0.037 s
    Bailed out compilation :   0.283 s, Average : 0.283 s
    On stack replacement   :   4.190 s, Average : 1.048 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       20.817 s
       Setup time:            0.116 s
       Build HIR:            10.718 s
         Parse:                 8.817 s
         Optimize blocks:       0.009 s
         GVN:                   0.671 s
         Null checks elim:      0.428 s
         Range checks elim:     0.265 s
         Other:                 0.528 s
       Emit LIR:              6.195 s
         LIR Gen:               2.270 s
         Linear Scan:           3.828 s
         Other:                 0.096 s
       Code Emission:         2.156 s
       Code Installation:     1.186 s
       Other:                 0.447 s

    C2 Compile Time:       30.659 s
       Parse:                 6.500 s
       Optimize:              9.988 s
         Escape Analysis:       0.606 s
           Conn Graph:            0.567 s
           Macro Eliminate:       0.002 s
         GVN 1:                 1.274 s
         Incremental Inline:    0.001 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.001 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.019 s
         IdealLoop:             5.275 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.246 s
         GVN 2:                 0.054 s
         Macro Expand:          0.992 s
         Barrier Expand:        0.001 s
         Graph Reshape:         0.260 s
         Other:                 1.260 s
       Matcher:                    3.115 s
         Post Selection Cleanup:   0.238 s
       Scheduler:                  2.645 s
       Regalloc:              5.103 s
         Ctor Chaitin:          0.019 s
         Build IFG (virt):      0.115 s
         Build IFG (phys):      0.674 s
         Compute Liveness:      1.683 s
         Regalloc Split:        0.888 s
         Postalloc Copy Rem:    0.963 s
         Merge multidefs:       0.074 s
         Fixup Spills:          0.085 s
         Compact:               0.009 s
         Coalesce 1:            0.330 s
         Coalesce 2:            0.170 s
         Coalesce 3:            0.029 s
         Cache LRG:             0.008 s
         Simplify:              0.094 s
         Select:                0.148 s
       Block Ordering:        0.268 s
       Peephole:              0.077 s
       Code Emission:           2.289 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.868 s
         Build OOP maps:        0.462 s
         Fill buffer:           0.713 s
         Code Installation:     0.095 s
         Other:                 0.150 s
       Other:                 0.558 s

  Total compiled methods    :     1179 methods
    Standard compilation    :     1175 methods
    On stack replacement    :        4 methods
  Total compiled bytecodes  :    98457 bytes
    Standard compilation    :    97651 bytes
    On stack replacement    :      806 bytes
  Average compilation speed :     2041 bytes/s

  nmethod code size         :  1823744 bytes
  nmethod total size        :  1285888 bytes
