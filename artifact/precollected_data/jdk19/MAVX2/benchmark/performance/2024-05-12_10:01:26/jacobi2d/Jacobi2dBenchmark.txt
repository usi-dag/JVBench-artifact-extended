# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dsize=10000 -Dtsteps=14
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.jacobi2d.Jacobi2dBenchmark.autoVec

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 3.926 s/op
# Warmup Iteration   2: 3.914 s/op
# Warmup Iteration   3: 3.634 s/op
# Warmup Iteration   4: 3.843 s/op
# Warmup Iteration   5: 3.911 s/op
# Warmup Iteration   6: 3.914 s/op
# Warmup Iteration   7: 3.910 s/op
# Warmup Iteration   8: 3.909 s/op
# Warmup Iteration   9: 3.911 s/op
# Warmup Iteration  10: 3.019 s/op
Iteration   1: 3.014 s/op
Iteration   2: 3.024 s/op
Iteration   3: 3.016 s/op
Iteration   4: 3.029 s/op
Iteration   5: 3.016 s/op
Iteration   6: 3.015 s/op
Iteration   7: 3.013 s/op
Iteration   8: 3.015 s/op
Iteration   9: 3.014 s/op
Iteration  10: 3.015 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 485760.599 bytes/s; standard:  0.095 s, 46116 bytes, 634 methods; osr:  0.002 s, 1099 bytes, 4 methods; nmethods_size: 913296 bytes; nmethods_code_size: 647488 bytes}
  C2 {speed: 47331.531 bytes/s; standard:  0.079 s, 4718 bytes, 50 methods; osr:  0.031 s, 510 bytes, 4 methods; nmethods_size: 52440 bytes; nmethods_code_size: 35328 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 157505.924 bytes/s; standard:  0.003 s, 524 bytes, 109 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 26200 bytes; nmethods_code_size: 16608 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 497394.164 bytes/s; standard:  0.092 s, 45592 bytes, 525 methods; osr:  0.002 s, 1099 bytes, 4 methods; nmethods_size: 887096 bytes; nmethods_code_size: 630880 bytes}
  Tier4 {speed: 47331.531 bytes/s; standard:  0.079 s, 4718 bytes, 50 methods; osr:  0.031 s, 510 bytes, 4 methods; nmethods_size: 52440 bytes; nmethods_code_size: 35328 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.208 s
    Standard compilation   :   0.174 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.033 s, Average : 0.004 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.096 s
       Setup time:            0.001 s
       Build HIR:             0.041 s
         Parse:                 0.033 s
         Optimize blocks:       0.000 s
         GVN:                   0.003 s
         Null checks elim:      0.002 s
         Range checks elim:     0.001 s
         Other:                 0.003 s
       Emit LIR:              0.033 s
         LIR Gen:               0.007 s
         Linear Scan:           0.026 s
         Other:                 0.000 s
       Code Emission:         0.010 s
       Code Installation:     0.009 s
       Other:                 0.003 s

    C2 Compile Time:        0.112 s
       Parse:                 0.009 s
       Optimize:              0.056 s
         Escape Analysis:       0.000 s
           Conn Graph:            0.000 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.002 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.046 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.000 s
         Macro Expand:          0.001 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.001 s
         Other:                 0.005 s
       Matcher:                    0.006 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.007 s
       Regalloc:              0.027 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.006 s
         Compute Liveness:      0.009 s
         Regalloc Split:        0.002 s
         Postalloc Copy Rem:    0.003 s
         Merge multidefs:       0.001 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.001 s
         Coalesce 2:            0.000 s
         Coalesce 3:            0.000 s
         Cache LRG:             0.000 s
         Simplify:              0.001 s
         Select:                0.001 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.005 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.001 s
         Build OOP maps:        0.001 s
         Fill buffer:           0.001 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :      692 methods
    Standard compilation    :      684 methods
    On stack replacement    :        8 methods
  Total compiled bytecodes  :    52443 bytes
    Standard compilation    :    50834 bytes
    On stack replacement    :     1609 bytes
  Average compilation speed :   252551 bytes/s

  nmethod code size         :   965736 bytes
  nmethod total size        :   682816 bytes


Result "jvbench.jacobi2d.Jacobi2dBenchmark.autoVec":
  N = 10
  mean =      3.017 Â±(99.9%) 0.008 s/op

  Histogram, s/op:
    [3.010, 3.011) = 0 
    [3.011, 3.013) = 0 
    [3.013, 3.014) = 1 
    [3.014, 3.015) = 4 
    [3.015, 3.016) = 2 
    [3.016, 3.018) = 1 
    [3.018, 3.019) = 0 
    [3.019, 3.020) = 0 
    [3.020, 3.021) = 0 
    [3.021, 3.023) = 0 
    [3.023, 3.024) = 0 
    [3.024, 3.025) = 1 
    [3.025, 3.026) = 0 
    [3.026, 3.028) = 0 
    [3.028, 3.029) = 1 
    [3.029, 3.030) = 0 

  Percentiles, s/op:
      p(0.0000) =      3.013 s/op
     p(50.0000) =      3.015 s/op
     p(90.0000) =      3.028 s/op
     p(95.0000) =      3.029 s/op
     p(99.0000) =      3.029 s/op
     p(99.9000) =      3.029 s/op
     p(99.9900) =      3.029 s/op
     p(99.9990) =      3.029 s/op
     p(99.9999) =      3.029 s/op
    p(100.0000) =      3.029 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dsize=10000 -Dtsteps=14 -XX:-UseSuperWord
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.jacobi2d.Jacobi2dBenchmark.explicitVec

# Run progress: 25.00% complete, ETA 00:03:27
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 2.509 s/op
# Warmup Iteration   2: 2.410 s/op
# Warmup Iteration   3: 2.393 s/op
# Warmup Iteration   4: 2.394 s/op
# Warmup Iteration   5: 2.398 s/op
# Warmup Iteration   6: 2.397 s/op
# Warmup Iteration   7: 2.399 s/op
# Warmup Iteration   8: 2.393 s/op
# Warmup Iteration   9: 2.395 s/op
# Warmup Iteration  10: 2.399 s/op
Iteration   1: 2.403 s/op
Iteration   2: 2.409 s/op
Iteration   3: 2.404 s/op
Iteration   4: 2.406 s/op
Iteration   5: 2.399 s/op
Iteration   6: 2.400 s/op
Iteration   7: 2.416 s/op
Iteration   8: 2.398 s/op
Iteration   9: 2.393 s/op
Iteration  10: 2.397 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 413651.905 bytes/s; standard:  0.125 s, 52245 bytes, 766 methods; osr:  0.005 s, 1463 bytes, 4 methods; nmethods_size: 1216928 bytes; nmethods_code_size: 871744 bytes}
  C2 {speed: 62591.381 bytes/s; standard:  0.117 s, 7936 bytes, 75 methods; osr:  0.032 s, 1399 bytes, 6 methods; nmethods_size: 74408 bytes; nmethods_code_size: 47200 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 129181.693 bytes/s; standard:  0.004 s, 544 bytes, 113 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 27128 bytes; nmethods_code_size: 17184 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 423187.548 bytes/s; standard:  0.121 s, 51701 bytes, 653 methods; osr:  0.005 s, 1463 bytes, 4 methods; nmethods_size: 1189800 bytes; nmethods_code_size: 854560 bytes}
  Tier4 {speed: 62591.381 bytes/s; standard:  0.117 s, 7936 bytes, 75 methods; osr:  0.032 s, 1399 bytes, 6 methods; nmethods_size: 74408 bytes; nmethods_code_size: 47200 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.279 s
    Standard compilation   :   0.242 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.037 s, Average : 0.004 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.129 s
       Setup time:            0.001 s
       Build HIR:             0.057 s
         Parse:                 0.047 s
         Optimize blocks:       0.000 s
         GVN:                   0.004 s
         Null checks elim:      0.002 s
         Range checks elim:     0.001 s
         Other:                 0.004 s
       Emit LIR:              0.042 s
         LIR Gen:               0.009 s
         Linear Scan:           0.033 s
         Other:                 0.001 s
       Code Emission:         0.013 s
       Code Installation:     0.012 s
       Other:                 0.004 s

    C2 Compile Time:        0.150 s
       Parse:                 0.027 s
       Optimize:              0.063 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.000 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.003 s
         Incremental Inline:    0.001 s
           IdealLoop:             0.000 s
          (IGVN:                  0.001 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.001 s
         Vector:                0.001 s
           Box elimination:     0.001 s
             IGVN:              0.001 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.046 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.000 s
         Macro Expand:          0.003 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.001 s
         Other:                 0.006 s
       Matcher:                    0.009 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.009 s
       Regalloc:              0.033 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.007 s
         Compute Liveness:      0.012 s
         Regalloc Split:        0.003 s
         Postalloc Copy Rem:    0.004 s
         Merge multidefs:       0.001 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.001 s
         Coalesce 2:            0.000 s
         Coalesce 3:            0.000 s
         Cache LRG:             0.000 s
         Simplify:              0.001 s
         Select:                0.002 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.007 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.001 s
         Build OOP maps:        0.002 s
         Fill buffer:           0.002 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :      851 methods
    Standard compilation    :      841 methods
    On stack replacement    :       10 methods
  Total compiled bytecodes  :    63043 bytes
    Standard compilation    :    60181 bytes
    On stack replacement    :     2862 bytes
  Average compilation speed :   225592 bytes/s

  nmethod code size         :  1291336 bytes
  nmethod total size        :   918944 bytes


Result "jvbench.jacobi2d.Jacobi2dBenchmark.explicitVec":
  N = 10
  mean =      2.402 Â±(99.9%) 0.010 s/op

  Histogram, s/op:
    [2.390, 2.393) = 0 
    [2.393, 2.395) = 1 
    [2.395, 2.398) = 1 
    [2.398, 2.400) = 3 
    [2.400, 2.403) = 0 
    [2.403, 2.405) = 2 
    [2.405, 2.408) = 1 
    [2.408, 2.410) = 1 
    [2.410, 2.413) = 0 
    [2.413, 2.415) = 0 
    [2.415, 2.418) = 1 

  Percentiles, s/op:
      p(0.0000) =      2.393 s/op
     p(50.0000) =      2.401 s/op
     p(90.0000) =      2.415 s/op
     p(95.0000) =      2.416 s/op
     p(99.0000) =      2.416 s/op
     p(99.9000) =      2.416 s/op
     p(99.9900) =      2.416 s/op
     p(99.9990) =      2.416 s/op
     p(99.9999) =      2.416 s/op
    p(100.0000) =      2.416 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dsize=10000 -Dtsteps=14
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.jacobi2d.Jacobi2dBenchmark.fullVec

# Run progress: 50.00% complete, ETA 00:01:58
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 2.513 s/op
# Warmup Iteration   2: 2.412 s/op
# Warmup Iteration   3: 2.409 s/op
# Warmup Iteration   4: 2.409 s/op
# Warmup Iteration   5: 2.412 s/op
# Warmup Iteration   6: 2.410 s/op
# Warmup Iteration   7: 2.412 s/op
# Warmup Iteration   8: 2.411 s/op
# Warmup Iteration   9: 2.408 s/op
# Warmup Iteration  10: 2.413 s/op
Iteration   1: 2.407 s/op
Iteration   2: 2.406 s/op
Iteration   3: 2.409 s/op
Iteration   4: 2.406 s/op
Iteration   5: 2.411 s/op
Iteration   6: 2.406 s/op
Iteration   7: 2.410 s/op
Iteration   8: 2.409 s/op
Iteration   9: 2.409 s/op
Iteration  10: 2.411 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 426684.238 bytes/s; standard:  0.121 s, 52168 bytes, 766 methods; osr:  0.005 s, 1463 bytes, 4 methods; nmethods_size: 1215512 bytes; nmethods_code_size: 870752 bytes}
  C2 {speed: 64420.117 bytes/s; standard:  0.112 s, 7957 bytes, 76 methods; osr:  0.033 s, 1399 bytes, 6 methods; nmethods_size: 73800 bytes; nmethods_code_size: 46496 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 166310.302 bytes/s; standard:  0.003 s, 544 bytes, 113 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 27128 bytes; nmethods_code_size: 17184 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 433641.199 bytes/s; standard:  0.117 s, 51624 bytes, 653 methods; osr:  0.005 s, 1463 bytes, 4 methods; nmethods_size: 1188384 bytes; nmethods_code_size: 853568 bytes}
  Tier4 {speed: 64420.117 bytes/s; standard:  0.112 s, 7957 bytes, 76 methods; osr:  0.033 s, 1399 bytes, 6 methods; nmethods_size: 73800 bytes; nmethods_code_size: 46496 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.271 s
    Standard compilation   :   0.233 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.038 s, Average : 0.004 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.125 s
       Setup time:            0.001 s
       Build HIR:             0.056 s
         Parse:                 0.046 s
         Optimize blocks:       0.000 s
         GVN:                   0.004 s
         Null checks elim:      0.002 s
         Range checks elim:     0.001 s
         Other:                 0.003 s
       Emit LIR:              0.041 s
         LIR Gen:               0.008 s
         Linear Scan:           0.032 s
         Other:                 0.001 s
       Code Emission:         0.013 s
       Code Installation:     0.011 s
       Other:                 0.003 s

    C2 Compile Time:        0.146 s
       Parse:                 0.026 s
       Optimize:              0.061 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.000 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.003 s
         Incremental Inline:    0.001 s
           IdealLoop:             0.000 s
          (IGVN:                  0.001 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.001 s
         Vector:                0.001 s
           Box elimination:     0.001 s
             IGVN:              0.001 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.044 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.000 s
         Macro Expand:          0.003 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.001 s
         Other:                 0.006 s
       Matcher:                    0.009 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.009 s
       Regalloc:              0.033 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.007 s
         Compute Liveness:      0.012 s
         Regalloc Split:        0.003 s
         Postalloc Copy Rem:    0.004 s
         Merge multidefs:       0.001 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.001 s
         Coalesce 2:            0.000 s
         Coalesce 3:            0.000 s
         Cache LRG:             0.000 s
         Simplify:              0.001 s
         Select:                0.002 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.007 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.001 s
         Build OOP maps:        0.002 s
         Fill buffer:           0.002 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :      852 methods
    Standard compilation    :      842 methods
    On stack replacement    :       10 methods
  Total compiled bytecodes  :    62987 bytes
    Standard compilation    :    60125 bytes
    On stack replacement    :     2862 bytes
  Average compilation speed :   232097 bytes/s

  nmethod code size         :  1289312 bytes
  nmethod total size        :   917248 bytes


Result "jvbench.jacobi2d.Jacobi2dBenchmark.fullVec":
  N = 10
  mean =      2.409 Â±(99.9%) 0.003 s/op

  Histogram, s/op:
    [2.405, 2.406) = 0 
    [2.406, 2.406) = 2 
    [2.406, 2.407) = 1 
    [2.407, 2.407) = 0 
    [2.407, 2.408) = 1 
    [2.408, 2.408) = 0 
    [2.408, 2.409) = 0 
    [2.409, 2.409) = 1 
    [2.409, 2.410) = 2 
    [2.410, 2.410) = 0 
    [2.410, 2.411) = 1 
    [2.411, 2.411) = 0 
    [2.411, 2.412) = 2 

  Percentiles, s/op:
      p(0.0000) =      2.406 s/op
     p(50.0000) =      2.409 s/op
     p(90.0000) =      2.411 s/op
     p(95.0000) =      2.411 s/op
     p(99.0000) =      2.411 s/op
     p(99.9000) =      2.411 s/op
     p(99.9900) =      2.411 s/op
     p(99.9990) =      2.411 s/op
     p(99.9999) =      2.411 s/op
    p(100.0000) =      2.411 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dsize=10000 -Dtsteps=14 -XX:-UseSuperWord
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.jacobi2d.Jacobi2dBenchmark.serial

# Run progress: 75.00% complete, ETA 00:00:55
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 3.940 s/op
# Warmup Iteration   2: 3.919 s/op
# Warmup Iteration   3: 3.646 s/op
# Warmup Iteration   4: 3.866 s/op
# Warmup Iteration   5: 3.940 s/op
# Warmup Iteration   6: 3.930 s/op
# Warmup Iteration   7: 3.930 s/op
# Warmup Iteration   8: 3.927 s/op
# Warmup Iteration   9: 3.929 s/op
# Warmup Iteration  10: 3.065 s/op
Iteration   1: 3.093 s/op
Iteration   2: 3.064 s/op
Iteration   3: 3.080 s/op
Iteration   4: 3.064 s/op
Iteration   5: 3.099 s/op
Iteration   6: 3.089 s/op
Iteration   7: 3.094 s/op
Iteration   8: 3.074 s/op
Iteration   9: 3.068 s/op
Iteration  10: 3.057 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 488550.543 bytes/s; standard:  0.094 s, 45830 bytes, 636 methods; osr:  0.002 s, 1099 bytes, 4 methods; nmethods_size: 909016 bytes; nmethods_code_size: 644160 bytes}
  C2 {speed: 49052.714 bytes/s; standard:  0.077 s, 4718 bytes, 50 methods; osr:  0.029 s, 510 bytes, 4 methods; nmethods_size: 52568 bytes; nmethods_code_size: 35488 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 147498.023 bytes/s; standard:  0.004 s, 524 bytes, 109 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 26200 bytes; nmethods_code_size: 16608 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 501648.424 bytes/s; standard:  0.090 s, 45306 bytes, 527 methods; osr:  0.002 s, 1099 bytes, 4 methods; nmethods_size: 882816 bytes; nmethods_code_size: 627552 bytes}
  Tier4 {speed: 49052.714 bytes/s; standard:  0.077 s, 4718 bytes, 50 methods; osr:  0.029 s, 510 bytes, 4 methods; nmethods_size: 52568 bytes; nmethods_code_size: 35488 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.203 s
    Standard compilation   :   0.171 s, Average : 0.000 s
    Bailed out compilation :   0.001 s, Average : 0.000 s
    On stack replacement   :   0.032 s, Average : 0.004 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.095 s
       Setup time:            0.001 s
       Build HIR:             0.041 s
         Parse:                 0.033 s
         Optimize blocks:       0.000 s
         GVN:                   0.003 s
         Null checks elim:      0.002 s
         Range checks elim:     0.000 s
         Other:                 0.003 s
       Emit LIR:              0.032 s
         LIR Gen:               0.007 s
         Linear Scan:           0.025 s
         Other:                 0.000 s
       Code Emission:         0.010 s
       Code Installation:     0.009 s
       Other:                 0.003 s

    C2 Compile Time:        0.108 s
       Parse:                 0.009 s
       Optimize:              0.052 s
         Escape Analysis:       0.000 s
           Conn Graph:            0.000 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.002 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.041 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.000 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.001 s
         Other:                 0.005 s
       Matcher:                    0.006 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.007 s
       Regalloc:              0.026 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.006 s
         Compute Liveness:      0.010 s
         Regalloc Split:        0.002 s
         Postalloc Copy Rem:    0.003 s
         Merge multidefs:       0.001 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.001 s
         Coalesce 2:            0.000 s
         Coalesce 3:            0.000 s
         Cache LRG:             0.000 s
         Simplify:              0.001 s
         Select:                0.001 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.005 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.001 s
         Build OOP maps:        0.001 s
         Fill buffer:           0.001 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :      694 methods
    Standard compilation    :      686 methods
    On stack replacement    :        8 methods
  Total compiled bytecodes  :    52157 bytes
    Standard compilation    :    50548 bytes
    On stack replacement    :     1609 bytes
  Average compilation speed :   256661 bytes/s

  nmethod code size         :   961584 bytes
  nmethod total size        :   679648 bytes


Result "jvbench.jacobi2d.Jacobi2dBenchmark.serial":
  N = 10
  mean =      3.078 Â±(99.9%) 0.023 s/op

  Histogram, s/op:
    [3.050, 3.053) = 0 
    [3.053, 3.055) = 0 
    [3.055, 3.058) = 1 
    [3.058, 3.060) = 0 
    [3.060, 3.063) = 0 
    [3.063, 3.065) = 2 
    [3.065, 3.068) = 0 
    [3.068, 3.070) = 1 
    [3.070, 3.073) = 0 
    [3.073, 3.075) = 1 
    [3.075, 3.078) = 0 
    [3.078, 3.080) = 1 
    [3.080, 3.083) = 0 
    [3.083, 3.085) = 0 
    [3.085, 3.088) = 0 
    [3.088, 3.090) = 1 
    [3.090, 3.093) = 0 
    [3.093, 3.095) = 2 
    [3.095, 3.098) = 0 

  Percentiles, s/op:
      p(0.0000) =      3.057 s/op
     p(50.0000) =      3.077 s/op
     p(90.0000) =      3.098 s/op
     p(95.0000) =      3.099 s/op
     p(99.0000) =      3.099 s/op
     p(99.9000) =      3.099 s/op
     p(99.9900) =      3.099 s/op
     p(99.9990) =      3.099 s/op
     p(99.9999) =      3.099 s/op
    p(100.0000) =      3.099 s/op


# Run complete. Total time: 00:03:57

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                      Mode  Cnt  Score   Error  Units
Jacobi2dBenchmark.autoVec        ss   10  3.017 Â± 0.008   s/op
Jacobi2dBenchmark.explicitVec    ss   10  2.402 Â± 0.010   s/op
Jacobi2dBenchmark.fullVec        ss   10  2.409 Â± 0.003   s/op
Jacobi2dBenchmark.serial         ss   10  3.078 Â± 0.023   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/benchmark/performance/2024-05-12_10:01:26/jacobi2d/Jacobi2dBenchmark.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 470272.703 bytes/s; standard:  0.191 s, 89653 bytes, 1129 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 1772248 bytes; nmethods_code_size: 1254816 bytes}
  C2 {speed: 73372.270 bytes/s; standard:  0.171 s, 12841 bytes, 93 methods; osr:  0.006 s, 157 bytes, 3 methods; nmethods_size: 111320 bytes; nmethods_code_size: 70624 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 134024.491 bytes/s; standard:  0.005 s, 700 bytes, 148 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 35640 bytes; nmethods_code_size: 22464 bytes}
  Tier2 {speed: 318985.252 bytes/s; standard:  0.000 s, 51 bytes, 1 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 768 bytes; nmethods_code_size: 480 bytes}
  Tier3 {speed: 479811.975 bytes/s; standard:  0.185 s, 88902 bytes, 980 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 1735840 bytes; nmethods_code_size: 1231872 bytes}
  Tier4 {speed: 73372.270 bytes/s; standard:  0.171 s, 12841 bytes, 93 methods; osr:  0.006 s, 157 bytes, 3 methods; nmethods_size: 111320 bytes; nmethods_code_size: 70624 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.369 s
    Standard compilation   :   0.362 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.007 s, Average : 0.002 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.190 s
       Setup time:            0.001 s
       Build HIR:             0.075 s
         Parse:                 0.056 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.008 s
       Emit LIR:              0.069 s
         LIR Gen:               0.015 s
         Linear Scan:           0.053 s
         Other:                 0.001 s
       Code Emission:         0.021 s
       Code Installation:     0.019 s
       Other:                 0.005 s

    C2 Compile Time:        0.178 s
       Parse:                 0.026 s
       Optimize:              0.056 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.005 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.037 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.001 s
         Other:                 0.007 s
       Matcher:                    0.014 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.015 s
       Regalloc:              0.056 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.011 s
         Compute Liveness:      0.019 s
         Regalloc Split:        0.007 s
         Postalloc Copy Rem:    0.009 s
         Merge multidefs:       0.002 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.000 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.002 s
         Select:                0.003 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.010 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.003 s
         Fill buffer:           0.003 s
         Code Installation:     0.001 s
         Other:                 0.001 s

  Total compiled methods    :     1226 methods
    Standard compilation    :     1222 methods
    On stack replacement    :        4 methods
  Total compiled bytecodes  :   103300 bytes
    Standard compilation    :   102494 bytes
    On stack replacement    :      806 bytes
  Average compilation speed :   279815 bytes/s

  nmethod code size         :  1883568 bytes
  nmethod total size        :  1325440 bytes
