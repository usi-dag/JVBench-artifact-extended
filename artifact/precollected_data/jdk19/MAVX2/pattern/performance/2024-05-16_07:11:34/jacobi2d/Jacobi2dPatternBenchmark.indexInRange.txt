# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dsize=10000 -Dtsteps=14
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 26.295 s/op
# Warmup Iteration   2: 25.411 s/op
# Warmup Iteration   3: 25.394 s/op
# Warmup Iteration   4: 25.423 s/op
# Warmup Iteration   5: 25.365 s/op
# Warmup Iteration   6: 25.427 s/op
# Warmup Iteration   7: 25.324 s/op
# Warmup Iteration   8: 25.288 s/op
# Warmup Iteration   9: 25.332 s/op
# Warmup Iteration  10: 25.328 s/op
Iteration   1: 25.318 s/op
                 ·gc.alloc.rate:                   10961.053 MB/sec
                 ·gc.alloc.rate.norm:              296742388688.000 B/op
                 ·gc.churn.G1_Eden_Space:          11048.913 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     299120984064.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 105264.000 B/op
                 ·gc.count:                        84.000 counts
                 ·gc.time:                         104.000 ms

Iteration   2: 25.341 s/op
                 ·gc.alloc.rate:                   10951.302 MB/sec
                 ·gc.alloc.rate.norm:              296742367856.000 B/op
                 ·gc.churn.G1_Eden_Space:          10907.668 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     295560019968.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 110384.000 B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         104.000 ms

Iteration   3: 25.342 s/op
                 ·gc.alloc.rate:                   10950.905 MB/sec
                 ·gc.alloc.rate.norm:              296742367984.000 B/op
                 ·gc.churn.G1_Eden_Space:          10907.272 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     295560019968.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 107968.000 B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         101.000 ms

Iteration   4: 25.332 s/op
                 ·gc.alloc.rate:                   10954.873 MB/sec
                 ·gc.alloc.rate.norm:              296742388704.000 B/op
                 ·gc.churn.G1_Eden_Space:          11042.684 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     299120984064.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 107328.000 B/op
                 ·gc.count:                        84.000 counts
                 ·gc.time:                         104.000 ms

Iteration   5: 25.312 s/op
                 ·gc.alloc.rate:                   10963.339 MB/sec
                 ·gc.alloc.rate.norm:              296742364088.000 B/op
                 ·gc.churn.G1_Eden_Space:          10919.656 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     295560019968.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 99072.000 B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         106.000 ms

Iteration   6: 25.287 s/op
                 ·gc.alloc.rate:                   10974.104 MB/sec
                 ·gc.alloc.rate.norm:              296742357208.000 B/op
                 ·gc.churn.G1_Eden_Space:          11062.070 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     299120984064.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 132096.000 B/op
                 ·gc.count:                        84.000 counts
                 ·gc.time:                         105.000 ms

Iteration   7: 25.301 s/op
                 ·gc.alloc.rate:                   10968.276 MB/sec
                 ·gc.alloc.rate.norm:              296742334824.000 B/op
                 ·gc.churn.G1_Eden_Space:          10924.575 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     295560019968.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 127968.000 B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         103.000 ms

Iteration   8: 25.323 s/op
                 ·gc.alloc.rate:                   10958.918 MB/sec
                 ·gc.alloc.rate.norm:              296742334664.000 B/op
                 ·gc.churn.G1_Eden_Space:          10915.254 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     295560019968.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 124816.000 B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         105.000 ms

Iteration   9: 25.293 s/op
                 ·gc.alloc.rate:                   10971.797 MB/sec
                 ·gc.alloc.rate.norm:              296742355128.000 B/op
                 ·gc.churn.G1_Eden_Space:          11059.745 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     299120984064.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 119712.000 B/op
                 ·gc.count:                        84.000 counts
                 ·gc.time:                         106.000 ms

Iteration  10: 25.297 s/op
                 ·gc.alloc.rate:                   10970.008 MB/sec
                 ·gc.alloc.rate.norm:              296742334712.000 B/op
                 ·gc.churn.G1_Eden_Space:          10926.300 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     295560019968.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 117648.000 B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         104.000 ms


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 330655.899 bytes/s; standard:  0.287 s, 96118 bytes, 1355 methods; osr:  0.008 s, 1298 bytes, 3 methods; nmethods_size: 2700528 bytes; nmethods_code_size: 1939904 bytes}
  C2 {speed: 70647.811 bytes/s; standard:  0.668 s, 47768 bytes, 231 methods; osr:  0.032 s, 1708 bytes, 4 methods; nmethods_size: 401400 bytes; nmethods_code_size: 248864 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 139573.974 bytes/s; standard:  0.006 s, 840 bytes, 172 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 41312 bytes; nmethods_code_size: 26176 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 334640.676 bytes/s; standard:  0.281 s, 95278 bytes, 1183 methods; osr:  0.008 s, 1298 bytes, 3 methods; nmethods_size: 2659216 bytes; nmethods_code_size: 1913728 bytes}
  Tier4 {speed: 70647.811 bytes/s; standard:  0.668 s, 47768 bytes, 231 methods; osr:  0.032 s, 1708 bytes, 4 methods; nmethods_size: 401400 bytes; nmethods_code_size: 248864 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.995 s
    Standard compilation   :   0.955 s, Average : 0.001 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.040 s, Average : 0.006 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.292 s
       Setup time:            0.001 s
       Build HIR:             0.126 s
         Parse:                 0.103 s
         Optimize blocks:       0.000 s
         GVN:                   0.008 s
         Null checks elim:      0.006 s
         Range checks elim:     0.001 s
         Other:                 0.008 s
       Emit LIR:              0.097 s
         LIR Gen:               0.021 s
         Linear Scan:           0.075 s
         Other:                 0.001 s
       Code Emission:         0.032 s
       Code Installation:     0.029 s
       Other:                 0.007 s

    C2 Compile Time:        0.700 s
       Parse:                 0.122 s
       Optimize:              0.237 s
         Escape Analysis:       0.008 s
           Conn Graph:            0.006 s
           Macro Eliminate:       0.002 s
         GVN 1:                 0.026 s
         Incremental Inline:    0.003 s
           IdealLoop:             0.000 s
          (IGVN:                  0.002 s)
          (Inline:                0.001 s)
          (Prune Useless:         0.001 s)
           Other:                 0.003 s
         Vector:                0.005 s
           Box elimination:     0.005 s
             IGVN:              0.001 s
             Prune Useless:     0.001 s
         Renumber Live:         0.002 s
         IdealLoop:             0.146 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.003 s
         GVN 2:                 0.002 s
         Macro Expand:          0.009 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.004 s
         Other:                 0.029 s
       Matcher:                    0.040 s
         Post Selection Cleanup:   0.003 s
       Scheduler:                  0.045 s
       Regalloc:              0.209 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.003 s
         Build IFG (phys):      0.047 s
         Compute Liveness:      0.068 s
         Regalloc Split:        0.021 s
         Postalloc Copy Rem:    0.028 s
         Merge multidefs:       0.005 s
         Fixup Spills:          0.001 s
         Compact:               0.000 s
         Coalesce 1:            0.006 s
         Coalesce 2:            0.002 s
         Coalesce 3:            0.004 s
         Cache LRG:             0.001 s
         Simplify:              0.009 s
         Select:                0.012 s
         Other:                 0.002 s
       Block Ordering:        0.003 s
       Peephole:              0.001 s
       Code Emission:           0.039 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.007 s
         Build OOP maps:        0.009 s
         Fill buffer:           0.009 s
         Code Installation:     0.005 s
         Other:                 0.009 s

  Total compiled methods    :     1593 methods
    Standard compilation    :     1586 methods
    On stack replacement    :        7 methods
  Total compiled bytecodes  :   146892 bytes
    Standard compilation    :   143886 bytes
    On stack replacement    :     3006 bytes
  Average compilation speed :   147640 bytes/s

  nmethod code size         :  3101928 bytes
  nmethod total size        :  2188768 bytes


Result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange":
  N = 10
  mean =     25.314 ±(99.9%) 0.030 s/op

  Histogram, s/op:
    [25.280, 25.285) = 0 
    [25.285, 25.290) = 1 
    [25.290, 25.295) = 1 
    [25.295, 25.300) = 1 
    [25.300, 25.305) = 1 
    [25.305, 25.310) = 0 
    [25.310, 25.315) = 1 
    [25.315, 25.320) = 1 
    [25.320, 25.325) = 1 
    [25.325, 25.330) = 0 
    [25.330, 25.335) = 1 
    [25.335, 25.340) = 0 
    [25.340, 25.345) = 2 
    [25.345, 25.350) = 0 

  Percentiles, s/op:
      p(0.0000) =     25.287 s/op
     p(50.0000) =     25.315 s/op
     p(90.0000) =     25.341 s/op
     p(95.0000) =     25.342 s/op
     p(99.0000) =     25.342 s/op
     p(99.9000) =     25.342 s/op
     p(99.9900) =     25.342 s/op
     p(99.9990) =     25.342 s/op
     p(99.9999) =     25.342 s/op
    p(100.0000) =     25.342 s/op

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate":
  10962.457 ±(99.9%) 12.793 MB/sec [Average]
  (min, avg, max) = (10950.905, 10962.457, 10974.104), stdev = 8.462
  CI (99.9%): [10949.664, 10975.251] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate.norm":
  296742359385.600 ±(99.9%) 30786.822 B/op [Average]
  (min, avg, max) = (296742334664.000, 296742359385.600, 296742388704.000), stdev = 20363.577
  CI (99.9%): [296742328598.778, 296742390172.422] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space":
  10971.414 ±(99.9%) 107.315 MB/sec [Average]
  (min, avg, max) = (10907.272, 10971.414, 11062.070), stdev = 70.982
  CI (99.9%): [10864.099, 11078.728] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm":
  296984405606.400 ±(99.9%) 2780115020.244 B/op [Average]
  (min, avg, max) = (295560019968.000, 296984405606.400, 299120984064.000), stdev = 1838873952.033
  CI (99.9%): [294204290586.156, 299764520626.645] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.004, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.004, 0.005] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm":
  115225.600 ±(99.9%) 16435.410 B/op [Average]
  (min, avg, max) = (99072.000, 115225.600, 132096.000), stdev = 10871.006
  CI (99.9%): [98790.190, 131661.010] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.count":
  834.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (83.000, 83.400, 84.000), stdev = 0.516
  CI (99.9%): [834.000, 834.000] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.time":
  1042.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (101.000, 104.200, 106.000), stdev = 1.476
  CI (99.9%): [1042.000, 1042.000] (assumes normal distribution)


# Run complete. Total time: 00:08:38

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                               Mode  Cnt             Score            Error   Units
Jacobi2dPatternBenchmark.indexInRange                                     ss   10            25.314 ±          0.030    s/op
Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate                      ss   10         10962.457 ±         12.793  MB/sec
Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate.norm                 ss   10  296742359385.600 ±      30786.822    B/op
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space             ss   10         10971.414 ±        107.315  MB/sec
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm        ss   10  296984405606.400 ± 2780115020.244    B/op
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space         ss   10             0.004 ±          0.001  MB/sec
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm    ss   10        115225.600 ±      16435.410    B/op
Jacobi2dPatternBenchmark.indexInRange:·gc.count                           ss   10           834.000                   counts
Jacobi2dPatternBenchmark.indexInRange:·gc.time                            ss   10          1042.000                       ms

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-16_07:11:34/jacobi2d/Jacobi2dPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 496859.091 bytes/s; standard:  0.173 s, 86087 bytes, 1096 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1712144 bytes; nmethods_code_size: 1214592 bytes}
  C2 {speed: 77183.488 bytes/s; standard:  0.144 s, 11369 bytes, 91 methods; osr:  0.006 s, 157 bytes, 3 methods; nmethods_size: 97800 bytes; nmethods_code_size: 62432 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 148335.849 bytes/s; standard:  0.005 s, 678 bytes, 143 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 34408 bytes; nmethods_code_size: 21792 bytes}
  Tier2 {speed: 398527.791 bytes/s; standard:  0.000 s, 51 bytes, 1 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 768 bytes; nmethods_code_size: 480 bytes}
  Tier3 {speed: 506384.164 bytes/s; standard:  0.169 s, 85358 bytes, 952 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1676968 bytes; nmethods_code_size: 1192320 bytes}
  Tier4 {speed: 77183.488 bytes/s; standard:  0.144 s, 11369 bytes, 91 methods; osr:  0.006 s, 157 bytes, 3 methods; nmethods_size: 97800 bytes; nmethods_code_size: 62432 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.323 s
    Standard compilation   :   0.317 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.006 s, Average : 0.002 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.171 s
       Setup time:            0.001 s
       Build HIR:             0.066 s
         Parse:                 0.051 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.003 s
         Range checks elim:     0.001 s
         Other:                 0.005 s
       Emit LIR:              0.063 s
         LIR Gen:               0.012 s
         Linear Scan:           0.050 s
         Other:                 0.001 s
       Code Emission:         0.019 s
       Code Installation:     0.017 s
       Other:                 0.005 s

    C2 Compile Time:        0.151 s
       Parse:                 0.021 s
       Optimize:              0.046 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.005 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.030 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.000 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.001 s
         Other:                 0.006 s
       Matcher:                    0.011 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.013 s
       Regalloc:              0.048 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.010 s
         Compute Liveness:      0.016 s
         Regalloc Split:        0.006 s
         Postalloc Copy Rem:    0.007 s
         Merge multidefs:       0.001 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.002 s
         Coalesce 2:            0.000 s
         Coalesce 3:            0.000 s
         Cache LRG:             0.000 s
         Simplify:              0.002 s
         Select:                0.002 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.009 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.003 s
         Fill buffer:           0.002 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :     1190 methods
    Standard compilation    :     1187 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    97613 bytes
    Standard compilation    :    97456 bytes
    On stack replacement    :      157 bytes
  Average compilation speed :   302586 bytes/s

  nmethod code size         :  1809944 bytes
  nmethod total size        :  1277024 bytes
