# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dsteps=10 -Dn=128
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.somier.SomierPatternBenchmark.fma

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.895 s/op
# Warmup Iteration   2: 0.592 s/op
# Warmup Iteration   3: 0.593 s/op
# Warmup Iteration   4: 0.588 s/op
# Warmup Iteration   5: 0.589 s/op
# Warmup Iteration   6: 0.592 s/op
# Warmup Iteration   7: 0.591 s/op
# Warmup Iteration   8: 0.589 s/op
# Warmup Iteration   9: 0.591 s/op
# Warmup Iteration  10: 0.590 s/op
Iteration   1: 0.589 s/op
Iteration   2: 0.590 s/op
Iteration   3: 0.591 s/op
Iteration   4: 0.612 s/op
Iteration   5: 0.589 s/op
Iteration   6: 0.592 s/op
Iteration   7: 0.604 s/op
Iteration   8: 0.589 s/op
Iteration   9: 0.592 s/op
Iteration  10: 0.591 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 387891.869 bytes/s; standard:  0.157 s, 61777 bytes, 835 methods; osr:  0.010 s, 2703 bytes, 8 methods; nmethods_size: 1616968 bytes; nmethods_code_size: 1146656 bytes}
  C2 {speed: 81852.624 bytes/s; standard:  0.220 s, 17989 bytes, 106 methods; osr:  0.080 s, 6568 bytes, 13 methods; nmethods_size: 147920 bytes; nmethods_code_size: 91680 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 142930.399 bytes/s; standard:  0.004 s, 553 bytes, 115 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 27592 bytes; nmethods_code_size: 17440 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 393729.163 bytes/s; standard:  0.153 s, 61224 bytes, 720 methods; osr:  0.010 s, 2703 bytes, 8 methods; nmethods_size: 1589376 bytes; nmethods_code_size: 1129216 bytes}
  Tier4 {speed: 81852.624 bytes/s; standard:  0.220 s, 17989 bytes, 106 methods; osr:  0.080 s, 6568 bytes, 13 methods; nmethods_size: 147920 bytes; nmethods_code_size: 91680 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.466 s
    Standard compilation   :   0.377 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.090 s, Average : 0.004 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.165 s
       Setup time:            0.001 s
       Build HIR:             0.072 s
         Parse:                 0.060 s
         Optimize blocks:       0.000 s
         GVN:                   0.005 s
         Null checks elim:      0.002 s
         Range checks elim:     0.001 s
         Other:                 0.004 s
       Emit LIR:              0.055 s
         LIR Gen:               0.011 s
         Linear Scan:           0.043 s
         Other:                 0.001 s
       Code Emission:         0.018 s
       Code Installation:     0.015 s
       Other:                 0.004 s

    C2 Compile Time:        0.301 s
       Parse:                 0.063 s
       Optimize:              0.126 s
         Escape Analysis:       0.003 s
           Conn Graph:            0.003 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.009 s
         Incremental Inline:    0.004 s
           IdealLoop:             0.000 s
          (IGVN:                  0.002 s)
          (Inline:                0.001 s)
          (Prune Useless:         0.001 s)
           Other:                 0.004 s
         Vector:                0.005 s
           Box elimination:     0.005 s
             IGVN:              0.003 s
             Prune Useless:     0.001 s
         Renumber Live:         0.001 s
         IdealLoop:             0.086 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.004 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.010 s
       Matcher:                    0.015 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.017 s
       Regalloc:              0.062 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.013 s
         Compute Liveness:      0.021 s
         Regalloc Split:        0.005 s
         Postalloc Copy Rem:    0.009 s
         Merge multidefs:       0.002 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.002 s
         Coalesce 2:            0.000 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.003 s
         Select:                0.004 s
         Other:                 0.000 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.014 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.004 s
         Fill buffer:           0.003 s
         Code Installation:     0.002 s
         Other:                 0.003 s
       Other:                 0.000 s

  Total compiled methods    :      962 methods
    Standard compilation    :      941 methods
    On stack replacement    :       21 methods
  Total compiled bytecodes  :    89037 bytes
    Standard compilation    :    79766 bytes
    On stack replacement    :     9271 bytes
  Average compilation speed :   190965 bytes/s

  nmethod code size         :  1764888 bytes
  nmethod total size        :  1238336 bytes


Result "jvbench.somier.SomierPatternBenchmark.fma":
  N = 10
  mean =      0.594 Â±(99.9%) 0.012 s/op

  Histogram, s/op:
    [0.580, 0.582) = 0 
    [0.582, 0.585) = 0 
    [0.585, 0.587) = 0 
    [0.587, 0.590) = 3 
    [0.590, 0.592) = 5 
    [0.592, 0.595) = 0 
    [0.595, 0.597) = 0 
    [0.597, 0.600) = 0 
    [0.600, 0.602) = 0 
    [0.602, 0.605) = 1 
    [0.605, 0.607) = 0 
    [0.607, 0.610) = 0 
    [0.610, 0.612) = 1 
    [0.612, 0.615) = 0 
    [0.615, 0.617) = 0 
    [0.617, 0.620) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.589 s/op
     p(50.0000) =      0.591 s/op
     p(90.0000) =      0.611 s/op
     p(95.0000) =      0.612 s/op
     p(99.0000) =      0.612 s/op
     p(99.9000) =      0.612 s/op
     p(99.9900) =      0.612 s/op
     p(99.9990) =      0.612 s/op
     p(99.9999) =      0.612 s/op
    p(100.0000) =      0.612 s/op


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dsteps=10 -Dn=128
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.somier.SomierPatternBenchmark.fmaScalar

# Run progress: 50.00% complete, ETA 00:00:12
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 2.191 s/op
# Warmup Iteration   2: 1.829 s/op
# Warmup Iteration   3: 1.830 s/op
# Warmup Iteration   4: 1.825 s/op
# Warmup Iteration   5: 1.823 s/op
# Warmup Iteration   6: 1.822 s/op
# Warmup Iteration   7: 1.818 s/op
# Warmup Iteration   8: 1.817 s/op
# Warmup Iteration   9: 1.824 s/op
# Warmup Iteration  10: 1.822 s/op
Iteration   1: 1.823 s/op
Iteration   2: 1.825 s/op
Iteration   3: 1.822 s/op
Iteration   4: 1.826 s/op
Iteration   5: 1.823 s/op
Iteration   6: 1.823 s/op
Iteration   7: 1.823 s/op
Iteration   8: 1.821 s/op
Iteration   9: 1.825 s/op
Iteration  10: 1.824 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 508054.671 bytes/s; standard:  0.094 s, 47610 bytes, 647 methods; osr:  0.003 s, 1635 bytes, 8 methods; nmethods_size: 958376 bytes; nmethods_code_size: 671168 bytes}
  C2 {speed: 72688.254 bytes/s; standard:  0.130 s, 9616 bytes, 59 methods; osr:  0.036 s, 2468 bytes, 8 methods; nmethods_size: 81736 bytes; nmethods_code_size: 52928 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 168316.466 bytes/s; standard:  0.003 s, 528 bytes, 110 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 26448 bytes; nmethods_code_size: 16736 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 519417.534 bytes/s; standard:  0.091 s, 47082 bytes, 537 methods; osr:  0.003 s, 1635 bytes, 8 methods; nmethods_size: 931928 bytes; nmethods_code_size: 654432 bytes}
  Tier4 {speed: 72688.254 bytes/s; standard:  0.130 s, 9616 bytes, 59 methods; osr:  0.036 s, 2468 bytes, 8 methods; nmethods_size: 81736 bytes; nmethods_code_size: 52928 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.263 s
    Standard compilation   :   0.224 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.039 s, Average : 0.002 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.096 s
       Setup time:            0.000 s
       Build HIR:             0.041 s
         Parse:                 0.033 s
         Optimize blocks:       0.000 s
         GVN:                   0.003 s
         Null checks elim:      0.002 s
         Range checks elim:     0.001 s
         Other:                 0.003 s
       Emit LIR:              0.033 s
         LIR Gen:               0.007 s
         Linear Scan:           0.026 s
         Other:                 0.000 s
       Code Emission:         0.010 s
       Code Installation:     0.009 s
       Other:                 0.003 s

    C2 Compile Time:        0.168 s
       Parse:                 0.014 s
       Optimize:              0.086 s
         Escape Analysis:       0.000 s
           Conn Graph:            0.000 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.005 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.070 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.001 s
         Other:                 0.006 s
       Matcher:                    0.009 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.011 s
       Regalloc:              0.039 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.008 s
         Compute Liveness:      0.013 s
         Regalloc Split:        0.003 s
         Postalloc Copy Rem:    0.005 s
         Merge multidefs:       0.001 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.001 s
         Coalesce 2:            0.000 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.002 s
         Select:                0.002 s
         Other:                 0.000 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.007 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.001 s
         Build OOP maps:        0.002 s
         Fill buffer:           0.002 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :      722 methods
    Standard compilation    :      706 methods
    On stack replacement    :       16 methods
  Total compiled bytecodes  :    61329 bytes
    Standard compilation    :    57226 bytes
    On stack replacement    :     4103 bytes
  Average compilation speed :   233037 bytes/s

  nmethod code size         :  1040112 bytes
  nmethod total size        :   724096 bytes


Result "jvbench.somier.SomierPatternBenchmark.fmaScalar":
  N = 10
  mean =      1.823 Â±(99.9%) 0.002 s/op

  Histogram, s/op:
    [1.820, 1.821) = 0 
    [1.821, 1.821) = 1 
    [1.821, 1.822) = 0 
    [1.822, 1.822) = 1 
    [1.822, 1.823) = 0 
    [1.823, 1.823) = 3 
    [1.823, 1.824) = 1 
    [1.824, 1.824) = 1 
    [1.824, 1.825) = 0 
    [1.825, 1.825) = 2 
    [1.825, 1.826) = 0 
    [1.826, 1.826) = 1 

  Percentiles, s/op:
      p(0.0000) =      1.821 s/op
     p(50.0000) =      1.823 s/op
     p(90.0000) =      1.826 s/op
     p(95.0000) =      1.826 s/op
     p(99.0000) =      1.826 s/op
     p(99.9000) =      1.826 s/op
     p(99.9900) =      1.826 s/op
     p(99.9990) =      1.826 s/op
     p(99.9999) =      1.826 s/op
    p(100.0000) =      1.826 s/op


# Run complete. Total time: 00:00:49

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                         Mode  Cnt  Score   Error  Units
SomierPatternBenchmark.fma          ss   10  0.594 Â± 0.012   s/op
SomierPatternBenchmark.fmaScalar    ss   10  1.823 Â± 0.002   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-12_10:30:16/somier/SomierPatternBenchmark.fma.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 470026.606 bytes/s; standard:  0.160 s, 75376 bytes, 992 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 1523536 bytes; nmethods_code_size: 1079232 bytes}
  C2 {speed: 69706.719 bytes/s; standard:  0.138 s, 9815 bytes, 74 methods; osr:  0.004 s, 66 bytes, 2 methods; nmethods_size: 86016 bytes; nmethods_code_size: 54816 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 130864.385 bytes/s; standard:  0.005 s, 658 bytes, 139 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 33384 bytes; nmethods_code_size: 21120 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 480908.208 bytes/s; standard:  0.155 s, 74718 bytes, 853 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 1490152 bytes; nmethods_code_size: 1058112 bytes}
  Tier4 {speed: 69706.719 bytes/s; standard:  0.138 s, 9815 bytes, 74 methods; osr:  0.004 s, 66 bytes, 2 methods; nmethods_size: 86016 bytes; nmethods_code_size: 54816 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.303 s
    Standard compilation   :   0.298 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.005 s, Average : 0.002 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.160 s
       Setup time:            0.001 s
       Build HIR:             0.063 s
         Parse:                 0.048 s
         Optimize blocks:       0.000 s
         GVN:                   0.005 s
         Null checks elim:      0.003 s
         Range checks elim:     0.001 s
         Other:                 0.005 s
       Emit LIR:              0.059 s
         LIR Gen:               0.012 s
         Linear Scan:           0.046 s
         Other:                 0.001 s
       Code Emission:         0.018 s
       Code Installation:     0.015 s
       Other:                 0.004 s

    C2 Compile Time:        0.143 s
       Parse:                 0.019 s
       Optimize:              0.042 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.004 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.027 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.000 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.001 s
         Other:                 0.005 s
       Matcher:                    0.010 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.012 s
       Regalloc:              0.049 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.010 s
         Compute Liveness:      0.016 s
         Regalloc Split:        0.007 s
         Postalloc Copy Rem:    0.009 s
         Merge multidefs:       0.002 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.002 s
         Coalesce 2:            0.000 s
         Coalesce 3:            0.000 s
         Cache LRG:             0.000 s
         Simplify:              0.002 s
         Select:                0.002 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.008 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.002 s
         Fill buffer:           0.002 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :     1069 methods
    Standard compilation    :     1066 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    85906 bytes
    Standard compilation    :    85191 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   283053 bytes/s

  nmethod code size         :  1609552 bytes
  nmethod total size        :  1134048 bytes
