# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dk1=3 -Dk2=10 -Ddim=128 -Dchunksize=128 -Dclustersize=10 -Dinfile=streamcluster/input/streamcluster_128_128.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.streamcluster.StreamclusterPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 2.746 s/op
# Warmup Iteration   2: 3.324 s/op
# Warmup Iteration   3: 3.224 s/op
# Warmup Iteration   4: 3.222 s/op
# Warmup Iteration   5: 3.220 s/op
# Warmup Iteration   6: 3.166 s/op
# Warmup Iteration   7: 3.184 s/op
# Warmup Iteration   8: 3.091 s/op
# Warmup Iteration   9: 3.188 s/op
# Warmup Iteration  10: 3.131 s/op
Iteration   1: 3.204 s/op
Iteration   2: 3.237 s/op
Iteration   3: 3.201 s/op
Iteration   4: 3.108 s/op
Iteration   5: 3.204 s/op
Iteration   6: 3.164 s/op
Iteration   7: 3.171 s/op
Iteration   8: 3.193 s/op
Iteration   9: 3.138 s/op
Iteration  10: 3.133 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 402213.734 bytes/s; standard:  0.195 s, 77184 bytes, 1000 methods; osr:  0.006 s, 3819 bytes, 6 methods; nmethods_size: 1777312 bytes; nmethods_code_size: 1274176 bytes}
  C2 {speed: 64704.985 bytes/s; standard:  0.467 s, 31944 bytes, 151 methods; osr:  0.431 s, 26130 bytes, 23 methods; nmethods_size: 433048 bytes; nmethods_code_size: 270272 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 151621.669 bytes/s; standard:  0.004 s, 633 bytes, 130 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 30992 bytes; nmethods_code_size: 19552 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 407518.462 bytes/s; standard:  0.191 s, 76551 bytes, 870 methods; osr:  0.006 s, 3819 bytes, 6 methods; nmethods_size: 1746320 bytes; nmethods_code_size: 1254624 bytes}
  Tier4 {speed: 64704.985 bytes/s; standard:  0.467 s, 31944 bytes, 151 methods; osr:  0.431 s, 26130 bytes, 23 methods; nmethods_size: 433048 bytes; nmethods_code_size: 270272 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   1.099 s
    Standard compilation   :   0.662 s, Average : 0.001 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.437 s, Average : 0.015 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.199 s
       Setup time:            0.001 s
       Build HIR:             0.088 s
         Parse:                 0.072 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.003 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.068 s
         LIR Gen:               0.014 s
         Linear Scan:           0.053 s
         Other:                 0.001 s
       Code Emission:         0.021 s
       Code Installation:     0.017 s
       Other:                 0.004 s

    C2 Compile Time:        0.898 s
       Parse:                 0.138 s
       Optimize:              0.334 s
         Escape Analysis:       0.004 s
           Conn Graph:            0.004 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.021 s
         Incremental Inline:    0.012 s
           IdealLoop:             0.000 s
          (IGVN:                  0.007 s)
          (Inline:                0.003 s)
          (Prune Useless:         0.002 s)
           Other:                 0.012 s
         Vector:                0.008 s
           Box elimination:     0.008 s
             IGVN:              0.003 s
             Prune Useless:     0.002 s
         Renumber Live:         0.003 s
         IdealLoop:             0.243 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.003 s
         GVN 2:                 0.002 s
         Macro Expand:          0.012 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.004 s
         Other:                 0.024 s
       Matcher:                    0.040 s
         Post Selection Cleanup:   0.003 s
       Scheduler:                  0.051 s
       Regalloc:              0.294 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.005 s
         Build IFG (phys):      0.068 s
         Compute Liveness:      0.086 s
         Regalloc Split:        0.034 s
         Postalloc Copy Rem:    0.032 s
         Merge multidefs:       0.005 s
         Fixup Spills:          0.001 s
         Compact:               0.001 s
         Coalesce 1:            0.013 s
         Coalesce 2:            0.003 s
         Coalesce 3:            0.004 s
         Cache LRG:             0.001 s
         Simplify:              0.016 s
         Select:                0.019 s
         Other:                 0.007 s
       Block Ordering:        0.003 s
       Peephole:              0.001 s
       Code Emission:           0.033 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.006 s
         Build OOP maps:        0.011 s
         Fill buffer:           0.009 s
         Code Installation:     0.005 s
         Other:                 0.002 s

  Total compiled methods    :     1180 methods
    Standard compilation    :     1151 methods
    On stack replacement    :       29 methods
  Total compiled bytecodes  :   139077 bytes
    Standard compilation    :   109128 bytes
    On stack replacement    :    29949 bytes
  Average compilation speed :   126558 bytes/s

  nmethod code size         :  2210360 bytes
  nmethod total size        :  1544448 bytes


Result "jvbench.streamcluster.StreamclusterPatternBenchmark.indexInRange":
  N = 10
  mean =      3.175 ±(99.9%) 0.060 s/op

  Histogram, s/op:
    [3.100, 3.113) = 1 
    [3.113, 3.125) = 0 
    [3.125, 3.138) = 1 
    [3.138, 3.150) = 1 
    [3.150, 3.163) = 0 
    [3.163, 3.175) = 2 
    [3.175, 3.188) = 0 
    [3.188, 3.200) = 1 
    [3.200, 3.213) = 3 
    [3.213, 3.225) = 0 
    [3.225, 3.238) = 1 
    [3.238, 3.250) = 0 
    [3.250, 3.263) = 0 
    [3.263, 3.275) = 0 
    [3.275, 3.288) = 0 
    [3.288, 3.300) = 0 

  Percentiles, s/op:
      p(0.0000) =      3.108 s/op
     p(50.0000) =      3.182 s/op
     p(90.0000) =      3.234 s/op
     p(95.0000) =      3.237 s/op
     p(99.0000) =      3.237 s/op
     p(99.9000) =      3.237 s/op
     p(99.9900) =      3.237 s/op
     p(99.9990) =      3.237 s/op
     p(99.9999) =      3.237 s/op
    p(100.0000) =      3.237 s/op


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                   Mode  Cnt  Score   Error  Units
StreamclusterPatternBenchmark.indexInRange    ss   10  3.175 ± 0.060   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-12_10:30:16/streamcluster/StreamclusterPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 472731.013 bytes/s; standard:  0.133 s, 62837 bytes, 869 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 1266608 bytes; nmethods_code_size: 899328 bytes}
  C2 {speed: 67162.059 bytes/s; standard:  0.090 s, 6224 bytes, 75 methods; osr:  0.004 s, 66 bytes, 2 methods; nmethods_size: 54736 bytes; nmethods_code_size: 35424 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 148209.016 bytes/s; standard:  0.004 s, 610 bytes, 129 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 31000 bytes; nmethods_code_size: 19616 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 482506.779 bytes/s; standard:  0.129 s, 62434 bytes, 741 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 1240368 bytes; nmethods_code_size: 883232 bytes}
  Tier4 {speed: 67162.059 bytes/s; standard:  0.090 s, 6224 bytes, 75 methods; osr:  0.004 s, 66 bytes, 2 methods; nmethods_size: 54736 bytes; nmethods_code_size: 35424 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.229 s
    Standard compilation   :   0.223 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.005 s, Average : 0.002 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.133 s
       Setup time:            0.001 s
       Build HIR:             0.052 s
         Parse:                 0.040 s
         Optimize blocks:       0.000 s
         GVN:                   0.004 s
         Null checks elim:      0.003 s
         Range checks elim:     0.001 s
         Other:                 0.004 s
       Emit LIR:              0.050 s
         LIR Gen:               0.010 s
         Linear Scan:           0.039 s
         Other:                 0.001 s
       Code Emission:         0.015 s
       Code Installation:     0.012 s
       Other:                 0.003 s

    C2 Compile Time:        0.095 s
       Parse:                 0.019 s
       Optimize:              0.044 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.004 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.029 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.000 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.001 s
         Other:                 0.005 s
       Matcher:                    0.010 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.012 s
       Regalloc:              0.024 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.009 s
         Compute Liveness:      0.015 s
         Regalloc Split:        0.006 s
         Postalloc Copy Rem:    0.007 s
         Merge multidefs:       0.001 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.002 s
         Coalesce 2:            0.000 s
         Coalesce 3:            0.000 s
         Cache LRG:             0.000 s
         Simplify:              0.002 s
         Select:                0.002 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.006 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.001 s
         Build OOP maps:        0.001 s
         Fill buffer:           0.001 s
         Code Installation:     0.001 s
         Other:                 0.001 s

  Total compiled methods    :      948 methods
    Standard compilation    :      945 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    69983 bytes
    Standard compilation    :    69268 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   306257 bytes/s

  nmethod code size         :  1326104 bytes
  nmethod total size        :   938272 bytes
