# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dbenchmark.plugin=jvbench.plugin.SocketPlugin -Dsize=10000 -Dtsteps=14
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 67.869 s/op
# Warmup Iteration   2: 60.786 s/op
# Warmup Iteration   3: 60.767 s/op
# Warmup Iteration   4: 60.804 s/op
# Warmup Iteration   5: 60.808 s/op
# Warmup Iteration   6: 60.784 s/op
# Warmup Iteration   7: 60.788 s/op
# Warmup Iteration   8: 60.820 s/op
# Warmup Iteration   9: 60.816 s/op
# Warmup Iteration  10: 60.789 s/op
Iteration   1: 60.785 s/op
                 ·gc.alloc.rate:                   4615.946 MB/sec
                 ·gc.alloc.rate.norm:              296742479576.000 B/op
                 ·gc.churn.G1_Eden_Space:          4610.405 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     296386297856.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 148592.000 B/op
                 ·gc.count:                        88.000 counts
                 ·gc.time:                         316.000 ms

Iteration   2: 60.827 s/op
                 ·gc.alloc.rate:                   4613.669 MB/sec
                 ·gc.alloc.rate.norm:              296742493440.000 B/op
                 ·gc.churn.G1_Eden_Space:          4660.496 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     299754323968.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 127968.000 B/op
                 ·gc.count:                        89.000 counts
                 ·gc.time:                         317.000 ms

Iteration   3: 60.802 s/op
                 ·gc.alloc.rate:                   4615.912 MB/sec
                 ·gc.alloc.rate.norm:              296742472368.000 B/op
                 ·gc.churn.G1_Eden_Space:          4610.372 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     296386297856.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 78432.000 B/op
                 ·gc.count:                        88.000 counts
                 ·gc.time:                         312.000 ms

Iteration   4: 60.796 s/op
                 ·gc.alloc.rate:                   4616.341 MB/sec
                 ·gc.alloc.rate.norm:              296742458584.000 B/op
                 ·gc.churn.G1_Eden_Space:          4610.801 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     296386297856.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 111456.000 B/op
                 ·gc.count:                        88.000 counts
                 ·gc.time:                         314.000 ms

Iteration   5: 60.795 s/op
                 ·gc.alloc.rate:                   4616.307 MB/sec
                 ·gc.alloc.rate.norm:              296742437480.000 B/op
                 ·gc.churn.G1_Eden_Space:          4610.766 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     296386297856.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 140352.000 B/op
                 ·gc.count:                        88.000 counts
                 ·gc.time:                         315.000 ms

Iteration   6: 60.794 s/op
                 ·gc.alloc.rate:                   4615.565 MB/sec
                 ·gc.alloc.rate.norm:              296742437784.000 B/op
                 ·gc.churn.G1_Eden_Space:          4610.025 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     296386297856.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 117648.000 B/op
                 ·gc.count:                        88.000 counts
                 ·gc.time:                         313.000 ms

Iteration   7: 60.806 s/op
                 ·gc.alloc.rate:                   4615.642 MB/sec
                 ·gc.alloc.rate.norm:              296742437384.000 B/op
                 ·gc.churn.G1_Eden_Space:          4610.103 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     296386297856.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 132096.000 B/op
                 ·gc.count:                        88.000 counts
                 ·gc.time:                         315.000 ms

Iteration   8: 60.842 s/op
                 ·gc.alloc.rate:                   4612.553 MB/sec
                 ·gc.alloc.rate.norm:              296742437504.000 B/op
                 ·gc.churn.G1_Eden_Space:          4607.018 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     296386297856.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 161968.000 B/op
                 ·gc.count:                        88.000 counts
                 ·gc.time:                         319.000 ms

Iteration   9: 60.803 s/op
                 ·gc.alloc.rate:                   4615.382 MB/sec
                 ·gc.alloc.rate.norm:              296742457832.000 B/op
                 ·gc.churn.G1_Eden_Space:          4662.227 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     299754323968.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 125904.000 B/op
                 ·gc.count:                        89.000 counts
                 ·gc.time:                         319.000 ms

Iteration  10: 60.504 s/op
                 ·gc.alloc.rate:                   4638.483 MB/sec
                 ·gc.alloc.rate.norm:              296742437408.000 B/op
                 ·gc.churn.G1_Eden_Space:          4632.916 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     296386297856.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 169248.000 B/op
                 ·gc.count:                        88.000 counts
                 ·gc.time:                         317.000 ms


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 7882.605 bytes/s; standard: 11.899 s, 94591 bytes, 1362 methods; osr:  0.186 s, 676 bytes, 2 methods; nmethods_size: 2672720 bytes; nmethods_code_size: 1919712 bytes}
  C2 {speed: 1708.034 bytes/s; standard: 23.536 s, 47393 bytes, 226 methods; osr:  5.676 s, 2502 bytes, 11 methods; nmethods_size: 412344 bytes; nmethods_code_size: 258432 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 4535.224 bytes/s; standard:  0.187 s, 850 bytes, 174 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 41744 bytes; nmethods_code_size: 26432 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 7935.333 bytes/s; standard: 11.712 s, 93741 bytes, 1188 methods; osr:  0.186 s, 676 bytes, 2 methods; nmethods_size: 2630976 bytes; nmethods_code_size: 1893280 bytes}
  Tier4 {speed: 1708.034 bytes/s; standard: 23.536 s, 47393 bytes, 226 methods; osr:  5.676 s, 2502 bytes, 11 methods; nmethods_size: 412344 bytes; nmethods_code_size: 258432 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :  41.298 s
    Standard compilation   :  35.435 s, Average : 0.022 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   5.863 s, Average : 0.451 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       12.066 s
       Setup time:            0.021 s
       Build HIR:             7.908 s
         Parse:                 6.761 s
         Optimize blocks:       0.005 s
         GVN:                   0.380 s
         Null checks elim:      0.313 s
         Range checks elim:     0.197 s
         Other:                 0.252 s
       Emit LIR:              2.455 s
         LIR Gen:               1.227 s
         Linear Scan:           1.164 s
         Other:                 0.064 s
       Code Emission:         0.976 s
       Code Installation:     0.540 s
       Other:                 0.167 s

    C2 Compile Time:       30.984 s
       Parse:                 9.986 s
       Optimize:             10.237 s
         Escape Analysis:       0.725 s
           Conn Graph:            0.512 s
           Macro Eliminate:       0.110 s
         GVN 1:                 1.178 s
         Incremental Inline:    0.245 s
           IdealLoop:             0.000 s
          (IGVN:                  0.033 s)
          (Inline:                0.200 s)
          (Prune Useless:         0.012 s)
           Other:                 0.245 s
         Vector:                0.439 s
           Box elimination:     0.438 s
             IGVN:              0.055 s
             Prune Useless:     0.009 s
         Renumber Live:         0.023 s
         IdealLoop:             5.399 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.138 s
         GVN 2:                 0.032 s
         Macro Expand:          0.765 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.228 s
         Other:                 1.065 s
       Matcher:                    2.109 s
         Post Selection Cleanup:   0.175 s
       Scheduler:                  2.196 s
       Regalloc:              3.504 s
         Ctor Chaitin:          0.006 s
         Build IFG (virt):      0.094 s
         Build IFG (phys):      0.580 s
         Compute Liveness:      1.200 s
         Regalloc Split:        0.658 s
         Postalloc Copy Rem:    0.521 s
         Merge multidefs:       0.078 s
         Fixup Spills:          0.067 s
         Compact:               0.013 s
         Coalesce 1:            0.224 s
         Coalesce 2:            0.086 s
         Coalesce 3:            0.030 s
         Cache LRG:             0.002 s
         Simplify:              0.042 s
         Select:                0.070 s
       Block Ordering:        0.229 s
       Peephole:              0.029 s
       Code Emission:           2.228 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.875 s
         Build OOP maps:        0.221 s
         Fill buffer:           0.774 s
         Code Installation:     0.187 s
         Other:                 0.171 s
       Other:                 0.280 s

  Total compiled methods    :     1601 methods
    Standard compilation    :     1588 methods
    On stack replacement    :       13 methods
  Total compiled bytecodes  :   145162 bytes
    Standard compilation    :   141984 bytes
    On stack replacement    :     3178 bytes
  Average compilation speed :     3515 bytes/s

  nmethod code size         :  3085064 bytes
  nmethod total size        :  2178144 bytes


Result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange":
  N = 10
  mean =     60.775 ±(99.9%) 0.146 s/op

  Histogram, s/op:
    [60.500, 60.525) = 1 
    [60.525, 60.550) = 0 
    [60.550, 60.575) = 0 
    [60.575, 60.600) = 0 
    [60.600, 60.625) = 0 
    [60.625, 60.650) = 0 
    [60.650, 60.675) = 0 
    [60.675, 60.700) = 0 
    [60.700, 60.725) = 0 
    [60.725, 60.750) = 0 
    [60.750, 60.775) = 0 
    [60.775, 60.800) = 4 
    [60.800, 60.825) = 3 
    [60.825, 60.850) = 2 
    [60.850, 60.875) = 0 
    [60.875, 60.900) = 0 

  Percentiles, s/op:
      p(0.0000) =     60.504 s/op
     p(50.0000) =     60.799 s/op
     p(90.0000) =     60.840 s/op
     p(95.0000) =     60.842 s/op
     p(99.0000) =     60.842 s/op
     p(99.9000) =     60.842 s/op
     p(99.9900) =     60.842 s/op
     p(99.9990) =     60.842 s/op
     p(99.9999) =     60.842 s/op
    p(100.0000) =     60.842 s/op

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate":
  4617.580 ±(99.9%) 11.255 MB/sec [Average]
  (min, avg, max) = (4612.553, 4617.580, 4638.483), stdev = 7.444
  CI (99.9%): [4606.325, 4628.835] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate.norm":
  296742454936.000 ±(99.9%) 31606.047 B/op [Average]
  (min, avg, max) = (296742437384.000, 296742454936.000, 296742493440.000), stdev = 20905.444
  CI (99.9%): [296742423329.953, 296742486542.048] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space":
  4622.513 ±(99.9%) 32.844 MB/sec [Average]
  (min, avg, max) = (4607.018, 4622.513, 4662.227), stdev = 21.724
  CI (99.9%): [4589.669, 4655.357] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm":
  297059903078.400 ±(99.9%) 2146965123.814 B/op [Average]
  (min, avg, max) = (296386297856.000, 297059903078.400, 299754323968.000), stdev = 1420084497.712
  CI (99.9%): [294912937954.586, 299206868202.214] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.001, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm":
  131366.400 ±(99.9%) 39609.265 B/op [Average]
  (min, avg, max) = (78432.000, 131366.400, 169248.000), stdev = 26199.076
  CI (99.9%): [91757.135, 170975.665] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.count":
  882.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (88.000, 88.200, 89.000), stdev = 0.422
  CI (99.9%): [882.000, 882.000] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.time":
  3157.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (312.000, 315.700, 319.000), stdev = 2.359
  CI (99.9%): [3157.000, 3157.000] (assumes normal distribution)


# Run complete. Total time: 00:20:57

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                               Mode  Cnt             Score            Error   Units
Jacobi2dPatternBenchmark.indexInRange                                     ss   10            60.775 ±          0.146    s/op
Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate                      ss   10          4617.580 ±         11.255  MB/sec
Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate.norm                 ss   10  296742454936.000 ±      31606.048    B/op
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space             ss   10          4622.513 ±         32.844  MB/sec
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm        ss   10  297059903078.400 ± 2146965123.814    B/op
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space         ss   10             0.002 ±          0.001  MB/sec
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm    ss   10        131366.400 ±      39609.265    B/op
Jacobi2dPatternBenchmark.indexInRange:·gc.count                           ss   10           882.000                   counts
Jacobi2dPatternBenchmark.indexInRange:·gc.time                            ss   10          3157.000                       ms

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/pin_vectorial/2024-05-15_18:25:09/jacobi2d/Jacobi2dPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 8159.605 bytes/s; standard: 10.494 s, 86053 bytes, 1105 methods; osr:  0.131 s, 649 bytes, 1 methods; nmethods_size: 1724408 bytes; nmethods_code_size: 1223584 bytes}
  C2 {speed: 788.984 bytes/s; standard: 12.413 s, 11298 bytes, 92 methods; osr:  2.106 s, 157 bytes, 3 methods; nmethods_size: 97992 bytes; nmethods_code_size: 62720 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 3075.655 bytes/s; standard:  0.220 s, 678 bytes, 143 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 34408 bytes; nmethods_code_size: 21792 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 8267.311 bytes/s; standard: 10.274 s, 85375 bytes, 962 methods; osr:  0.131 s, 649 bytes, 1 methods; nmethods_size: 1690000 bytes; nmethods_code_size: 1201792 bytes}
  Tier4 {speed: 788.984 bytes/s; standard: 12.413 s, 11298 bytes, 92 methods; osr:  2.106 s, 157 bytes, 3 methods; nmethods_size: 97992 bytes; nmethods_code_size: 62720 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :  25.144 s
    Standard compilation   :  22.907 s, Average : 0.019 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   2.237 s, Average : 0.559 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       10.610 s
       Setup time:            0.029 s
       Build HIR:             6.252 s
         Parse:                 5.348 s
         Optimize blocks:       0.005 s
         GVN:                   0.262 s
         Null checks elim:      0.210 s
         Range checks elim:     0.190 s
         Other:                 0.238 s
       Emit LIR:              2.491 s
         LIR Gen:               1.234 s
         Linear Scan:           1.213 s
         Other:                 0.044 s
       Code Emission:         1.123 s
       Code Installation:     0.536 s
       Other:                 0.178 s

    C2 Compile Time:       16.426 s
       Parse:                 3.962 s
       Optimize:              5.795 s
         Escape Analysis:       0.366 s
           Conn Graph:            0.345 s
           Macro Eliminate:       0.002 s
         GVN 1:                 1.008 s
         Incremental Inline:    0.001 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.001 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.010 s
         IdealLoop:             2.945 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.137 s
         GVN 2:                 0.036 s
         Macro Expand:          0.548 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.144 s
         Other:                 0.600 s
       Matcher:                    1.476 s
         Post Selection Cleanup:   0.115 s
       Scheduler:                  1.299 s
       Regalloc:              2.295 s
         Ctor Chaitin:          0.008 s
         Build IFG (virt):      0.063 s
         Build IFG (phys):      0.304 s
         Compute Liveness:      0.625 s
         Regalloc Split:        0.597 s
         Postalloc Copy Rem:    0.248 s
         Merge multidefs:       0.038 s
         Fixup Spills:          0.066 s
         Compact:               0.010 s
         Coalesce 1:            0.170 s
         Coalesce 2:            0.076 s
         Coalesce 3:            0.011 s
         Cache LRG:             0.001 s
         Simplify:              0.039 s
         Select:                0.041 s
       Block Ordering:        0.123 s
       Peephole:              0.021 s
       Code Emission:           1.299 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.543 s
         Build OOP maps:        0.146 s
         Fill buffer:           0.494 s
         Code Installation:     0.039 s
         Other:                 0.078 s
       Other:                 0.095 s

  Total compiled methods    :     1201 methods
    Standard compilation    :     1197 methods
    On stack replacement    :        4 methods
  Total compiled bytecodes  :    98157 bytes
    Standard compilation    :    97351 bytes
    On stack replacement    :      806 bytes
  Average compilation speed :     3903 bytes/s

  nmethod code size         :  1822400 bytes
  nmethod total size        :  1286304 bytes
