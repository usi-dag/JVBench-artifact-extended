# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dbenchmark.plugin=jvbench.plugin.SocketPlugin -Dinput=/blackscholes/input/in_512K.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.blackscholes.BlackscholesPatternBenchmark.pow

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 16.207 s/op
# Warmup Iteration   2: 7.550 s/op
# Warmup Iteration   3: 7.195 s/op
# Warmup Iteration   4: 7.223 s/op
# Warmup Iteration   5: 7.404 s/op
# Warmup Iteration   6: 6.868 s/op
# Warmup Iteration   7: 6.979 s/op
# Warmup Iteration   8: 7.039 s/op
# Warmup Iteration   9: 6.858 s/op
# Warmup Iteration  10: 6.938 s/op
Iteration   1: 6.912 s/op
                 ·gc.alloc.rate:               455.225 MB/sec
                 ·gc.alloc.rate.norm:          3565218944.000 B/op
                 ·gc.churn.G1_Eden_Space:      368.458 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 2885681152.000 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     110.000 ms

Iteration   2: 7.452 s/op
                 ·gc.alloc.rate:               427.202 MB/sec
                 ·gc.alloc.rate.norm:          3565238600.000 B/op
                 ·gc.churn.G1_Eden_Space:      518.662 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 4328521728.000 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     170.000 ms

Iteration   3: 7.006 s/op
                 ·gc.alloc.rate:                   452.327 MB/sec
                 ·gc.alloc.rate.norm:              3565212352.000 B/op
                 ·gc.churn.G1_Eden_Space:          366.113 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2885681152.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4128.000 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         107.000 ms

Iteration   4: 7.145 s/op
                 ·gc.alloc.rate:                   444.279 MB/sec
                 ·gc.alloc.rate.norm:              3565239456.000 B/op
                 ·gc.churn.G1_Eden_Space:          539.395 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4328521728.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 11216.000 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         168.000 ms

Iteration   5: 7.148 s/op
                 ·gc.alloc.rate:                   444.120 MB/sec
                 ·gc.alloc.rate.norm:              3565212352.000 B/op
                 ·gc.churn.G1_Eden_Space:          359.470 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2885681152.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4128.000 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         99.000 ms

Iteration   6: 6.969 s/op
                 ·gc.alloc.rate:               454.150 MB/sec
                 ·gc.alloc.rate.norm:          3565238568.000 B/op
                 ·gc.churn.G1_Eden_Space:      551.379 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 4328521728.000 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     134.000 ms

Iteration   7: 6.981 s/op
                 ·gc.alloc.rate:                   454.275 MB/sec
                 ·gc.alloc.rate.norm:              3565212376.000 B/op
                 ·gc.churn.G1_Eden_Space:          367.690 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     2885681152.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 12368.000 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         115.000 ms

Iteration   8: 6.992 s/op
                 ·gc.alloc.rate:                   453.464 MB/sec
                 ·gc.alloc.rate.norm:              3565238648.000 B/op
                 ·gc.churn.G1_Eden_Space:          550.546 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4328521728.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 15872.000 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         160.000 ms

Iteration   9: 7.077 s/op
                 ·gc.alloc.rate:               448.484 MB/sec
                 ·gc.alloc.rate.norm:          3565212328.000 B/op
                 ·gc.churn.G1_Eden_Space:      363.003 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 2885681152.000 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     85.000 ms

Iteration  10: 6.906 s/op
                 ·gc.alloc.rate:                   458.616 MB/sec
                 ·gc.alloc.rate.norm:              3565238648.000 B/op
                 ·gc.churn.G1_Eden_Space:          556.801 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4328521728.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4128.000 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         144.000 ms


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 4184.135 bytes/s; standard: 24.267 s, 100421 bytes, 1352 methods; osr:  0.251 s, 2167 bytes, 4 methods; nmethods_size: 2493504 bytes; nmethods_code_size: 1785216 bytes}
  C2 {speed: 640.022 bytes/s; standard: 60.826 s, 40041 bytes, 218 methods; osr:  6.570 s, 3094 bytes, 16 methods; nmethods_size: 327440 bytes; nmethods_code_size: 202976 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 2689.844 bytes/s; standard:  0.314 s, 844 bytes, 173 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 41496 bytes; nmethods_code_size: 26272 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 4203.506 bytes/s; standard: 23.954 s, 99577 bytes, 1179 methods; osr:  0.251 s, 2167 bytes, 4 methods; nmethods_size: 2452008 bytes; nmethods_code_size: 1758944 bytes}
  Tier4 {speed: 640.022 bytes/s; standard: 60.826 s, 40041 bytes, 218 methods; osr:  6.570 s, 3094 bytes, 16 methods; nmethods_size: 327440 bytes; nmethods_code_size: 202976 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :  91.951 s
    Standard compilation   :  85.093 s, Average : 0.054 s
    Bailed out compilation :   0.037 s, Average : 0.037 s
    On stack replacement   :   6.821 s, Average : 0.341 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       24.490 s
       Setup time:            0.142 s
       Build HIR:            13.925 s
         Parse:                12.037 s
         Optimize blocks:       0.008 s
         GVN:                   0.711 s
         Null checks elim:      0.395 s
         Range checks elim:     0.305 s
         Other:                 0.469 s
       Emit LIR:              7.073 s
         LIR Gen:               2.439 s
         Linear Scan:           4.561 s
         Other:                 0.073 s
       Code Emission:         1.943 s
       Code Installation:     1.063 s
       Other:                 0.343 s

    C2 Compile Time:       69.744 s
       Parse:                14.614 s
       Optimize:             24.153 s
         Escape Analysis:       1.335 s
           Conn Graph:            0.882 s
           Macro Eliminate:       0.316 s
         GVN 1:                 2.134 s
         Incremental Inline:    0.518 s
           IdealLoop:             0.000 s
          (IGVN:                  0.115 s)
          (Inline:                0.363 s)
          (Prune Useless:         0.034 s)
           Other:                 0.518 s
         Vector:                0.560 s
           Box elimination:     0.559 s
             IGVN:              0.201 s
             Prune Useless:     0.075 s
         Renumber Live:         0.106 s
         IdealLoop:            14.841 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.367 s
         GVN 2:                 0.119 s
         Macro Expand:          1.302 s
         Barrier Expand:        0.001 s
         Graph Reshape:         0.391 s
         Other:                 2.478 s
       Matcher:                    5.304 s
         Post Selection Cleanup:   0.361 s
       Scheduler:                  4.813 s
       Regalloc:             13.939 s
         Ctor Chaitin:          0.015 s
         Build IFG (virt):      0.250 s
         Build IFG (phys):      2.066 s
         Compute Liveness:      4.678 s
         Regalloc Split:        1.534 s
         Postalloc Copy Rem:    3.869 s
         Merge multidefs:       0.270 s
         Fixup Spills:          0.146 s
         Compact:               0.060 s
         Coalesce 1:            0.464 s
         Coalesce 2:            0.180 s
         Coalesce 3:            0.093 s
         Cache LRG:             0.031 s
         Simplify:              0.290 s
         Select:                0.455 s
       Block Ordering:        0.321 s
       Peephole:              0.084 s
       Code Emission:           5.508 s
         Insn Scheduling:       0.000 s
         Shorten branches:      1.215 s
         Build OOP maps:        1.314 s
         Fill buffer:           1.035 s
         Code Installation:     0.171 s
         Other:                 1.772 s
       Other:                 0.837 s

  Total compiled methods    :     1590 methods
    Standard compilation    :     1570 methods
    On stack replacement    :       20 methods
  Total compiled bytecodes  :   145723 bytes
    Standard compilation    :   140462 bytes
    On stack replacement    :     5261 bytes
  Average compilation speed :     1584 bytes/s

  nmethod code size         :  2820944 bytes
  nmethod total size        :  1988192 bytes


Result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow":
  N = 10
  mean =      7.059 ±(99.9%) 0.245 s/op

  Histogram, s/op:
    [6.900, 6.950) = 2 
    [6.950, 7.000) = 3 
    [7.000, 7.050) = 1 
    [7.050, 7.100) = 1 
    [7.100, 7.150) = 2 
    [7.150, 7.200) = 0 
    [7.200, 7.250) = 0 
    [7.250, 7.300) = 0 
    [7.300, 7.350) = 0 
    [7.350, 7.400) = 0 
    [7.400, 7.450) = 0 

  Percentiles, s/op:
      p(0.0000) =      6.906 s/op
     p(50.0000) =      6.999 s/op
     p(90.0000) =      7.421 s/op
     p(95.0000) =      7.452 s/op
     p(99.0000) =      7.452 s/op
     p(99.9000) =      7.452 s/op
     p(99.9900) =      7.452 s/op
     p(99.9990) =      7.452 s/op
     p(99.9999) =      7.452 s/op
    p(100.0000) =      7.452 s/op

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow:·gc.alloc.rate":
  449.214 ±(99.9%) 13.687 MB/sec [Average]
  (min, avg, max) = (427.202, 449.214, 458.616), stdev = 9.053
  CI (99.9%): [435.527, 462.901] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow:·gc.alloc.rate.norm":
  3565226227.200 ±(99.9%) 20233.964 B/op [Average]
  (min, avg, max) = (3565212328.000, 3565226227.200, 3565239456.000), stdev = 13383.514
  CI (99.9%): [3565205993.236, 3565246461.164] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow:·gc.churn.G1_Eden_Space":
  454.152 ±(99.9%) 143.030 MB/sec [Average]
  (min, avg, max) = (359.470, 454.152, 556.801), stdev = 94.606
  CI (99.9%): [311.121, 597.182] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow:·gc.churn.G1_Eden_Space.norm":
  3607101440.000 ±(99.9%) 1149682444.882 B/op [Average]
  (min, avg, max) = (2885681152.000, 3607101440.000, 4328521728.000), stdev = 760443753.445
  CI (99.9%): [2457418995.118, 4756783884.882] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow:·gc.churn.G1_Survivor_Space.norm":
  5184.000 ±(99.9%) 8916.812 B/op [Average]
  (min, avg, max) = (≈ 0, 5184.000, 15872.000), stdev = 5897.919
  CI (99.9%): [≈ 0, 14100.812] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow:·gc.count":
  25.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (2.000, 2.500, 3.000), stdev = 0.527
  CI (99.9%): [25.000, 25.000] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow:·gc.time":
  1292.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (85.000, 129.200, 170.000), stdev = 30.349
  CI (99.9%): [1292.000, 1292.000] (assumes normal distribution)


# Run complete. Total time: 00:03:19

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                          Mode  Cnt           Score            Error   Units
BlackscholesPatternBenchmark.pow                                     ss   10           7.059 ±          0.245    s/op
BlackscholesPatternBenchmark.pow:·gc.alloc.rate                      ss   10         449.214 ±         13.687  MB/sec
BlackscholesPatternBenchmark.pow:·gc.alloc.rate.norm                 ss   10  3565226227.200 ±      20233.964    B/op
BlackscholesPatternBenchmark.pow:·gc.churn.G1_Eden_Space             ss   10         454.152 ±        143.030  MB/sec
BlackscholesPatternBenchmark.pow:·gc.churn.G1_Eden_Space.norm        ss   10  3607101440.000 ± 1149682444.882    B/op
BlackscholesPatternBenchmark.pow:·gc.churn.G1_Survivor_Space         ss   10           0.001 ±          0.001  MB/sec
BlackscholesPatternBenchmark.pow:·gc.churn.G1_Survivor_Space.norm    ss   10        5184.000 ±       8916.812    B/op
BlackscholesPatternBenchmark.pow:·gc.count                           ss   10          25.000                   counts
BlackscholesPatternBenchmark.pow:·gc.time                            ss   10        1292.000                       ms

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/pin_total/2024-05-15_12:22:47/blackscholes/BlackscholesPatternBenchmark.pow.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 5051.380 bytes/s; standard: 16.566 s, 83680 bytes, 1087 methods; osr:  0.128 s, 649 bytes, 1 methods; nmethods_size: 1686392 bytes; nmethods_code_size: 1194528 bytes}
  C2 {speed: 546.444 bytes/s; standard: 18.032 s, 11331 bytes, 92 methods; osr:  2.991 s, 157 bytes, 3 methods; nmethods_size: 103872 bytes; nmethods_code_size: 66432 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 2036.354 bytes/s; standard:  0.328 s, 668 bytes, 141 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 33944 bytes; nmethods_code_size: 21504 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 5111.812 bytes/s; standard: 16.238 s, 83012 bytes, 946 methods; osr:  0.128 s, 649 bytes, 1 methods; nmethods_size: 1652448 bytes; nmethods_code_size: 1173024 bytes}
  Tier4 {speed: 546.444 bytes/s; standard: 18.032 s, 11331 bytes, 92 methods; osr:  2.991 s, 157 bytes, 3 methods; nmethods_size: 103872 bytes; nmethods_code_size: 66432 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :  37.717 s
    Standard compilation   :  34.599 s, Average : 0.029 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   3.119 s, Average : 0.780 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       16.642 s
       Setup time:            0.092 s
       Build HIR:             8.996 s
         Parse:                 7.362 s
         Optimize blocks:       0.007 s
         GVN:                   0.552 s
         Null checks elim:      0.398 s
         Range checks elim:     0.323 s
         Other:                 0.354 s
       Emit LIR:              5.031 s
         LIR Gen:               1.814 s
         Linear Scan:           3.136 s
         Other:                 0.082 s
       Code Emission:         1.522 s
       Code Installation:     0.648 s
       Other:                 0.353 s

    C2 Compile Time:       23.441 s
       Parse:                 4.975 s
       Optimize:              7.631 s
         Escape Analysis:       0.382 s
           Conn Graph:            0.355 s
           Macro Eliminate:       0.003 s
         GVN 1:                 1.115 s
         Incremental Inline:    0.001 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.001 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.014 s
         IdealLoop:             4.147 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.185 s
         GVN 2:                 0.030 s
         Macro Expand:          0.678 s
         Barrier Expand:        0.001 s
         Graph Reshape:         0.203 s
         Other:                 0.860 s
       Matcher:                    2.429 s
         Post Selection Cleanup:   0.153 s
       Scheduler:                  1.917 s
       Regalloc:              4.039 s
         Ctor Chaitin:          0.009 s
         Build IFG (virt):      0.069 s
         Build IFG (phys):      0.625 s
         Compute Liveness:      1.232 s
         Regalloc Split:        0.649 s
         Postalloc Copy Rem:    0.859 s
         Merge multidefs:       0.080 s
         Fixup Spills:          0.049 s
         Compact:               0.013 s
         Coalesce 1:            0.200 s
         Coalesce 2:            0.084 s
         Coalesce 3:            0.022 s
         Cache LRG:             0.007 s
         Simplify:              0.082 s
         Select:                0.136 s
       Block Ordering:        0.195 s
       Peephole:              0.044 s
       Code Emission:           1.740 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.582 s
         Build OOP maps:        0.368 s
         Fill buffer:           0.543 s
         Code Installation:     0.068 s
         Other:                 0.179 s
       Other:                 0.403 s

  Total compiled methods    :     1183 methods
    Standard compilation    :     1179 methods
    On stack replacement    :        4 methods
  Total compiled bytecodes  :    95817 bytes
    Standard compilation    :    95011 bytes
    On stack replacement    :      806 bytes
  Average compilation speed :     2540 bytes/s

  nmethod code size         :  1790264 bytes
  nmethod total size        :  1260960 bytes
