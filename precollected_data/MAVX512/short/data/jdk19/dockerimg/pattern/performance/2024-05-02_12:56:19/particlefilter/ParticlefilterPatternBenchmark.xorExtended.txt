# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19-xor/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dx=128 -Dy=128 -Dz=24 -Dnp=32768
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.particlefilter.ParticlefilterPatternBenchmark.xorExtended

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 6.436 s/op
# Warmup Iteration   2: 6.050 s/op
# Warmup Iteration   3: 6.110 s/op
# Warmup Iteration   4: 3.538 s/op
# Warmup Iteration   5: 3.351 s/op
# Warmup Iteration   6: 3.359 s/op
# Warmup Iteration   7: 3.324 s/op
# Warmup Iteration   8: 3.321 s/op
# Warmup Iteration   9: 3.325 s/op
# Warmup Iteration  10: 3.326 s/op
Iteration   1: 3.326 s/op
Iteration   2: 3.326 s/op
Iteration   3: 3.323 s/op
Iteration   4: 3.324 s/op
Iteration   5: 3.325 s/op
Iteration   6: 3.324 s/op
Iteration   7: 3.326 s/op
Iteration   8: 3.324 s/op
Iteration   9: 3.325 s/op
Iteration  10: 3.324 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 245740.014 bytes/s; standard:  0.244 s, 62162 bytes, 903 methods; osr:  0.028 s, 4610 bytes, 7 methods; nmethods_size: 1688224 bytes; nmethods_code_size: 1193888 bytes}
  C2 {speed: 23222.758 bytes/s; standard:  0.803 s, 19767 bytes, 144 methods; osr:  0.853 s, 18689 bytes, 19 methods; nmethods_size: 356312 bytes; nmethods_code_size: 233024 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 110874.977 bytes/s; standard:  0.005 s, 549 bytes, 114 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 27312 bytes; nmethods_code_size: 17280 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 248243.279 bytes/s; standard:  0.239 s, 61613 bytes, 789 methods; osr:  0.028 s, 4610 bytes, 7 methods; nmethods_size: 1660912 bytes; nmethods_code_size: 1176608 bytes}
  Tier4 {speed: 23222.758 bytes/s; standard:  0.803 s, 19767 bytes, 144 methods; osr:  0.853 s, 18689 bytes, 19 methods; nmethods_size: 356312 bytes; nmethods_code_size: 233024 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   1.929 s
    Standard compilation   :   1.047 s, Average : 0.001 s
    Bailed out compilation :   0.001 s, Average : 0.001 s
    On stack replacement   :   0.881 s, Average : 0.034 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.270 s
       Setup time:            0.001 s
       Build HIR:             0.112 s
         Parse:                 0.090 s
         Optimize blocks:       0.000 s
         GVN:                   0.008 s
         Null checks elim:      0.005 s
         Range checks elim:     0.001 s
         Other:                 0.007 s
       Emit LIR:              0.101 s
         LIR Gen:               0.023 s
         Linear Scan:           0.078 s
         Other:                 0.001 s
       Code Emission:         0.030 s
       Code Installation:     0.023 s
       Other:                 0.004 s

    C2 Compile Time:        1.657 s
       Parse:                 0.135 s
       Optimize:              0.743 s
         Escape Analysis:       0.005 s
           Conn Graph:            0.004 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.029 s
         Incremental Inline:    0.019 s
           IdealLoop:             0.000 s
          (IGVN:                  0.008 s)
          (Inline:                0.006 s)
          (Prune Useless:         0.005 s)
           Other:                 0.019 s
         Vector:                0.011 s
           Box elimination:     0.011 s
             IGVN:              0.003 s
             Prune Useless:     0.004 s
         Renumber Live:         0.003 s
         IdealLoop:             0.603 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.004 s
         GVN 2:                 0.002 s
         Macro Expand:          0.017 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.005 s
         Other:                 0.045 s
       Matcher:                    0.052 s
         Post Selection Cleanup:   0.005 s
       Scheduler:                  0.069 s
       Regalloc:              0.607 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.009 s
         Build IFG (phys):      0.131 s
         Compute Liveness:      0.161 s
         Regalloc Split:        0.053 s
         Postalloc Copy Rem:    0.065 s
         Merge multidefs:       0.022 s
         Fixup Spills:          0.001 s
         Compact:               0.002 s
         Coalesce 1:            0.020 s
         Coalesce 2:            0.020 s
         Coalesce 3:            0.004 s
         Cache LRG:             0.002 s
         Simplify:              0.042 s
         Select:                0.048 s
         Other:                 0.027 s
       Block Ordering:        0.004 s
       Peephole:              0.001 s
       Code Emission:           0.041 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.008 s
         Build OOP maps:        0.016 s
         Fill buffer:           0.011 s
         Code Installation:     0.004 s
         Other:                 0.003 s
       Other:                 0.000 s

  Total compiled methods    :     1073 methods
    Standard compilation    :     1047 methods
    On stack replacement    :       26 methods
  Total compiled bytecodes  :   105228 bytes
    Standard compilation    :    81929 bytes
    On stack replacement    :    23299 bytes
  Average compilation speed :    54562 bytes/s

  nmethod code size         :  2044536 bytes
  nmethod total size        :  1426912 bytes


Result "jvbench.particlefilter.ParticlefilterPatternBenchmark.xorExtended":
  N = 10
  mean =      3.325 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [3.323, 3.323) = 1 
    [3.323, 3.324) = 0 
    [3.324, 3.324) = 1 
    [3.324, 3.324) = 0 
    [3.324, 3.324) = 2 
    [3.324, 3.325) = 1 
    [3.325, 3.325) = 1 
    [3.325, 3.325) = 0 
    [3.325, 3.325) = 1 
    [3.325, 3.326) = 0 
    [3.326, 3.326) = 1 
    [3.326, 3.326) = 1 
    [3.326, 3.326) = 1 
    [3.326, 3.327) = 0 
    [3.327, 3.327) = 0 
    [3.327, 3.327) = 0 

  Percentiles, s/op:
      p(0.0000) =      3.323 s/op
     p(50.0000) =      3.325 s/op
     p(90.0000) =      3.326 s/op
     p(95.0000) =      3.326 s/op
     p(99.0000) =      3.326 s/op
     p(99.9000) =      3.326 s/op
     p(99.9900) =      3.326 s/op
     p(99.9990) =      3.326 s/op
     p(99.9999) =      3.326 s/op
    p(100.0000) =      3.326 s/op


# Run complete. Total time: 00:01:15

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                   Mode  Cnt  Score   Error  Units
ParticlefilterPatternBenchmark.xorExtended    ss   10  3.325 ± 0.001   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-02_12:56:19/particlefilter/ParticlefilterPatternBenchmark.xorExtended.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 330327.857 bytes/s; standard:  0.192 s, 63381 bytes, 871 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1270928 bytes; nmethods_code_size: 902176 bytes}
  C2 {speed: 42260.201 bytes/s; standard:  0.239 s, 10283 bytes, 77 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 94800 bytes; nmethods_code_size: 59712 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 107981.994 bytes/s; standard:  0.006 s, 610 bytes, 129 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 31000 bytes; nmethods_code_size: 19616 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 337002.287 bytes/s; standard:  0.186 s, 62771 bytes, 742 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1239928 bytes; nmethods_code_size: 882560 bytes}
  Tier4 {speed: 42260.201 bytes/s; standard:  0.239 s, 10283 bytes, 77 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 94800 bytes; nmethods_code_size: 59712 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.439 s
    Standard compilation   :   0.431 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.008 s, Average : 0.003 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.192 s
       Setup time:            0.001 s
       Build HIR:             0.070 s
         Parse:                 0.052 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.076 s
         LIR Gen:               0.017 s
         Linear Scan:           0.058 s
         Other:                 0.001 s
       Code Emission:         0.021 s
       Code Installation:     0.018 s
       Other:                 0.005 s

    C2 Compile Time:        0.247 s
       Parse:                 0.027 s
       Optimize:              0.071 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.007 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.047 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.009 s
       Matcher:                    0.017 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.021 s
       Regalloc:              0.093 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.016 s
         Compute Liveness:      0.029 s
         Regalloc Split:        0.010 s
         Postalloc Copy Rem:    0.016 s
         Merge multidefs:       0.007 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.004 s
         Select:                0.005 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.013 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.005 s
         Fill buffer:           0.004 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.001 s

  Total compiled methods    :      951 methods
    Standard compilation    :      948 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    74379 bytes
    Standard compilation    :    73664 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   169534 bytes/s

  nmethod code size         :  1365728 bytes
  nmethod total size        :   961888 bytes
