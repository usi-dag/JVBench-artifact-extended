# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dinput=/blackscholes/input/in_512K.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.533 s/op
# Warmup Iteration   2: 0.250 s/op
# Warmup Iteration   3: 0.228 s/op
# Warmup Iteration   4: 0.234 s/op
# Warmup Iteration   5: 0.319 s/op
# Warmup Iteration   6: 0.286 s/op
# Warmup Iteration   7: 0.191 s/op
# Warmup Iteration   8: 0.193 s/op
# Warmup Iteration   9: 0.191 s/op
# Warmup Iteration  10: 0.194 s/op
Iteration   1: 0.191 s/op
Iteration   2: 0.191 s/op
Iteration   3: 0.191 s/op
Iteration   4: 0.191 s/op
Iteration   5: 0.195 s/op
Iteration   6: 0.191 s/op
Iteration   7: 0.192 s/op
Iteration   8: 0.191 s/op
Iteration   9: 0.195 s/op
Iteration  10: 0.191 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 251669.381 bytes/s; standard:  0.329 s, 83026 bytes, 1132 methods; osr:  0.010 s, 2274 bytes, 4 methods; nmethods_size: 2160088 bytes; nmethods_code_size: 1562656 bytes}
  C2 {speed: 41970.183 bytes/s; standard:  0.880 s, 38365 bytes, 231 methods; osr:  0.108 s, 3116 bytes, 15 methods; nmethods_size: 320360 bytes; nmethods_code_size: 199456 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 104886.818 bytes/s; standard:  0.006 s, 624 bytes, 129 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 30904 bytes; nmethods_code_size: 19552 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 254291.849 bytes/s; standard:  0.323 s, 82402 bytes, 1003 methods; osr:  0.010 s, 2274 bytes, 4 methods; nmethods_size: 2129184 bytes; nmethods_code_size: 1543104 bytes}
  Tier4 {speed: 41970.183 bytes/s; standard:  0.880 s, 38365 bytes, 231 methods; osr:  0.108 s, 3116 bytes, 15 methods; nmethods_size: 320360 bytes; nmethods_code_size: 199456 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   1.328 s
    Standard compilation   :   1.209 s, Average : 0.001 s
    Bailed out compilation :   0.001 s, Average : 0.001 s
    On stack replacement   :   0.119 s, Average : 0.006 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.337 s
       Setup time:            0.001 s
       Build HIR:             0.140 s
         Parse:                 0.113 s
         Optimize blocks:       0.000 s
         GVN:                   0.011 s
         Null checks elim:      0.006 s
         Range checks elim:     0.001 s
         Other:                 0.009 s
       Emit LIR:              0.122 s
         LIR Gen:               0.028 s
         Linear Scan:           0.093 s
         Other:                 0.001 s
       Code Emission:         0.037 s
       Code Installation:     0.030 s
       Other:                 0.006 s

    C2 Compile Time:        0.989 s
       Parse:                 0.149 s
       Optimize:              0.411 s
         Escape Analysis:       0.008 s
           Conn Graph:            0.007 s
           Macro Eliminate:       0.002 s
         GVN 1:                 0.022 s
         Incremental Inline:    0.015 s
           IdealLoop:             0.000 s
          (IGVN:                  0.004 s)
          (Inline:                0.010 s)
          (Prune Useless:         0.002 s)
           Other:                 0.015 s
         Vector:                0.010 s
           Box elimination:     0.010 s
             IGVN:              0.003 s
             Prune Useless:     0.003 s
         Renumber Live:         0.002 s
         IdealLoop:             0.274 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.005 s
         GVN 2:                 0.002 s
         Macro Expand:          0.023 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.006 s
         Other:                 0.043 s
       Matcher:                    0.053 s
         Post Selection Cleanup:   0.005 s
       Scheduler:                  0.063 s
       Regalloc:              0.262 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.005 s
         Build IFG (phys):      0.050 s
         Compute Liveness:      0.082 s
         Regalloc Split:        0.022 s
         Postalloc Copy Rem:    0.042 s
         Merge multidefs:       0.020 s
         Fixup Spills:          0.001 s
         Compact:               0.001 s
         Coalesce 1:            0.008 s
         Coalesce 2:            0.002 s
         Coalesce 3:            0.003 s
         Cache LRG:             0.001 s
         Simplify:              0.010 s
         Select:                0.014 s
       Block Ordering:        0.004 s
       Peephole:              0.001 s
       Code Emission:           0.041 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.007 s
         Build OOP maps:        0.014 s
         Fill buffer:           0.011 s
         Code Installation:     0.005 s
         Other:                 0.003 s
       Other:                 0.000 s

  Total compiled methods    :     1382 methods
    Standard compilation    :     1363 methods
    On stack replacement    :       19 methods
  Total compiled bytecodes  :   126781 bytes
    Standard compilation    :   121391 bytes
    On stack replacement    :     5390 bytes
  Average compilation speed :    95464 bytes/s

  nmethod code size         :  2480448 bytes
  nmethod total size        :  1762112 bytes


Result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange":
  N = 10
  mean =      0.192 ±(99.9%) 0.002 s/op

  Histogram, s/op:
    [0.191, 0.191) = 2 
    [0.191, 0.192) = 5 
    [0.192, 0.192) = 1 
    [0.192, 0.192) = 0 
    [0.192, 0.192) = 0 
    [0.192, 0.193) = 0 
    [0.193, 0.193) = 0 
    [0.193, 0.193) = 0 
    [0.193, 0.193) = 0 
    [0.193, 0.194) = 0 
    [0.194, 0.194) = 0 
    [0.194, 0.194) = 0 
    [0.194, 0.194) = 0 
    [0.194, 0.195) = 0 
    [0.195, 0.195) = 2 
    [0.195, 0.195) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.191 s/op
     p(50.0000) =      0.191 s/op
     p(90.0000) =      0.195 s/op
     p(95.0000) =      0.195 s/op
     p(99.0000) =      0.195 s/op
     p(99.9000) =      0.195 s/op
     p(99.9900) =      0.195 s/op
     p(99.9990) =      0.195 s/op
     p(99.9999) =      0.195 s/op
    p(100.0000) =      0.195 s/op


# Run complete. Total time: 00:00:05

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                  Mode  Cnt  Score   Error  Units
BlackscholesPatternBenchmark.indexInRange    ss   10  0.192 ± 0.002   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-02_10:58:30/blackscholes/BlackscholesPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 332749.863 bytes/s; standard:  0.187 s, 62452 bytes, 872 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1267752 bytes; nmethods_code_size: 900416 bytes}
  C2 {speed: 40041.758 bytes/s; standard:  0.253 s, 10298 bytes, 76 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 95024 bytes; nmethods_code_size: 59712 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 108354.563 bytes/s; standard:  0.006 s, 610 bytes, 129 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 31000 bytes; nmethods_code_size: 19616 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 339615.267 bytes/s; standard:  0.182 s, 61842 bytes, 743 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1236752 bytes; nmethods_code_size: 880800 bytes}
  Tier4 {speed: 40041.758 bytes/s; standard:  0.253 s, 10298 bytes, 76 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 95024 bytes; nmethods_code_size: 59712 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.449 s
    Standard compilation   :   0.442 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.008 s, Average : 0.003 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.189 s
       Setup time:            0.001 s
       Build HIR:             0.069 s
         Parse:                 0.051 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.075 s
         LIR Gen:               0.017 s
         Linear Scan:           0.057 s
         Other:                 0.001 s
       Code Emission:         0.021 s
       Code Installation:     0.018 s
       Other:                 0.005 s

    C2 Compile Time:        0.261 s
       Parse:                 0.027 s
       Optimize:              0.073 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.007 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.049 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.009 s
       Matcher:                    0.017 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.021 s
       Regalloc:              0.105 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.019 s
         Compute Liveness:      0.032 s
         Regalloc Split:        0.011 s
         Postalloc Copy Rem:    0.017 s
         Merge multidefs:       0.007 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.005 s
         Select:                0.006 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.014 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.005 s
         Fill buffer:           0.004 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.001 s

  Total compiled methods    :      952 methods
    Standard compilation    :      949 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    74476 bytes
    Standard compilation    :    73761 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   165718 bytes/s

  nmethod code size         :  1368592 bytes
  nmethod total size        :   964128 bytes
