# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -DN_SWAPS=10000 -DTEMP=2000 -DNETLIST=canneal/input/2500000.nets -DN_STEPS=300
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.canneal.CannealPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 3.438 s/op
# Warmup Iteration   2: 3.166 s/op
# Warmup Iteration   3: 3.519 s/op
# Warmup Iteration   4: 3.776 s/op
# Warmup Iteration   5: 3.793 s/op
# Warmup Iteration   6: 3.814 s/op
# Warmup Iteration   7: 3.808 s/op
# Warmup Iteration   8: 3.724 s/op
# Warmup Iteration   9: 3.099 s/op
# Warmup Iteration  10: 3.084 s/op
Iteration   1: 3.083 s/op
Iteration   2: 3.082 s/op
Iteration   3: 3.081 s/op
Iteration   4: 3.142 s/op
Iteration   5: 3.081 s/op
Iteration   6: 3.085 s/op
Iteration   7: 3.084 s/op
Iteration   8: 3.083 s/op
Iteration   9: 3.090 s/op
Iteration  10: 3.145 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 248344.402 bytes/s; standard:  0.339 s, 83765 bytes, 1094 methods; osr:  0.012 s, 3488 bytes, 7 methods; nmethods_size: 2207032 bytes; nmethods_code_size: 1595456 bytes}
  C2 {speed: 35376.433 bytes/s; standard:  1.667 s, 57682 bytes, 247 methods; osr:  0.276 s, 11068 bytes, 18 methods; nmethods_size: 516576 bytes; nmethods_code_size: 317120 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 109491.292 bytes/s; standard:  0.006 s, 649 bytes, 133 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 31800 bytes; nmethods_code_size: 20096 bytes}
  Tier2 {speed: 185878.912 bytes/s; standard:  0.002 s, 293 bytes, 4 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 6072 bytes; nmethods_code_size: 3488 bytes}
  Tier3 {speed: 251024.478 bytes/s; standard:  0.332 s, 82823 bytes, 957 methods; osr:  0.012 s, 3488 bytes, 7 methods; nmethods_size: 2169160 bytes; nmethods_code_size: 1571872 bytes}
  Tier4 {speed: 35376.433 bytes/s; standard:  1.667 s, 57682 bytes, 247 methods; osr:  0.276 s, 11068 bytes, 18 methods; nmethods_size: 516576 bytes; nmethods_code_size: 317120 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   2.295 s
    Standard compilation   :   2.006 s, Average : 0.001 s
    Bailed out compilation :   0.001 s, Average : 0.001 s
    On stack replacement   :   0.288 s, Average : 0.012 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.349 s
       Setup time:            0.001 s
       Build HIR:             0.145 s
         Parse:                 0.117 s
         Optimize blocks:       0.000 s
         GVN:                   0.011 s
         Null checks elim:      0.006 s
         Range checks elim:     0.002 s
         Other:                 0.010 s
       Emit LIR:              0.129 s
         LIR Gen:               0.029 s
         Linear Scan:           0.099 s
         Other:                 0.001 s
       Code Emission:         0.039 s
       Code Installation:     0.029 s
       Other:                 0.006 s

    C2 Compile Time:        1.944 s
       Parse:                 0.264 s
       Optimize:              0.694 s
         Escape Analysis:       0.021 s
           Conn Graph:            0.015 s
           Macro Eliminate:       0.006 s
         GVN 1:                 0.049 s
         Incremental Inline:    0.014 s
           IdealLoop:             0.000 s
          (IGVN:                  0.003 s)
          (Inline:                0.009 s)
          (Prune Useless:         0.002 s)
           Other:                 0.014 s
         Vector:                0.007 s
           Box elimination:     0.007 s
             IGVN:              0.002 s
             Prune Useless:     0.002 s
         Renumber Live:         0.005 s
         IdealLoop:             0.453 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.007 s
         GVN 2:                 0.004 s
         Macro Expand:          0.024 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.009 s
         Other:                 0.101 s
       Matcher:                    0.118 s
         Post Selection Cleanup:   0.008 s
       Scheduler:                  0.108 s
       Regalloc:              0.540 s
         Ctor Chaitin:          0.001 s
         Build IFG (virt):      0.009 s
         Build IFG (phys):      0.105 s
         Compute Liveness:      0.156 s
         Regalloc Split:        0.046 s
         Postalloc Copy Rem:    0.087 s
         Merge multidefs:       0.032 s
         Fixup Spills:          0.001 s
         Compact:               0.002 s
         Coalesce 1:            0.015 s
         Coalesce 2:            0.006 s
         Coalesce 3:            0.006 s
         Cache LRG:             0.001 s
         Simplify:              0.028 s
         Select:                0.035 s
         Other:                 0.008 s
       Block Ordering:        0.006 s
       Peephole:              0.001 s
       Code Emission:           0.205 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.012 s
         Build OOP maps:        0.023 s
         Fill buffer:           0.020 s
         Code Installation:     0.007 s
         Other:                 0.142 s

  Total compiled methods    :     1366 methods
    Standard compilation    :     1341 methods
    On stack replacement    :       25 methods
  Total compiled bytecodes  :   156003 bytes
    Standard compilation    :   141447 bytes
    On stack replacement    :    14556 bytes
  Average compilation speed :    67960 bytes/s

  nmethod code size         :  2723608 bytes
  nmethod total size        :  1912576 bytes


Result "jvbench.canneal.CannealPatternBenchmark.indexInRange":
  N = 10
  mean =      3.096 ±(99.9%) 0.038 s/op

  Histogram, s/op:
    [3.080, 3.085) = 7 
    [3.085, 3.090) = 0 
    [3.090, 3.095) = 1 
    [3.095, 3.100) = 0 
    [3.100, 3.105) = 0 
    [3.105, 3.110) = 0 
    [3.110, 3.115) = 0 
    [3.115, 3.120) = 0 
    [3.120, 3.125) = 0 
    [3.125, 3.130) = 0 
    [3.130, 3.135) = 0 
    [3.135, 3.140) = 0 
    [3.140, 3.145) = 2 

  Percentiles, s/op:
      p(0.0000) =      3.081 s/op
     p(50.0000) =      3.084 s/op
     p(90.0000) =      3.145 s/op
     p(95.0000) =      3.145 s/op
     p(99.0000) =      3.145 s/op
     p(99.9000) =      3.145 s/op
     p(99.9900) =      3.145 s/op
     p(99.9990) =      3.145 s/op
     p(99.9999) =      3.145 s/op
    p(100.0000) =      3.145 s/op


# Run complete. Total time: 00:01:19

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                             Mode  Cnt  Score   Error  Units
CannealPatternBenchmark.indexInRange    ss   10  3.096 ± 0.038   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-02_10:58:30/canneal/CannealPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 333928.534 bytes/s; standard:  0.186 s, 62299 bytes, 865 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1263168 bytes; nmethods_code_size: 896704 bytes}
  C2 {speed: 42115.195 bytes/s; standard:  0.241 s, 10300 bytes, 77 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 94680 bytes; nmethods_code_size: 59680 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 111226.004 bytes/s; standard:  0.005 s, 610 bytes, 129 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 31000 bytes; nmethods_code_size: 19616 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 344248.837 bytes/s; standard:  0.182 s, 62706 bytes, 738 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1238416 bytes; nmethods_code_size: 881376 bytes}
  Tier4 {speed: 42115.195 bytes/s; standard:  0.241 s, 10300 bytes, 77 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 94680 bytes; nmethods_code_size: 59680 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.436 s
    Standard compilation   :   0.428 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.008 s, Average : 0.003 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.188 s
       Setup time:            0.001 s
       Build HIR:             0.068 s
         Parse:                 0.051 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.075 s
         LIR Gen:               0.017 s
         Linear Scan:           0.057 s
         Other:                 0.001 s
       Code Emission:         0.021 s
       Code Installation:     0.017 s
       Other:                 0.005 s

    C2 Compile Time:        0.248 s
       Parse:                 0.028 s
       Optimize:              0.071 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.007 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.047 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.009 s
       Matcher:                    0.017 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.021 s
       Regalloc:              0.094 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.016 s
         Compute Liveness:      0.029 s
         Regalloc Split:        0.011 s
         Postalloc Copy Rem:    0.016 s
         Merge multidefs:       0.007 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.004 s
         Select:                0.005 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.013 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.005 s
         Fill buffer:           0.004 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.001 s

  Total compiled methods    :      947 methods
    Standard compilation    :      944 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    74331 bytes
    Standard compilation    :    73616 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   170618 bytes/s

  nmethod code size         :  1364096 bytes
  nmethod total size        :   960672 bytes
