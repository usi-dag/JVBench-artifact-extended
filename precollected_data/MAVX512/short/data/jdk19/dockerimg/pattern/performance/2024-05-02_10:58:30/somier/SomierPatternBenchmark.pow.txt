# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dsteps=10 -Dn=128
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.somier.SomierPatternBenchmark.pow

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 5.442 s/op
# Warmup Iteration   2: 4.696 s/op
# Warmup Iteration   3: 4.698 s/op
# Warmup Iteration   4: 4.696 s/op
# Warmup Iteration   5: 4.694 s/op
# Warmup Iteration   6: 4.696 s/op
# Warmup Iteration   7: 4.697 s/op
# Warmup Iteration   8: 4.695 s/op
# Warmup Iteration   9: 4.695 s/op
# Warmup Iteration  10: 4.694 s/op
Iteration   1: 4.696 s/op
Iteration   2: 4.694 s/op
Iteration   3: 4.694 s/op
Iteration   4: 4.693 s/op
Iteration   5: 4.694 s/op
Iteration   6: 4.695 s/op
Iteration   7: 4.694 s/op
Iteration   8: 4.695 s/op
Iteration   9: 4.693 s/op
Iteration  10: 4.693 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 257230.751 bytes/s; standard:  0.232 s, 61240 bytes, 830 methods; osr:  0.016 s, 2631 bytes, 8 methods; nmethods_size: 1623440 bytes; nmethods_code_size: 1148192 bytes}
  C2 {speed: 46338.470 bytes/s; standard:  0.388 s, 18634 bytes, 102 methods; osr:  0.138 s, 5732 bytes, 15 methods; nmethods_size: 157664 bytes; nmethods_code_size: 96992 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 104823.551 bytes/s; standard:  0.005 s, 553 bytes, 115 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 27592 bytes; nmethods_code_size: 17440 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 260539.148 bytes/s; standard:  0.227 s, 60687 bytes, 715 methods; osr:  0.016 s, 2631 bytes, 8 methods; nmethods_size: 1595848 bytes; nmethods_code_size: 1130752 bytes}
  Tier4 {speed: 46338.470 bytes/s; standard:  0.388 s, 18634 bytes, 102 methods; osr:  0.138 s, 5732 bytes, 15 methods; nmethods_size: 157664 bytes; nmethods_code_size: 96992 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.775 s
    Standard compilation   :   0.620 s, Average : 0.001 s
    Bailed out compilation :   0.001 s, Average : 0.001 s
    On stack replacement   :   0.154 s, Average : 0.007 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.247 s
       Setup time:            0.001 s
       Build HIR:             0.100 s
         Parse:                 0.081 s
         Optimize blocks:       0.000 s
         GVN:                   0.008 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.092 s
         LIR Gen:               0.020 s
         Linear Scan:           0.071 s
         Other:                 0.001 s
       Code Emission:         0.028 s
       Code Installation:     0.021 s
       Other:                 0.004 s

    C2 Compile Time:        0.527 s
       Parse:                 0.107 s
       Optimize:              0.216 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.015 s
         Incremental Inline:    0.009 s
           IdealLoop:             0.000 s
          (IGVN:                  0.004 s)
          (Inline:                0.003 s)
          (Prune Useless:         0.002 s)
           Other:                 0.009 s
         Vector:                0.009 s
           Box elimination:     0.009 s
             IGVN:              0.004 s
             Prune Useless:     0.002 s
         Renumber Live:         0.002 s
         IdealLoop:             0.152 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.002 s
         GVN 2:                 0.001 s
         Macro Expand:          0.006 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.003 s
         Other:                 0.017 s
       Matcher:                    0.024 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.030 s
       Regalloc:              0.126 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.024 s
         Compute Liveness:      0.038 s
         Regalloc Split:        0.008 s
         Postalloc Copy Rem:    0.021 s
         Merge multidefs:       0.010 s
         Fixup Spills:          0.000 s
         Compact:               0.001 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.006 s
         Select:                0.008 s
         Other:                 0.001 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.020 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.004 s
         Build OOP maps:        0.007 s
         Fill buffer:           0.005 s
         Code Installation:     0.003 s
         Other:                 0.001 s

  Total compiled methods    :      955 methods
    Standard compilation    :      932 methods
    On stack replacement    :       23 methods
  Total compiled bytecodes  :    88237 bytes
    Standard compilation    :    79874 bytes
    On stack replacement    :     8363 bytes
  Average compilation speed :   113867 bytes/s

  nmethod code size         :  1781104 bytes
  nmethod total size        :  1245184 bytes


Result "jvbench.somier.SomierPatternBenchmark.pow":
  N = 10
  mean =      4.694 ±(99.9%) 0.002 s/op

  Histogram, s/op:
    [4.692, 4.692) = 0 
    [4.692, 4.693) = 0 
    [4.693, 4.693) = 1 
    [4.693, 4.693) = 1 
    [4.693, 4.693) = 0 
    [4.693, 4.694) = 1 
    [4.694, 4.694) = 2 
    [4.694, 4.694) = 0 
    [4.694, 4.694) = 2 
    [4.694, 4.695) = 0 
    [4.695, 4.695) = 0 
    [4.695, 4.695) = 0 
    [4.695, 4.695) = 1 
    [4.695, 4.696) = 1 
    [4.696, 4.696) = 0 

  Percentiles, s/op:
      p(0.0000) =      4.693 s/op
     p(50.0000) =      4.694 s/op
     p(90.0000) =      4.696 s/op
     p(95.0000) =      4.696 s/op
     p(99.0000) =      4.696 s/op
     p(99.9000) =      4.696 s/op
     p(99.9900) =      4.696 s/op
     p(99.9990) =      4.696 s/op
     p(99.9999) =      4.696 s/op
    p(100.0000) =      4.696 s/op


# Run complete. Total time: 00:01:35

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                   Mode  Cnt  Score   Error  Units
SomierPatternBenchmark.pow    ss   10  4.694 ± 0.002   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-02_10:58:30/somier/SomierPatternBenchmark.pow.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 335410.555 bytes/s; standard:  0.189 s, 63405 bytes, 868 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1270880 bytes; nmethods_code_size: 902176 bytes}
  C2 {speed: 45154.675 bytes/s; standard:  0.141 s, 6535 bytes, 73 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 57040 bytes; nmethods_code_size: 37152 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 112463.168 bytes/s; standard:  0.005 s, 610 bytes, 129 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 31000 bytes; nmethods_code_size: 19616 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 341927.826 bytes/s; standard:  0.183 s, 62795 bytes, 739 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1239880 bytes; nmethods_code_size: 882560 bytes}
  Tier4 {speed: 45154.675 bytes/s; standard:  0.141 s, 6535 bytes, 73 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 57040 bytes; nmethods_code_size: 37152 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.337 s
    Standard compilation   :   0.329 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.008 s, Average : 0.003 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.189 s
       Setup time:            0.001 s
       Build HIR:             0.068 s
         Parse:                 0.051 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.076 s
         LIR Gen:               0.017 s
         Linear Scan:           0.058 s
         Other:                 0.001 s
       Code Emission:         0.021 s
       Code Installation:     0.018 s
       Other:                 0.005 s

    C2 Compile Time:        0.148 s
       Parse:                 0.025 s
       Optimize:              0.066 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.006 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.043 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.009 s
       Matcher:                    0.016 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.020 s
       Regalloc:              0.045 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.015 s
         Compute Liveness:      0.027 s
         Regalloc Split:        0.010 s
         Postalloc Copy Rem:    0.014 s
         Merge multidefs:       0.004 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.003 s
         Select:                0.004 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.008 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.003 s
         Fill buffer:           0.002 s
         Code Installation:     0.001 s
         Other:                 0.001 s

  Total compiled methods    :      944 methods
    Standard compilation    :      941 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    70655 bytes
    Standard compilation    :    69940 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   209560 bytes/s

  nmethod code size         :  1327920 bytes
  nmethod total size        :   939328 bytes
