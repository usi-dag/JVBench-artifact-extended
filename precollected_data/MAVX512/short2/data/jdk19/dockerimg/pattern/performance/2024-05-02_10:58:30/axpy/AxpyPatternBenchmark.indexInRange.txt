# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dsize=70000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.axpy.AxpyPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.300 s/op
# Warmup Iteration   2: 0.223 s/op
# Warmup Iteration   3: 0.162 s/op
# Warmup Iteration   4: 0.162 s/op
# Warmup Iteration   5: 0.161 s/op
# Warmup Iteration   6: 0.161 s/op
# Warmup Iteration   7: 0.161 s/op
# Warmup Iteration   8: 0.161 s/op
# Warmup Iteration   9: 0.161 s/op
# Warmup Iteration  10: 0.161 s/op
Iteration   1: 0.161 s/op
Iteration   2: 0.161 s/op
Iteration   3: 0.161 s/op
Iteration   4: 0.161 s/op
Iteration   5: 0.161 s/op
Iteration   6: 0.162 s/op
Iteration   7: 0.161 s/op
Iteration   8: 0.161 s/op
Iteration   9: 0.161 s/op
Iteration  10: 0.161 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 257732.203 bytes/s; standard:  0.215 s, 56770 bytes, 859 methods; osr:  0.010 s, 1149 bytes, 3 methods; nmethods_size: 1399224 bytes; nmethods_code_size: 1011296 bytes}
  C2 {speed: 38192.912 bytes/s; standard:  0.263 s, 10058 bytes, 106 methods; osr:  0.071 s, 2677 bytes, 9 methods; nmethods_size: 109664 bytes; nmethods_code_size: 68896 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 109401.304 bytes/s; standard:  0.005 s, 554 bytes, 115 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 27592 bytes; nmethods_code_size: 17472 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 261151.720 bytes/s; standard:  0.210 s, 56216 bytes, 744 methods; osr:  0.010 s, 1149 bytes, 3 methods; nmethods_size: 1371632 bytes; nmethods_code_size: 993824 bytes}
  Tier4 {speed: 38192.912 bytes/s; standard:  0.263 s, 10058 bytes, 106 methods; osr:  0.071 s, 2677 bytes, 9 methods; nmethods_size: 109664 bytes; nmethods_code_size: 68896 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.559 s
    Standard compilation   :   0.477 s, Average : 0.000 s
    Bailed out compilation :   0.001 s, Average : 0.001 s
    On stack replacement   :   0.081 s, Average : 0.007 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.224 s
       Setup time:            0.001 s
       Build HIR:             0.092 s
         Parse:                 0.074 s
         Optimize blocks:       0.000 s
         GVN:                   0.007 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.082 s
         LIR Gen:               0.018 s
         Linear Scan:           0.062 s
         Other:                 0.001 s
       Code Emission:         0.024 s
       Code Installation:     0.021 s
       Other:                 0.004 s

    C2 Compile Time:        0.335 s
       Parse:                 0.057 s
       Optimize:              0.132 s
         Escape Analysis:       0.002 s
           Conn Graph:            0.002 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.007 s
         Incremental Inline:    0.003 s
           IdealLoop:             0.000 s
          (IGVN:                  0.001 s)
          (Inline:                0.001 s)
          (Prune Useless:         0.001 s)
           Other:                 0.003 s
         Vector:                0.004 s
           Box elimination:     0.004 s
             IGVN:              0.001 s
             Prune Useless:     0.001 s
         Renumber Live:         0.000 s
         IdealLoop:             0.093 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.002 s
         GVN 2:                 0.001 s
         Macro Expand:          0.006 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.013 s
       Matcher:                    0.019 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.022 s
       Regalloc:              0.085 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.016 s
         Compute Liveness:      0.029 s
         Regalloc Split:        0.006 s
         Postalloc Copy Rem:    0.014 s
         Merge multidefs:       0.007 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.003 s
         Select:                0.004 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.015 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.003 s
         Build OOP maps:        0.005 s
         Fill buffer:           0.004 s
         Code Installation:     0.002 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :      977 methods
    Standard compilation    :      965 methods
    On stack replacement    :       12 methods
  Total compiled bytecodes  :    70654 bytes
    Standard compilation    :    66828 bytes
    On stack replacement    :     3826 bytes
  Average compilation speed :   126404 bytes/s

  nmethod code size         :  1508888 bytes
  nmethod total size        :  1080192 bytes


Result "jvbench.axpy.AxpyPatternBenchmark.indexInRange":
  N = 10
  mean =      0.161 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [0.161, 0.161) = 0 
    [0.161, 0.161) = 1 
    [0.161, 0.161) = 0 
    [0.161, 0.161) = 1 
    [0.161, 0.161) = 1 
    [0.161, 0.161) = 1 
    [0.161, 0.161) = 1 
    [0.161, 0.161) = 0 
    [0.161, 0.161) = 0 
    [0.161, 0.161) = 0 
    [0.161, 0.161) = 0 
    [0.161, 0.161) = 0 
    [0.161, 0.161) = 1 
    [0.161, 0.161) = 2 
    [0.161, 0.161) = 0 
    [0.161, 0.162) = 1 
    [0.162, 0.162) = 1 
    [0.162, 0.162) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.161 s/op
     p(50.0000) =      0.161 s/op
     p(90.0000) =      0.162 s/op
     p(95.0000) =      0.162 s/op
     p(99.0000) =      0.162 s/op
     p(99.9000) =      0.162 s/op
     p(99.9900) =      0.162 s/op
     p(99.9990) =      0.162 s/op
     p(99.9999) =      0.162 s/op
    p(100.0000) =      0.162 s/op


# Run complete. Total time: 00:00:07

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                          Mode  Cnt  Score    Error  Units
AxpyPatternBenchmark.indexInRange    ss   10  0.161 ±  0.001   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-02_10:58:30/axpy/AxpyPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 336848.484 bytes/s; standard:  0.191 s, 64510 bytes, 883 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1289784 bytes; nmethods_code_size: 916224 bytes}
  C2 {speed: 41850.815 bytes/s; standard:  0.241 s, 10266 bytes, 75 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 94216 bytes; nmethods_code_size: 59264 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 107066.099 bytes/s; standard:  0.006 s, 610 bytes, 129 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 31000 bytes; nmethods_code_size: 19616 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 343821.786 bytes/s; standard:  0.185 s, 63900 bytes, 754 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1258784 bytes; nmethods_code_size: 896608 bytes}
  Tier4 {speed: 41850.815 bytes/s; standard:  0.241 s, 10266 bytes, 75 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 94216 bytes; nmethods_code_size: 59264 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.440 s
    Standard compilation   :   0.432 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.008 s, Average : 0.003 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.191 s
       Setup time:            0.001 s
       Build HIR:             0.070 s
         Parse:                 0.052 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.076 s
         LIR Gen:               0.017 s
         Linear Scan:           0.058 s
         Other:                 0.001 s
       Code Emission:         0.021 s
       Code Installation:     0.018 s
       Other:                 0.005 s

    C2 Compile Time:        0.249 s
       Parse:                 0.027 s
       Optimize:              0.073 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.007 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.049 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.010 s
       Matcher:                    0.017 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.021 s
       Regalloc:              0.094 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.016 s
         Compute Liveness:      0.029 s
         Regalloc Split:        0.011 s
         Postalloc Copy Rem:    0.016 s
         Merge multidefs:       0.007 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.004 s
         Select:                0.005 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.013 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.005 s
         Fill buffer:           0.004 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.001 s

  Total compiled methods    :      961 methods
    Standard compilation    :      958 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    75491 bytes
    Standard compilation    :    74776 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   171448 bytes/s

  nmethod code size         :  1384000 bytes
  nmethod total size        :   975488 bytes
