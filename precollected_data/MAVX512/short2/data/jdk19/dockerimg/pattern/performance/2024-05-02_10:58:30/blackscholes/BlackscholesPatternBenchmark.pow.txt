# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dinput=/blackscholes/input/in_512K.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.blackscholes.BlackscholesPatternBenchmark.pow

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.616 s/op
# Warmup Iteration   2: 0.437 s/op
# Warmup Iteration   3: 0.351 s/op
# Warmup Iteration   4: 0.402 s/op
# Warmup Iteration   5: 0.366 s/op
# Warmup Iteration   6: 0.449 s/op
# Warmup Iteration   7: 0.449 s/op
# Warmup Iteration   8: 0.379 s/op
# Warmup Iteration   9: 0.352 s/op
# Warmup Iteration  10: 0.350 s/op
Iteration   1: 0.350 s/op
Iteration   2: 0.350 s/op
Iteration   3: 0.353 s/op
Iteration   4: 0.350 s/op
Iteration   5: 0.350 s/op
Iteration   6: 0.350 s/op
Iteration   7: 0.350 s/op
Iteration   8: 0.350 s/op
Iteration   9: 0.353 s/op
Iteration  10: 0.350 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 273959.047 bytes/s; standard:  0.292 s, 79701 bytes, 1055 methods; osr:  0.007 s, 2167 bytes, 4 methods; nmethods_size: 1901440 bytes; nmethods_code_size: 1366272 bytes}
  C2 {speed: 45497.219 bytes/s; standard:  0.704 s, 33530 bytes, 193 methods; osr:  0.089 s, 2530 bytes, 14 methods; nmethods_size: 268384 bytes; nmethods_code_size: 165792 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 103041.574 bytes/s; standard:  0.006 s, 619 bytes, 128 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 30656 bytes; nmethods_code_size: 19392 bytes}
  Tier2 {speed: 165606.483 bytes/s; standard:  0.000 s, 73 bytes, 2 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1320 bytes; nmethods_code_size: 640 bytes}
  Tier3 {speed: 277634.038 bytes/s; standard:  0.285 s, 79009 bytes, 925 methods; osr:  0.007 s, 2167 bytes, 4 methods; nmethods_size: 1869464 bytes; nmethods_code_size: 1346240 bytes}
  Tier4 {speed: 45497.219 bytes/s; standard:  0.704 s, 33530 bytes, 193 methods; osr:  0.089 s, 2530 bytes, 14 methods; nmethods_size: 268384 bytes; nmethods_code_size: 165792 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   1.092 s
    Standard compilation   :   0.995 s, Average : 0.001 s
    Bailed out compilation :   0.001 s, Average : 0.000 s
    On stack replacement   :   0.096 s, Average : 0.005 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.297 s
       Setup time:            0.001 s
       Build HIR:             0.124 s
         Parse:                 0.098 s
         Optimize blocks:       0.000 s
         GVN:                   0.009 s
         Null checks elim:      0.005 s
         Range checks elim:     0.001 s
         Other:                 0.009 s
       Emit LIR:              0.109 s
         LIR Gen:               0.025 s
         Linear Scan:           0.083 s
         Other:                 0.001 s
       Code Emission:         0.031 s
       Code Installation:     0.026 s
       Other:                 0.006 s

    C2 Compile Time:        0.794 s
       Parse:                 0.119 s
       Optimize:              0.311 s
         Escape Analysis:       0.007 s
           Conn Graph:            0.005 s
           Macro Eliminate:       0.002 s
         GVN 1:                 0.019 s
         Incremental Inline:    0.013 s
           IdealLoop:             0.000 s
          (IGVN:                  0.003 s)
          (Inline:                0.009 s)
          (Prune Useless:         0.001 s)
           Other:                 0.013 s
         Vector:                0.006 s
           Box elimination:     0.006 s
             IGVN:              0.002 s
             Prune Useless:     0.001 s
         Renumber Live:         0.001 s
         IdealLoop:             0.201 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.004 s
         GVN 2:                 0.002 s
         Macro Expand:          0.018 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.005 s
         Other:                 0.035 s
       Matcher:                    0.044 s
         Post Selection Cleanup:   0.004 s
       Scheduler:                  0.052 s
       Regalloc:              0.224 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.004 s
         Build IFG (phys):      0.043 s
         Compute Liveness:      0.070 s
         Regalloc Split:        0.019 s
         Postalloc Copy Rem:    0.035 s
         Merge multidefs:       0.017 s
         Fixup Spills:          0.001 s
         Compact:               0.001 s
         Coalesce 1:            0.006 s
         Coalesce 2:            0.002 s
         Coalesce 3:            0.003 s
         Cache LRG:             0.001 s
         Simplify:              0.009 s
         Select:                0.012 s
         Other:                 0.000 s
       Block Ordering:        0.004 s
       Peephole:              0.001 s
       Code Emission:           0.035 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.006 s
         Build OOP maps:        0.012 s
         Fill buffer:           0.009 s
         Code Installation:     0.004 s
         Other:                 0.003 s
       Other:                 0.000 s

  Total compiled methods    :     1266 methods
    Standard compilation    :     1248 methods
    On stack replacement    :       18 methods
  Total compiled bytecodes  :   117928 bytes
    Standard compilation    :   113231 bytes
    On stack replacement    :     4697 bytes
  Average compilation speed :   107957 bytes/s

  nmethod code size         :  2169824 bytes
  nmethod total size        :  1532064 bytes


Result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow":
  N = 10
  mean =      0.351 ±(99.9%) 0.002 s/op

  Histogram, s/op:
    [0.349, 0.349) = 0 
    [0.349, 0.350) = 0 
    [0.350, 0.350) = 0 
    [0.350, 0.350) = 5 
    [0.350, 0.350) = 3 
    [0.350, 0.351) = 0 
    [0.351, 0.351) = 0 
    [0.351, 0.351) = 0 
    [0.351, 0.351) = 0 
    [0.351, 0.352) = 0 
    [0.352, 0.352) = 0 
    [0.352, 0.352) = 0 
    [0.352, 0.352) = 0 
    [0.352, 0.353) = 0 
    [0.353, 0.353) = 0 
    [0.353, 0.353) = 0 
    [0.353, 0.353) = 1 
    [0.353, 0.354) = 1 
    [0.354, 0.354) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.350 s/op
     p(50.0000) =      0.350 s/op
     p(90.0000) =      0.353 s/op
     p(95.0000) =      0.353 s/op
     p(99.0000) =      0.353 s/op
     p(99.9000) =      0.353 s/op
     p(99.9900) =      0.353 s/op
     p(99.9990) =      0.353 s/op
     p(99.9999) =      0.353 s/op
    p(100.0000) =      0.353 s/op


# Run complete. Total time: 00:00:08

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                         Mode  Cnt  Score   Error  Units
BlackscholesPatternBenchmark.pow    ss   10  0.351 ± 0.002   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-02_10:58:30/blackscholes/BlackscholesPatternBenchmark.pow.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 332891.123 bytes/s; standard:  0.189 s, 63033 bytes, 877 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1275696 bytes; nmethods_code_size: 905952 bytes}
  C2 {speed: 44320.832 bytes/s; standard:  0.220 s, 9949 bytes, 73 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 87160 bytes; nmethods_code_size: 55392 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 104024.432 bytes/s; standard:  0.006 s, 610 bytes, 129 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 31000 bytes; nmethods_code_size: 19616 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 343891.588 bytes/s; standard:  0.184 s, 63434 bytes, 749 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1250512 bytes; nmethods_code_size: 890336 bytes}
  Tier4 {speed: 44320.832 bytes/s; standard:  0.220 s, 9949 bytes, 73 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 87160 bytes; nmethods_code_size: 55392 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.418 s
    Standard compilation   :   0.410 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.008 s, Average : 0.003 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.190 s
       Setup time:            0.001 s
       Build HIR:             0.070 s
         Parse:                 0.052 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.076 s
         LIR Gen:               0.017 s
         Linear Scan:           0.058 s
         Other:                 0.001 s
       Code Emission:         0.021 s
       Code Installation:     0.018 s
       Other:                 0.005 s

    C2 Compile Time:        0.228 s
       Parse:                 0.026 s
       Optimize:              0.066 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.006 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.043 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.009 s
       Matcher:                    0.016 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.020 s
       Regalloc:              0.085 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.015 s
         Compute Liveness:      0.027 s
         Regalloc Split:        0.010 s
         Postalloc Copy Rem:    0.015 s
         Merge multidefs:       0.007 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.003 s
         Select:                0.004 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.013 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.004 s
         Fill buffer:           0.004 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :      954 methods
    Standard compilation    :      951 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    74708 bytes
    Standard compilation    :    73993 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   178651 bytes/s

  nmethod code size         :  1368672 bytes
  nmethod total size        :   965344 bytes
