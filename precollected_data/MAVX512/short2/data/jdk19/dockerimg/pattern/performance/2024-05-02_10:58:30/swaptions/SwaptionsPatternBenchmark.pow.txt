# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dms=64 -Dns=16384
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.swaptions.SwaptionsPatternBenchmark.pow

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 3.818 s/op
# Warmup Iteration   2: 3.204 s/op
# Warmup Iteration   3: 3.203 s/op
# Warmup Iteration   4: 3.203 s/op
# Warmup Iteration   5: 3.202 s/op
# Warmup Iteration   6: 3.202 s/op
# Warmup Iteration   7: 3.202 s/op
# Warmup Iteration   8: 3.203 s/op
# Warmup Iteration   9: 3.202 s/op
# Warmup Iteration  10: 3.202 s/op
Iteration   1: 3.203 s/op
Iteration   2: 3.203 s/op
Iteration   3: 3.203 s/op
Iteration   4: 3.203 s/op
Iteration   5: 3.204 s/op
Iteration   6: 3.203 s/op
Iteration   7: 3.203 s/op
Iteration   8: 3.203 s/op
Iteration   9: 3.203 s/op
Iteration  10: 3.203 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 205851.505 bytes/s; standard:  0.406 s, 83060 bytes, 1171 methods; osr:  0.034 s, 7617 bytes, 10 methods; nmethods_size: 2812096 bytes; nmethods_code_size: 2031808 bytes}
  C2 {speed: 37570.721 bytes/s; standard:  0.811 s, 29259 bytes, 195 methods; osr:  0.354 s, 14514 bytes, 22 methods; nmethods_size: 338648 bytes; nmethods_code_size: 203680 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 105923.774 bytes/s; standard:  0.006 s, 623 bytes, 130 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 31088 bytes; nmethods_code_size: 19648 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 207203.813 bytes/s; standard:  0.400 s, 82437 bytes, 1041 methods; osr:  0.034 s, 7617 bytes, 10 methods; nmethods_size: 2781008 bytes; nmethods_code_size: 2012160 bytes}
  Tier4 {speed: 37570.721 bytes/s; standard:  0.811 s, 29259 bytes, 195 methods; osr:  0.354 s, 14514 bytes, 22 methods; nmethods_size: 338648 bytes; nmethods_code_size: 203680 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   1.606 s
    Standard compilation   :   1.218 s, Average : 0.001 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.388 s, Average : 0.012 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.438 s
       Setup time:            0.001 s
       Build HIR:             0.179 s
         Parse:                 0.147 s
         Optimize blocks:       0.000 s
         GVN:                   0.013 s
         Null checks elim:      0.006 s
         Range checks elim:     0.002 s
         Other:                 0.010 s
       Emit LIR:              0.157 s
         LIR Gen:               0.035 s
         Linear Scan:           0.120 s
         Other:                 0.001 s
       Code Emission:         0.048 s
       Code Installation:     0.046 s
       Other:                 0.006 s

    C2 Compile Time:        1.166 s
       Parse:                 0.196 s
       Optimize:              0.457 s
         Escape Analysis:       0.012 s
           Conn Graph:            0.011 s
           Macro Eliminate:       0.001 s
         GVN 1:                 0.025 s
         Incremental Inline:    0.030 s
           IdealLoop:             0.000 s
          (IGVN:                  0.010 s)
          (Inline:                0.016 s)
          (Prune Useless:         0.004 s)
           Other:                 0.030 s
         Vector:                0.016 s
           Box elimination:     0.016 s
             IGVN:              0.005 s
             Prune Useless:     0.004 s
         Renumber Live:         0.003 s
         IdealLoop:             0.303 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.004 s
         GVN 2:                 0.002 s
         Macro Expand:          0.017 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.006 s
         Other:                 0.038 s
       Matcher:                    0.051 s
         Post Selection Cleanup:   0.005 s
       Scheduler:                  0.063 s
       Regalloc:              0.339 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.006 s
         Build IFG (phys):      0.068 s
         Compute Liveness:      0.099 s
         Regalloc Split:        0.029 s
         Postalloc Copy Rem:    0.048 s
         Merge multidefs:       0.021 s
         Fixup Spills:          0.001 s
         Compact:               0.001 s
         Coalesce 1:            0.009 s
         Coalesce 2:            0.007 s
         Coalesce 3:            0.004 s
         Cache LRG:             0.001 s
         Simplify:              0.017 s
         Select:                0.022 s
         Other:                 0.008 s
       Block Ordering:        0.004 s
       Peephole:              0.001 s
       Code Emission:           0.051 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.007 s
         Build OOP maps:        0.015 s
         Fill buffer:           0.012 s
         Code Installation:     0.007 s
         Other:                 0.010 s

  Total compiled methods    :     1398 methods
    Standard compilation    :     1366 methods
    On stack replacement    :       32 methods
  Total compiled bytecodes  :   134450 bytes
    Standard compilation    :   112319 bytes
    On stack replacement    :    22131 bytes
  Average compilation speed :    83739 bytes/s

  nmethod code size         :  3150744 bytes
  nmethod total size        :  2235488 bytes


Result "jvbench.swaptions.SwaptionsPatternBenchmark.pow":
  N = 10
  mean =      3.203 ±(99.9%) 0.001 s/op

  Histogram, s/op:
    [3.202, 3.202) = 0 
    [3.202, 3.202) = 0 
    [3.202, 3.202) = 0 
    [3.202, 3.203) = 0 
    [3.203, 3.203) = 0 
    [3.203, 3.203) = 3 
    [3.203, 3.203) = 1 
    [3.203, 3.203) = 1 
    [3.203, 3.203) = 1 
    [3.203, 3.203) = 1 
    [3.203, 3.203) = 0 
    [3.203, 3.204) = 2 
    [3.204, 3.204) = 0 
    [3.204, 3.204) = 1 
    [3.204, 3.204) = 0 
    [3.204, 3.204) = 0 

  Percentiles, s/op:
      p(0.0000) =      3.203 s/op
     p(50.0000) =      3.203 s/op
     p(90.0000) =      3.204 s/op
     p(95.0000) =      3.204 s/op
     p(99.0000) =      3.204 s/op
     p(99.9000) =      3.204 s/op
     p(99.9900) =      3.204 s/op
     p(99.9990) =      3.204 s/op
     p(99.9999) =      3.204 s/op
    p(100.0000) =      3.204 s/op


# Run complete. Total time: 00:01:05

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                      Mode  Cnt  Score   Error  Units
SwaptionsPatternBenchmark.pow    ss   10  3.203 ± 0.001   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-02_10:58:30/swaptions/SwaptionsPatternBenchmark.pow.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 333985.743 bytes/s; standard:  0.189 s, 63094 bytes, 865 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1263952 bytes; nmethods_code_size: 896896 bytes}
  C2 {speed: 44713.928 bytes/s; standard:  0.220 s, 9999 bytes, 77 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 86992 bytes; nmethods_code_size: 55328 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 108212.648 bytes/s; standard:  0.006 s, 610 bytes, 129 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 31000 bytes; nmethods_code_size: 19616 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 340784.448 bytes/s; standard:  0.183 s, 62489 bytes, 737 methods; osr:  0.002 s, 649 bytes, 1 methods; nmethods_size: 1233360 bytes; nmethods_code_size: 877536 bytes}
  Tier4 {speed: 44713.928 bytes/s; standard:  0.220 s, 9999 bytes, 77 methods; osr:  0.006 s, 66 bytes, 2 methods; nmethods_size: 86992 bytes; nmethods_code_size: 55328 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.417 s
    Standard compilation   :   0.408 s, Average : 0.000 s
    Bailed out compilation :   0.001 s, Average : 0.001 s
    On stack replacement   :   0.008 s, Average : 0.003 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.190 s
       Setup time:            0.001 s
       Build HIR:             0.069 s
         Parse:                 0.052 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.076 s
         LIR Gen:               0.017 s
         Linear Scan:           0.058 s
         Other:                 0.001 s
       Code Emission:         0.021 s
       Code Installation:     0.018 s
       Other:                 0.005 s

    C2 Compile Time:        0.227 s
       Parse:                 0.025 s
       Optimize:              0.066 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.006 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.043 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.009 s
       Matcher:                    0.016 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.020 s
       Regalloc:              0.085 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.015 s
         Compute Liveness:      0.027 s
         Regalloc Split:        0.010 s
         Postalloc Copy Rem:    0.015 s
         Merge multidefs:       0.007 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.003 s
         Select:                0.004 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.013 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.004 s
         Fill buffer:           0.004 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :      946 methods
    Standard compilation    :      943 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    73813 bytes
    Standard compilation    :    73098 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   177073 bytes/s

  nmethod code size         :  1351352 bytes
  nmethod total size        :   952480 bytes
