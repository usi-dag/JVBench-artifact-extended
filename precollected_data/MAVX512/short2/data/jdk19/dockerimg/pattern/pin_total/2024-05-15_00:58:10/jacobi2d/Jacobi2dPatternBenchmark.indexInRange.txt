# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dbenchmark.plugin=jvbench.plugin.SocketPlugin -Dsize=10000 -Dtsteps=14
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 74.221 s/op
# Warmup Iteration   2: 50.179 s/op
# Warmup Iteration   3: 49.930 s/op
# Warmup Iteration   4: 48.345 s/op
# Warmup Iteration   5: 48.865 s/op
# Warmup Iteration   6: 48.077 s/op
# Warmup Iteration   7: 48.089 s/op
# Warmup Iteration   8: 48.082 s/op
# Warmup Iteration   9: 47.971 s/op
# Warmup Iteration  10: 47.972 s/op
Iteration   1: 48.006 s/op
                 ·gc.alloc.rate:                   275.028 MB/sec
                 ·gc.alloc.rate.norm:              13997287192.000 B/op
                 ·gc.churn.G1_Eden_Space:          240.974 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     12264144896.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2064.000 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         505.000 ms

Iteration   2: 48.479 s/op
                 ·gc.alloc.rate:                   272.491 MB/sec
                 ·gc.alloc.rate.norm:              13997306576.000 B/op
                 ·gc.churn.G1_Eden_Space:          255.408 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     13119782912.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 13920.000 B/op
                 ·gc.count:                        4.000 counts
                 ·gc.time:                         557.000 ms

Iteration   3: 49.158 s/op
                 ·gc.alloc.rate:                   268.765 MB/sec
                 ·gc.alloc.rate.norm:              13997329592.000 B/op
                 ·gc.churn.G1_Eden_Space:          361.766 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     18840813568.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 6192.000 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         794.000 ms

Iteration   4: 48.116 s/op
                 ·gc.alloc.rate:                   274.547 MB/sec
                 ·gc.alloc.rate.norm:              13997301128.000 B/op
                 ·gc.churn.G1_Eden_Space:          313.277 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15971909632.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 8240.000 B/op
                 ·gc.count:                        4.000 counts
                 ·gc.time:                         674.000 ms

Iteration   5: 48.633 s/op
                 ·gc.alloc.rate:                   271.656 MB/sec
                 ·gc.alloc.rate.norm:              13997276200.000 B/op
                 ·gc.churn.G1_Eden_Space:          335.703 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     17297309696.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2064.000 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         722.000 ms

Iteration   6: 48.005 s/op
                 ·gc.alloc.rate:                   275.052 MB/sec
                 ·gc.alloc.rate.norm:              13997301072.000 B/op
                 ·gc.churn.G1_Eden_Space:          260.775 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     13270777856.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2344.000 B/op
                 ·gc.count:                        4.000 counts
                 ·gc.time:                         562.000 ms

Iteration   7: 47.972 s/op
                 ·gc.alloc.rate:                   275.347 MB/sec
                 ·gc.alloc.rate.norm:              13997326008.000 B/op
                 ·gc.churn.G1_Eden_Space:          209.900 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10670309376.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4128.000 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         459.000 ms

Iteration   8: 48.721 s/op
                 ·gc.alloc.rate:                   271.122 MB/sec
                 ·gc.alloc.rate.norm:              13997276176.000 B/op
                 ·gc.churn.G1_Eden_Space:          237.552 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     12264144896.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2064.000 B/op
                 ·gc.count:                        3.000 counts
                 ·gc.time:                         511.000 ms

Iteration   9: 48.038 s/op
                 ·gc.alloc.rate:                   274.977 MB/sec
                 ·gc.alloc.rate.norm:              13997301080.000 B/op
                 ·gc.churn.G1_Eden_Space:          257.738 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     13119782912.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 280.000 B/op
                 ·gc.count:                        4.000 counts
                 ·gc.time:                         553.000 ms

Iteration  10: 48.019 s/op
                 ·gc.alloc.rate:               275.054 MB/sec
                 ·gc.alloc.rate.norm:          13997276120.000 B/op
                 ·gc.churn.G1_Eden_Space:      240.997 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 12264144896.000 B/op
                 ·gc.count:                    3.000 counts
                 ·gc.time:                     512.000 ms


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 3437.875 bytes/s; standard: 24.011 s, 83258 bytes, 1221 methods; osr:  0.584 s, 1298 bytes, 3 methods; nmethods_size: 2255456 bytes; nmethods_code_size: 1628000 bytes}
  C2 {speed: 366.926 bytes/s; standard: 58.920 s, 22411 bytes, 165 methods; osr:  9.247 s, 2601 bytes, 9 methods; nmethods_size: 210696 bytes; nmethods_code_size: 136608 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 2688.901 bytes/s; standard:  0.293 s, 789 bytes, 162 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 38832 bytes; nmethods_code_size: 24576 bytes}
  Tier2 {speed: 1130.074 bytes/s; standard:  0.108 s, 122 bytes, 1 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1616 bytes; nmethods_code_size: 928 bytes}
  Tier3 {speed: 3457.257 bytes/s; standard: 23.610 s, 82347 bytes, 1058 methods; osr:  0.584 s, 1298 bytes, 3 methods; nmethods_size: 2215008 bytes; nmethods_code_size: 1602496 bytes}
  Tier4 {speed: 366.926 bytes/s; standard: 58.920 s, 22411 bytes, 165 methods; osr:  9.247 s, 2601 bytes, 9 methods; nmethods_size: 210696 bytes; nmethods_code_size: 136608 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :  92.762 s
    Standard compilation   :  82.931 s, Average : 0.060 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   9.831 s, Average : 0.819 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       24.518 s
       Setup time:            0.126 s
       Build HIR:            13.522 s
         Parse:                11.462 s
         Optimize blocks:       0.050 s
         GVN:                   0.760 s
         Null checks elim:      0.423 s
         Range checks elim:     0.281 s
         Other:                 0.545 s
       Emit LIR:              7.200 s
         LIR Gen:               2.428 s
         Linear Scan:           4.659 s
         Other:                 0.113 s
       Code Emission:         2.262 s
       Code Installation:     1.011 s
       Other:                 0.397 s

    C2 Compile Time:       71.194 s
       Parse:                15.465 s
       Optimize:             25.283 s
         Escape Analysis:       1.038 s
           Conn Graph:            0.836 s
           Macro Eliminate:       0.104 s
         GVN 1:                 1.983 s
         Incremental Inline:    0.563 s
           IdealLoop:             0.000 s
          (IGVN:                  0.230 s)
          (Inline:                0.266 s)
          (Prune Useless:         0.070 s)
           Other:                 0.563 s
         Vector:                0.682 s
           Box elimination:     0.681 s
             IGVN:              0.156 s
             Prune Useless:     0.134 s
         Renumber Live:         0.068 s
         IdealLoop:            16.054 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.401 s
         GVN 2:                 0.111 s
         Macro Expand:          1.473 s
         Barrier Expand:        0.002 s
         Graph Reshape:         0.464 s
         Other:                 2.446 s
       Matcher:                    5.432 s
         Post Selection Cleanup:   0.342 s
       Scheduler:                  4.842 s
       Regalloc:             14.125 s
         Ctor Chaitin:          0.019 s
         Build IFG (virt):      0.220 s
         Build IFG (phys):      2.023 s
         Compute Liveness:      4.800 s
         Regalloc Split:        1.310 s
         Postalloc Copy Rem:    4.327 s
         Merge multidefs:       0.359 s
         Fixup Spills:          0.126 s
         Compact:               0.042 s
         Coalesce 1:            0.466 s
         Coalesce 2:            0.141 s
         Coalesce 3:            0.099 s
         Cache LRG:             0.029 s
         Simplify:              0.245 s
         Select:                0.446 s
       Block Ordering:        0.318 s
       Peephole:              0.099 s
       Code Emission:           4.429 s
         Insn Scheduling:       0.000 s
         Shorten branches:      1.375 s
         Build OOP maps:        1.448 s
         Fill buffer:           1.143 s
         Code Installation:     0.190 s
         Other:                 0.272 s
       Other:                 1.009 s

  Total compiled methods    :     1398 methods
    Standard compilation    :     1386 methods
    On stack replacement    :       12 methods
  Total compiled bytecodes  :   109568 bytes
    Standard compilation    :   105669 bytes
    On stack replacement    :     3899 bytes
  Average compilation speed :     1181 bytes/s

  nmethod code size         :  2466152 bytes
  nmethod total size        :  1764608 bytes


Result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange":
  N = 10
  mean =     48.315 ±(99.9%) 0.620 s/op

  Histogram, s/op:
    [47.000, 47.250) = 0 
    [47.250, 47.500) = 0 
    [47.500, 47.750) = 0 
    [47.750, 48.000) = 1 
    [48.000, 48.250) = 5 
    [48.250, 48.500) = 1 
    [48.500, 48.750) = 2 
    [48.750, 49.000) = 0 
    [49.000, 49.250) = 1 
    [49.250, 49.500) = 0 
    [49.500, 49.750) = 0 

  Percentiles, s/op:
      p(0.0000) =     47.972 s/op
     p(50.0000) =     48.077 s/op
     p(90.0000) =     49.114 s/op
     p(95.0000) =     49.158 s/op
     p(99.0000) =     49.158 s/op
     p(99.9000) =     49.158 s/op
     p(99.9900) =     49.158 s/op
     p(99.9990) =     49.158 s/op
     p(99.9999) =     49.158 s/op
    p(100.0000) =     49.158 s/op

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate":
  273.404 ±(99.9%) 3.427 MB/sec [Average]
  (min, avg, max) = (268.765, 273.404, 275.347), stdev = 2.267
  CI (99.9%): [269.977, 276.831] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate.norm":
  13997298114.400 ±(99.9%) 29521.900 B/op [Average]
  (min, avg, max) = (13997276120.000, 13997298114.400, 13997329592.000), stdev = 19526.909
  CI (99.9%): [13997268592.500, 13997327636.300] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space":
  271.409 ±(99.9%) 73.701 MB/sec [Average]
  (min, avg, max) = (209.900, 271.409, 361.766), stdev = 48.749
  CI (99.9%): [197.708, 345.110] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm":
  13908312064.000 ±(99.9%) 3913924316.313 B/op [Average]
  (min, avg, max) = (10670309376.000, 13908312064.000, 18840813568.000), stdev = 2588818600.342
  CI (99.9%): [9994387747.687, 17822236380.313] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space":
  ≈ 10⁻⁴ MB/sec

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm":
  4129.600 ±(99.9%) 6470.685 B/op [Average]
  (min, avg, max) = (≈ 0, 4129.600, 13920.000), stdev = 4279.957
  CI (99.9%): [≈ 0, 10600.285] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.count":
  38.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.789
  CI (99.9%): [38.000, 38.000] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.time":
  5849.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (459.000, 584.900, 794.000), stdev = 108.417
  CI (99.9%): [5849.000, 5849.000] (assumes normal distribution)


# Run complete. Total time: 00:18:09

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                               Mode  Cnt            Score            Error   Units
Jacobi2dPatternBenchmark.indexInRange                                     ss   10           48.315 ±          0.620    s/op
Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate                      ss   10          273.404 ±          3.427  MB/sec
Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate.norm                 ss   10  13997298114.400 ±      29521.900    B/op
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space             ss   10          271.409 ±         73.701  MB/sec
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm        ss   10  13908312064.000 ± 3913924316.313    B/op
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space         ss   10           ≈ 10⁻⁴                   MB/sec
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm    ss   10         4129.600 ±       6470.685    B/op
Jacobi2dPatternBenchmark.indexInRange:·gc.count                           ss   10           38.000                   counts
Jacobi2dPatternBenchmark.indexInRange:·gc.time                            ss   10         5849.000                       ms

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/pin_total/2024-05-15_00:58:10/jacobi2d/Jacobi2dPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 4047.111 bytes/s; standard: 21.068 s, 85492 bytes, 1100 methods; osr:  0.216 s, 649 bytes, 1 methods; nmethods_size: 1728472 bytes; nmethods_code_size: 1223264 bytes}
  C2 {speed: 440.010 bytes/s; standard: 23.167 s, 11704 bytes, 95 methods; osr:  3.789 s, 157 bytes, 3 methods; nmethods_size: 105544 bytes; nmethods_code_size: 66976 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 2143.353 bytes/s; standard:  0.314 s, 673 bytes, 142 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 34192 bytes; nmethods_code_size: 21664 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 4075.616 bytes/s; standard: 20.754 s, 84819 bytes, 958 methods; osr:  0.216 s, 649 bytes, 1 methods; nmethods_size: 1694280 bytes; nmethods_code_size: 1201600 bytes}
  Tier4 {speed: 440.010 bytes/s; standard: 23.167 s, 11704 bytes, 95 methods; osr:  3.789 s, 157 bytes, 3 methods; nmethods_size: 105544 bytes; nmethods_code_size: 66976 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :  48.284 s
    Standard compilation   :  44.235 s, Average : 0.037 s
    Bailed out compilation :   0.044 s, Average : 0.044 s
    On stack replacement   :   4.005 s, Average : 1.001 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       21.253 s
       Setup time:            0.116 s
       Build HIR:            11.346 s
         Parse:                 9.232 s
         Optimize blocks:       0.011 s
         GVN:                   0.707 s
         Null checks elim:      0.474 s
         Range checks elim:     0.394 s
         Other:                 0.528 s
       Emit LIR:              6.402 s
         LIR Gen:               2.272 s
         Linear Scan:           3.979 s
         Other:                 0.152 s
       Code Emission:         2.037 s
       Code Installation:     0.923 s
       Other:                 0.428 s

    C2 Compile Time:       30.009 s
       Parse:                 6.114 s
       Optimize:              9.986 s
         Escape Analysis:       0.472 s
           Conn Graph:            0.439 s
           Macro Eliminate:       0.002 s
         GVN 1:                 1.459 s
         Incremental Inline:    0.002 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.002 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.019 s
         IdealLoop:             5.364 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.222 s
         GVN 2:                 0.042 s
         Macro Expand:          0.956 s
         Barrier Expand:        0.004 s
         Graph Reshape:         0.272 s
         Other:                 1.174 s
       Matcher:                    3.043 s
         Post Selection Cleanup:   0.197 s
       Scheduler:                  2.640 s
       Regalloc:              4.646 s
         Ctor Chaitin:          0.009 s
         Build IFG (virt):      0.108 s
         Build IFG (phys):      0.633 s
         Compute Liveness:      1.476 s
         Regalloc Split:        0.717 s
         Postalloc Copy Rem:    1.072 s
         Merge multidefs:       0.082 s
         Fixup Spills:          0.069 s
         Compact:               0.011 s
         Coalesce 1:            0.312 s
         Coalesce 2:            0.097 s
         Coalesce 3:            0.041 s
         Cache LRG:             0.006 s
         Simplify:              0.075 s
         Select:                0.138 s
       Block Ordering:        0.254 s
       Peephole:              0.063 s
       Code Emission:           2.431 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.987 s
         Build OOP maps:        0.504 s
         Fill buffer:           0.684 s
         Code Installation:     0.102 s
         Other:                 0.154 s
       Other:                 0.730 s

  Total compiled methods    :     1199 methods
    Standard compilation    :     1195 methods
    On stack replacement    :        4 methods
  Total compiled bytecodes  :    98002 bytes
    Standard compilation    :    97196 bytes
    On stack replacement    :      806 bytes
  Average compilation speed :     2029 bytes/s

  nmethod code size         :  1834016 bytes
  nmethod total size        :  1290240 bytes
