# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dbenchmark.plugin=jvbench.plugin.SocketPlugin -Dk1=3 -Dk2=10 -Ddim=128 -Dchunksize=128 -Dclustersize=10 -Dinfile=streamcluster/input/streamcluster_128_128.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.streamcluster.StreamclusterPatternBenchmark.pow

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: (benchmark timed out, interrupted 4042 times) 1005.212 s/op
# Warmup Iteration   2: (benchmark timed out, interrupted 4010 times) 1002.936 s/op
# Warmup Iteration   3: (benchmark timed out, interrupted 4252 times) 1027.203 s/op
# Warmup Iteration   4: (benchmark timed out, interrupted 4033 times) 1005.276 s/op
# Warmup Iteration   5: (benchmark timed out, interrupted 4422 times) 1044.276 s/op
# Warmup Iteration   6: (benchmark timed out, interrupted 4254 times) 1027.334 s/op
# Warmup Iteration   7: (benchmark timed out, interrupted 4522 times) 1054.321 s/op
# Warmup Iteration   8: (benchmark timed out, interrupted 3980 times) 999.810 s/op
# Warmup Iteration   9: (benchmark timed out, interrupted 3789 times) 980.649 s/op
# Warmup Iteration  10: (benchmark timed out, interrupted 4131 times) 1014.974 s/op
Iteration   1: (benchmark timed out, interrupted 4538 times) 1055.843 s/op
                 ·gc.alloc.rate:      0.063 MB/sec
                 ·gc.alloc.rate.norm: 69238992.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: (benchmark timed out, interrupted 4520 times) 1054.078 s/op
                 ·gc.alloc.rate:      0.063 MB/sec
                 ·gc.alloc.rate.norm: 69172776.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: (benchmark timed out, interrupted 4135 times) 1015.463 s/op
                 ·gc.alloc.rate:      0.065 MB/sec
                 ·gc.alloc.rate.norm: 69113208.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: (benchmark timed out, interrupted 4351 times) 1037.113 s/op
                 ·gc.alloc.rate:      0.064 MB/sec
                 ·gc.alloc.rate.norm: 69232296.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: (benchmark timed out, interrupted 4268 times) 1028.776 s/op
                 ·gc.alloc.rate:      0.064 MB/sec
                 ·gc.alloc.rate.norm: 69232328.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: (benchmark timed out, interrupted 4080 times) 1009.868 s/op
                 ·gc.alloc.rate:      0.065 MB/sec
                 ·gc.alloc.rate.norm: 69232688.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: (benchmark timed out, interrupted 4148 times) 1016.756 s/op
                 ·gc.alloc.rate:      0.065 MB/sec
                 ·gc.alloc.rate.norm: 69232344.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: (benchmark timed out, interrupted 4487 times) 1050.809 s/op
                 ·gc.alloc.rate:      0.063 MB/sec
                 ·gc.alloc.rate.norm: 69232328.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: (benchmark timed out, interrupted 4095 times) 1011.345 s/op
                 ·gc.alloc.rate:      0.065 MB/sec
                 ·gc.alloc.rate.norm: 69173152.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: (benchmark timed out, interrupted 4162 times) 1018.130 s/op
                 ·gc.alloc.rate:      0.065 MB/sec
                 ·gc.alloc.rate.norm: 69232344.000 B/op
                 ·gc.count:           ≈ 0 counts


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 3630.028 bytes/s; standard: 26.603 s, 92485 bytes, 1169 methods; osr:  0.835 s, 7119 bytes, 9 methods; nmethods_size: 2108936 bytes; nmethods_code_size: 1497632 bytes}
  C2 {speed: 502.240 bytes/s; standard: 71.944 s, 31589 bytes, 161 methods; osr: 25.010 s, 17105 bytes, 21 methods; nmethods_size: 404808 bytes; nmethods_code_size: 255328 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 2455.093 bytes/s; standard:  0.318 s, 781 bytes, 159 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 38032 bytes; nmethods_code_size: 24000 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 3643.810 bytes/s; standard: 26.285 s, 91704 bytes, 1010 methods; osr:  0.835 s, 7119 bytes, 9 methods; nmethods_size: 2070904 bytes; nmethods_code_size: 1473632 bytes}
  Tier4 {speed: 502.240 bytes/s; standard: 71.944 s, 31589 bytes, 161 methods; osr: 25.010 s, 17105 bytes, 21 methods; nmethods_size: 404808 bytes; nmethods_code_size: 255328 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   : 124.393 s
    Standard compilation   :  98.547 s, Average : 0.074 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :  25.845 s, Average : 0.862 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       27.363 s
       Setup time:            0.140 s
       Build HIR:            15.432 s
         Parse:                13.026 s
         Optimize blocks:       0.010 s
         GVN:                   0.903 s
         Null checks elim:      0.510 s
         Range checks elim:     0.346 s
         Other:                 0.637 s
       Emit LIR:              7.916 s
         LIR Gen:               2.806 s
         Linear Scan:           5.018 s
         Other:                 0.092 s
       Code Emission:         2.348 s
       Code Installation:     1.001 s
       Other:                 0.525 s

    C2 Compile Time:      100.247 s
       Parse:                15.849 s
       Optimize:             37.044 s
         Escape Analysis:       1.371 s
           Conn Graph:            1.186 s
           Macro Eliminate:       0.098 s
         GVN 1:                 4.143 s
         Incremental Inline:    0.546 s
           IdealLoop:             0.000 s
          (IGVN:                  0.241 s)
          (Inline:                0.208 s)
          (Prune Useless:         0.083 s)
           Other:                 0.546 s
         Vector:                0.527 s
           Box elimination:     0.524 s
             IGVN:              0.111 s
             Prune Useless:     0.084 s
         Renumber Live:         0.262 s
         IdealLoop:            23.293 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.557 s
         GVN 2:                 0.187 s
         Macro Expand:          2.263 s
         Barrier Expand:        0.001 s
         Graph Reshape:         0.573 s
         Other:                 3.321 s
       Matcher:                    7.976 s
         Post Selection Cleanup:   0.543 s
       Scheduler:                  7.420 s
       Regalloc:             24.092 s
         Ctor Chaitin:          0.020 s
         Build IFG (virt):      0.373 s
         Build IFG (phys):      3.960 s
         Compute Liveness:      7.279 s
         Regalloc Split:        2.823 s
         Postalloc Copy Rem:    6.708 s
         Merge multidefs:       0.422 s
         Fixup Spills:          0.148 s
         Compact:               0.054 s
         Coalesce 1:            0.702 s
         Coalesce 2:            0.302 s
         Coalesce 3:            0.187 s
         Cache LRG:             0.044 s
         Simplify:              0.614 s
         Select:                0.913 s
       Block Ordering:        0.454 s
       Peephole:              0.149 s
       Code Emission:           5.985 s
         Insn Scheduling:       0.000 s
         Shorten branches:      1.949 s
         Build OOP maps:        1.908 s
         Fill buffer:           1.690 s
         Code Installation:     0.180 s
         Other:                 0.258 s
       Other:                 1.097 s

  Total compiled methods    :     1360 methods
    Standard compilation    :     1330 methods
    On stack replacement    :       30 methods
  Total compiled bytecodes  :   148298 bytes
    Standard compilation    :   124074 bytes
    On stack replacement    :    24224 bytes
  Average compilation speed :     1192 bytes/s

  nmethod code size         :  2513744 bytes
  nmethod total size        :  1752960 bytes


Result "jvbench.streamcluster.StreamclusterPatternBenchmark.pow":
  N = 10
  mean =   1029.818 ±(99.9%) 27.664 s/op

  Histogram, s/op:
    [1000.000, 1005.000) = 0 
    [1005.000, 1010.000) = 1 
    [1010.000, 1015.000) = 1 
    [1015.000, 1020.000) = 3 
    [1020.000, 1025.000) = 0 
    [1025.000, 1030.000) = 1 
    [1030.000, 1035.000) = 0 
    [1035.000, 1040.000) = 1 
    [1040.000, 1045.000) = 0 
    [1045.000, 1050.000) = 0 
    [1050.000, 1055.000) = 2 

  Percentiles, s/op:
      p(0.0000) =   1009.868 s/op
     p(50.0000) =   1023.453 s/op
     p(90.0000) =   1055.666 s/op
     p(95.0000) =   1055.843 s/op
     p(99.0000) =   1055.843 s/op
     p(99.9000) =   1055.843 s/op
     p(99.9900) =   1055.843 s/op
     p(99.9990) =   1055.843 s/op
     p(99.9999) =   1055.843 s/op
    p(100.0000) =   1055.843 s/op

Secondary result "jvbench.streamcluster.StreamclusterPatternBenchmark.pow:·gc.alloc.rate":
  0.064 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.063, 0.064, 0.065), stdev = 0.001
  CI (99.9%): [0.062, 0.066] (assumes normal distribution)

Secondary result "jvbench.streamcluster.StreamclusterPatternBenchmark.pow:·gc.alloc.rate.norm":
  69209245.600 ±(99.9%) 63654.564 B/op [Average]
  (min, avg, max) = (69113208.000, 69209245.600, 69238992.000), stdev = 42103.553
  CI (99.9%): [69145591.036, 69272900.164] (assumes normal distribution)

Secondary result "jvbench.streamcluster.StreamclusterPatternBenchmark.pow:·gc.count":
  ≈ 0 counts


# Run complete. Total time: 05:41:44

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt         Score       Error   Units
StreamclusterPatternBenchmark.pow                        ss   10      1029.818 ±    27.664    s/op
StreamclusterPatternBenchmark.pow:·gc.alloc.rate         ss   10         0.064 ±     0.002  MB/sec
StreamclusterPatternBenchmark.pow:·gc.alloc.rate.norm    ss   10  69209245.600 ± 63654.564    B/op
StreamclusterPatternBenchmark.pow:·gc.count              ss   10           ≈ 0              counts

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/pin_total/2024-05-15_00:58:10/streamcluster/StreamclusterPatternBenchmark.pow.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 3974.599 bytes/s; standard: 19.544 s, 77841 bytes, 1026 methods; osr:  0.204 s, 649 bytes, 1 methods; nmethods_size: 1573216 bytes; nmethods_code_size: 1116416 bytes}
  C2 {speed: 363.155 bytes/s; standard: 23.207 s, 9693 bytes, 75 methods; osr:  3.916 s, 157 bytes, 3 methods; nmethods_size: 92960 bytes; nmethods_code_size: 59360 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 2311.834 bytes/s; standard:  0.263 s, 608 bytes, 128 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 30784 bytes; nmethods_code_size: 19488 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 3997.041 bytes/s; standard: 19.281 s, 77233 bytes, 898 methods; osr:  0.204 s, 649 bytes, 1 methods; nmethods_size: 1542432 bytes; nmethods_code_size: 1096928 bytes}
  Tier4 {speed: 363.155 bytes/s; standard: 23.207 s, 9693 bytes, 75 methods; osr:  3.916 s, 157 bytes, 3 methods; nmethods_size: 92960 bytes; nmethods_code_size: 59360 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :  46.914 s
    Standard compilation   :  42.751 s, Average : 0.039 s
    Bailed out compilation :   0.043 s, Average : 0.043 s
    On stack replacement   :   4.120 s, Average : 1.030 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       19.707 s
       Setup time:            0.089 s
       Build HIR:            10.725 s
         Parse:                 8.733 s
         Optimize blocks:       0.009 s
         GVN:                   0.663 s
         Null checks elim:      0.385 s
         Range checks elim:     0.384 s
         Other:                 0.551 s
       Emit LIR:              5.589 s
         LIR Gen:               2.040 s
         Linear Scan:           3.479 s
         Other:                 0.070 s
       Code Emission:         1.892 s
       Code Installation:     1.022 s
       Other:                 0.390 s

    C2 Compile Time:       30.461 s
       Parse:                 6.196 s
       Optimize:              9.904 s
         Escape Analysis:       0.548 s
           Conn Graph:            0.517 s
           Macro Eliminate:       0.002 s
         GVN 1:                 1.272 s
         Incremental Inline:    0.001 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.001 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.019 s
         IdealLoop:             5.376 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.220 s
         GVN 2:                 0.045 s
         Macro Expand:          0.919 s
         Barrier Expand:        0.001 s
         Graph Reshape:         0.290 s
         Other:                 1.212 s
       Matcher:                    3.061 s
         Post Selection Cleanup:   0.201 s
       Scheduler:                  2.492 s
       Regalloc:              5.098 s
         Ctor Chaitin:          0.007 s
         Build IFG (virt):      0.120 s
         Build IFG (phys):      0.702 s
         Compute Liveness:      1.578 s
         Regalloc Split:        0.867 s
         Postalloc Copy Rem:    1.057 s
         Merge multidefs:       0.091 s
         Fixup Spills:          0.066 s
         Compact:               0.007 s
         Coalesce 1:            0.320 s
         Coalesce 2:            0.103 s
         Coalesce 3:            0.036 s
         Cache LRG:             0.014 s
         Simplify:              0.092 s
         Select:                0.143 s
       Block Ordering:        0.320 s
       Peephole:              0.062 s
       Code Emission:           2.428 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.774 s
         Build OOP maps:        0.436 s
         Fill buffer:           0.879 s
         Code Installation:     0.074 s
         Other:                 0.266 s
       Other:                 0.827 s

  Total compiled methods    :     1105 methods
    Standard compilation    :     1101 methods
    On stack replacement    :        4 methods
  Total compiled bytecodes  :    88340 bytes
    Standard compilation    :    87534 bytes
    On stack replacement    :      806 bytes
  Average compilation speed :     1883 bytes/s

  nmethod code size         :  1666176 bytes
  nmethod total size        :  1175776 bytes
