# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dbenchmark.plugin=jvbench.plugin.SocketPlugin -Dinput=/blackscholes/input/in_512K.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.blackscholes.BlackscholesPatternBenchmark.pow

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 77.868 s/op
# Warmup Iteration   2: 59.468 s/op
# Warmup Iteration   3: 58.186 s/op
# Warmup Iteration   4: 57.184 s/op
# Warmup Iteration   5: 57.173 s/op
# Warmup Iteration   6: 57.749 s/op
# Warmup Iteration   7: 57.811 s/op
# Warmup Iteration   8: 57.742 s/op
# Warmup Iteration   9: 57.811 s/op
# Warmup Iteration  10: 57.598 s/op
Iteration   1: 57.662 s/op
                 ·gc.alloc.rate:               87.513 MB/sec
                 ·gc.alloc.rate.norm:          5347771904.000 B/op
                 ·gc.churn.G1_Eden_Space:      115.859 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 7079985152.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     42.000 ms

Iteration   2: 58.350 s/op
                 ·gc.alloc.rate:               86.598 MB/sec
                 ·gc.alloc.rate.norm:          5347765288.000 B/op
                 ·gc.churn.G1_Eden_Space:      114.648 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 7079985152.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     39.000 ms

Iteration   3: 57.723 s/op
                 ·gc.alloc.rate:               87.575 MB/sec
                 ·gc.alloc.rate.norm:          5347765256.000 B/op
                 ·gc.churn.G1_Eden_Space:      115.942 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 7079985152.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     41.000 ms

Iteration   4: 57.726 s/op
                 ·gc.alloc.rate:      87.555 MB/sec
                 ·gc.alloc.rate.norm: 5347738712.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 57.716 s/op
                 ·gc.alloc.rate:               87.571 MB/sec
                 ·gc.alloc.rate.norm:          5347765256.000 B/op
                 ·gc.churn.G1_Eden_Space:      115.937 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 7079985152.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     40.000 ms

Iteration   6: 57.692 s/op
                 ·gc.alloc.rate:                   87.558 MB/sec
                 ·gc.alloc.rate.norm:              5347765312.000 B/op
                 ·gc.churn.G1_Eden_Space:          115.919 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7079985152.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 1352.000 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         41.000 ms

Iteration   7: 57.904 s/op
                 ·gc.alloc.rate:               87.281 MB/sec
                 ·gc.alloc.rate.norm:          5347765376.000 B/op
                 ·gc.churn.G1_Eden_Space:      115.552 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 7079985152.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     41.000 ms

Iteration   8: 57.727 s/op
                 ·gc.alloc.rate:      87.555 MB/sec
                 ·gc.alloc.rate.norm: 5347738712.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 57.818 s/op
                 ·gc.alloc.rate:               87.409 MB/sec
                 ·gc.alloc.rate.norm:          5347765256.000 B/op
                 ·gc.churn.G1_Eden_Space:      115.722 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 7079985152.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     41.000 ms

Iteration  10: 57.841 s/op
                 ·gc.alloc.rate:                   87.392 MB/sec
                 ·gc.alloc.rate.norm:              5347765816.000 B/op
                 ·gc.churn.G1_Eden_Space:          115.700 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7079985152.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4768.000 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         42.000 ms


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 2049.831 bytes/s; standard: 49.194 s, 99826 bytes, 1308 methods; osr:  0.563 s, 2167 bytes, 4 methods; nmethods_size: 2463024 bytes; nmethods_code_size: 1765984 bytes}
  C2 {speed: 288.799 bytes/s; standard: 131.573 s, 38820 bytes, 216 methods; osr: 11.111 s, 2387 bytes, 9 methods; nmethods_size: 295768 bytes; nmethods_code_size: 175936 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 1164.390 bytes/s; standard:  0.654 s, 762 bytes, 156 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 37376 bytes; nmethods_code_size: 23648 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 2061.632 bytes/s; standard: 48.540 s, 99064 bytes, 1152 methods; osr:  0.563 s, 2167 bytes, 4 methods; nmethods_size: 2425648 bytes; nmethods_code_size: 1742336 bytes}
  Tier4 {speed: 288.799 bytes/s; standard: 131.573 s, 38820 bytes, 216 methods; osr: 11.111 s, 2387 bytes, 9 methods; nmethods_size: 295768 bytes; nmethods_code_size: 175936 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   : 192.441 s
    Standard compilation   : 180.767 s, Average : 0.119 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :  11.674 s, Average : 0.898 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       49.504 s
       Setup time:            0.329 s
       Build HIR:            28.708 s
         Parse:                25.254 s
         Optimize blocks:       0.018 s
         GVN:                   1.323 s
         Null checks elim:      0.827 s
         Range checks elim:     0.421 s
         Other:                 0.866 s
       Emit LIR:             13.229 s
         LIR Gen:               4.732 s
         Linear Scan:           8.352 s
         Other:                 0.146 s
       Code Emission:         4.339 s
       Code Installation:     2.091 s
       Other:                 0.807 s

    C2 Compile Time:      147.976 s
       Parse:                31.008 s
       Optimize:             53.416 s
         Escape Analysis:       2.417 s
           Conn Graph:            1.929 s
           Macro Eliminate:       2.286 s
         GVN 1:                 4.989 s
         Incremental Inline:    1.679 s
           IdealLoop:             0.000 s
          (IGVN:                  0.364 s)
          (Inline:                1.190 s)
          (Prune Useless:         0.113 s)
           Other:                 1.679 s
         Vector:                1.236 s
           Box elimination:     1.234 s
             IGVN:              0.282 s
             Prune Useless:     0.247 s
         Renumber Live:         0.153 s
         IdealLoop:            30.485 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.741 s
         GVN 2:                 0.272 s
         Macro Expand:          3.090 s
         Barrier Expand:        0.003 s
         Graph Reshape:         1.066 s
         Other:                 7.284 s
       Matcher:                   11.620 s
         Post Selection Cleanup:   0.744 s
       Scheduler:                 10.443 s
       Regalloc:             31.387 s
         Ctor Chaitin:          0.037 s
         Build IFG (virt):      0.579 s
         Build IFG (phys):      5.609 s
         Compute Liveness:      7.813 s
         Regalloc Split:        3.701 s
         Postalloc Copy Rem:    8.194 s
         Merge multidefs:       0.898 s
         Fixup Spills:          0.221 s
         Compact:               0.090 s
         Coalesce 1:            1.264 s
         Coalesce 2:            0.350 s
         Coalesce 3:            0.305 s
         Cache LRG:             0.070 s
         Simplify:              0.783 s
         Select:                1.339 s
         Other:                 0.135 s
       Block Ordering:        0.752 s
       Peephole:              0.134 s
       Code Emission:           7.467 s
         Insn Scheduling:       0.000 s
         Shorten branches:      3.296 s
         Build OOP maps:        1.335 s
         Fill buffer:           2.259 s
         Code Installation:     0.315 s
         Other:                 0.263 s
       Other:                 1.434 s

  Total compiled methods    :     1537 methods
    Standard compilation    :     1524 methods
    On stack replacement    :       13 methods
  Total compiled bytecodes  :   143200 bytes
    Standard compilation    :   138646 bytes
    On stack replacement    :     4554 bytes
  Average compilation speed :      744 bytes/s

  nmethod code size         :  2758792 bytes
  nmethod total size        :  1941920 bytes


Result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow":
  N = 10
  mean =     57.816 ±(99.9%) 0.306 s/op

  Histogram, s/op:
    [57.600, 57.650) = 0 
    [57.650, 57.700) = 2 
    [57.700, 57.750) = 4 
    [57.750, 57.800) = 0 
    [57.800, 57.850) = 2 
    [57.850, 57.900) = 0 
    [57.900, 57.950) = 1 
    [57.950, 58.000) = 0 
    [58.000, 58.050) = 0 
    [58.050, 58.100) = 0 
    [58.100, 58.150) = 0 
    [58.150, 58.200) = 0 
    [58.200, 58.250) = 0 
    [58.250, 58.300) = 0 
    [58.300, 58.350) = 0 
    [58.350, 58.400) = 1 

  Percentiles, s/op:
      p(0.0000) =     57.662 s/op
     p(50.0000) =     57.726 s/op
     p(90.0000) =     58.306 s/op
     p(95.0000) =     58.350 s/op
     p(99.0000) =     58.350 s/op
     p(99.9000) =     58.350 s/op
     p(99.9900) =     58.350 s/op
     p(99.9990) =     58.350 s/op
     p(99.9999) =     58.350 s/op
    p(100.0000) =     58.350 s/op

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow:·gc.alloc.rate":
  87.401 ±(99.9%) 0.451 MB/sec [Average]
  (min, avg, max) = (86.598, 87.401, 87.575), stdev = 0.299
  CI (99.9%): [86.949, 87.852] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow:·gc.alloc.rate.norm":
  5347760688.800 ±(99.9%) 17782.473 B/op [Average]
  (min, avg, max) = (5347738712.000, 5347760688.800, 5347771904.000), stdev = 11762.005
  CI (99.9%): [5347742906.327, 5347778471.273] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow:·gc.churn.G1_Eden_Space":
  92.528 ±(99.9%) 73.730 MB/sec [Average]
  (min, avg, max) = (≈ 0, 92.528, 115.942), stdev = 48.768
  CI (99.9%): [18.798, 166.258] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow:·gc.churn.G1_Eden_Space.norm":
  5663988121.600 ±(99.9%) 4513172016.187 B/op [Average]
  (min, avg, max) = (≈ 0, 5663988121.600, 7079985152.000), stdev = 2985183850.732
  CI (99.9%): [1150816105.413, 10177160137.787] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow:·gc.churn.G1_Survivor_Space":
  ≈ 10⁻⁵ MB/sec

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow:·gc.churn.G1_Survivor_Space.norm":
  612.000 ±(99.9%) 2299.276 B/op [Average]
  (min, avg, max) = (≈ 0, 612.000, 4768.000), stdev = 1520.829
  CI (99.9%): [≈ 0, 2911.276] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow:·gc.count":
  8.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.422
  CI (99.9%): [8.000, 8.000] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow:·gc.time":
  327.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 32.700, 42.000), stdev = 17.257
  CI (99.9%): [327.000, 327.000] (assumes normal distribution)


# Run complete. Total time: 00:21:10

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                          Mode  Cnt           Score            Error   Units
BlackscholesPatternBenchmark.pow                                     ss   10          57.816 ±          0.306    s/op
BlackscholesPatternBenchmark.pow:·gc.alloc.rate                      ss   10          87.401 ±          0.451  MB/sec
BlackscholesPatternBenchmark.pow:·gc.alloc.rate.norm                 ss   10  5347760688.800 ±      17782.473    B/op
BlackscholesPatternBenchmark.pow:·gc.churn.G1_Eden_Space             ss   10          92.528 ±         73.730  MB/sec
BlackscholesPatternBenchmark.pow:·gc.churn.G1_Eden_Space.norm        ss   10  5663988121.600 ± 4513172016.187    B/op
BlackscholesPatternBenchmark.pow:·gc.churn.G1_Survivor_Space         ss   10          ≈ 10⁻⁵                   MB/sec
BlackscholesPatternBenchmark.pow:·gc.churn.G1_Survivor_Space.norm    ss   10         612.000 ±       2299.276    B/op
BlackscholesPatternBenchmark.pow:·gc.count                           ss   10           8.000                   counts
BlackscholesPatternBenchmark.pow:·gc.time                            ss   10         327.000                       ms

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/pin_total/2024-05-15_08:50:42/blackscholes/BlackscholesPatternBenchmark.pow.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 2764.257 bytes/s; standard: 29.930 s, 82844 bytes, 1061 methods; osr:  0.275 s, 649 bytes, 1 methods; nmethods_size: 1669952 bytes; nmethods_code_size: 1180576 bytes}
  C2 {speed: 273.407 bytes/s; standard: 38.765 s, 11647 bytes, 95 methods; osr:  4.409 s, 157 bytes, 3 methods; nmethods_size: 104104 bytes; nmethods_code_size: 65216 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 1105.249 bytes/s; standard:  0.559 s, 618 bytes, 130 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 31312 bytes; nmethods_code_size: 19840 bytes}
  Tier2 {speed: 302.012 bytes/s; standard:  0.324 s, 98 bytes, 1 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 976 bytes; nmethods_code_size: 544 bytes}
  Tier3 {speed: 2823.144 bytes/s; standard: 29.046 s, 82128 bytes, 930 methods; osr:  0.275 s, 649 bytes, 1 methods; nmethods_size: 1637664 bytes; nmethods_code_size: 1160192 bytes}
  Tier4 {speed: 273.407 bytes/s; standard: 38.765 s, 11647 bytes, 95 methods; osr:  4.409 s, 157 bytes, 3 methods; nmethods_size: 104104 bytes; nmethods_code_size: 65216 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :  73.378 s
    Standard compilation   :  68.695 s, Average : 0.059 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   4.684 s, Average : 1.171 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       30.100 s
       Setup time:            0.138 s
       Build HIR:            15.781 s
         Parse:                13.208 s
         Optimize blocks:       0.117 s
         GVN:                   0.806 s
         Null checks elim:      0.568 s
         Range checks elim:     0.469 s
         Other:                 0.613 s
       Emit LIR:              8.571 s
         LIR Gen:               3.661 s
         Linear Scan:           4.778 s
         Other:                 0.132 s
       Code Emission:         3.384 s
       Code Installation:     1.630 s
       Other:                 0.595 s

    C2 Compile Time:       48.689 s
       Parse:                10.145 s
       Optimize:             16.841 s
         Escape Analysis:       1.036 s
           Conn Graph:            0.958 s
           Macro Eliminate:       0.004 s
         GVN 1:                 2.259 s
         Incremental Inline:    0.014 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.014 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.027 s
         IdealLoop:             9.197 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.310 s
         GVN 2:                 0.065 s
         Macro Expand:          1.617 s
         Barrier Expand:        0.001 s
         Graph Reshape:         0.550 s
         Other:                 1.766 s
       Matcher:                    4.888 s
         Post Selection Cleanup:   0.336 s
       Scheduler:                  3.896 s
       Regalloc:              7.303 s
         Ctor Chaitin:          0.010 s
         Build IFG (virt):      0.203 s
         Build IFG (phys):      1.048 s
         Compute Liveness:      1.898 s
         Regalloc Split:        1.521 s
         Postalloc Copy Rem:    1.263 s
         Merge multidefs:       0.207 s
         Fixup Spills:          0.134 s
         Compact:               0.014 s
         Coalesce 1:            0.484 s
         Coalesce 2:            0.213 s
         Coalesce 3:            0.056 s
         Cache LRG:             0.008 s
         Simplify:              0.128 s
         Select:                0.228 s
       Block Ordering:        0.415 s
       Peephole:              0.072 s
       Code Emission:           3.691 s
         Insn Scheduling:       0.000 s
         Shorten branches:      1.733 s
         Build OOP maps:        0.408 s
         Fill buffer:           1.157 s
         Code Installation:     0.166 s
         Other:                 0.227 s
       Other:                 1.273 s

  Total compiled methods    :     1160 methods
    Standard compilation    :     1156 methods
    On stack replacement    :        4 methods
  Total compiled bytecodes  :    95297 bytes
    Standard compilation    :    94491 bytes
    On stack replacement    :      806 bytes
  Average compilation speed :     1298 bytes/s

  nmethod code size         :  1774056 bytes
  nmethod total size        :  1245792 bytes
