# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dbenchmark.plugin=jvbench.plugin.SocketPlugin -Dsize=10000 -Dtsteps=14
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: (benchmark timed out, interrupted 46418 times) 5238.303 s/op
# Warmup Iteration   2: (benchmark timed out, interrupted 47260 times) 5335.288 s/op
# Warmup Iteration   3: (benchmark timed out, interrupted 47104 times) 5319.847 s/op
# Warmup Iteration   4: (benchmark timed out, interrupted 47135 times) 5323.076 s/op
# Warmup Iteration   5: (benchmark timed out, interrupted 47114 times) 5320.980 s/op
# Warmup Iteration   6: (benchmark timed out, interrupted 46025 times) 5212.060 s/op
# Warmup Iteration   7: (benchmark timed out, interrupted 46027 times) 5211.927 s/op
# Warmup Iteration   8: (benchmark timed out, interrupted 46008 times) 5210.075 s/op
# Warmup Iteration   9: (benchmark timed out, interrupted 45994 times) 5208.530 s/op
# Warmup Iteration  10: (benchmark timed out, interrupted 46008 times) 5210.139 s/op
Iteration   1: (benchmark timed out, interrupted 46003 times) 5209.460 s/op
                 ·gc.alloc.rate:                   116.809 MB/sec
                 ·gc.alloc.rate.norm:              638146029920.000 B/op
                 ·gc.churn.G1_Eden_Space:          117.771 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     643406233600.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 85264.000 B/op
                 ·gc.count:                        65.000 counts
                 ·gc.time:                         2555.000 ms

Iteration   2: (benchmark timed out, interrupted 46039 times) 5213.210 s/op
                 ·gc.alloc.rate:                   116.727 MB/sec
                 ·gc.alloc.rate.norm:              638146002144.000 B/op
                 ·gc.churn.G1_Eden_Space:          115.878 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     633507676160.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 74304.000 B/op
                 ·gc.count:                        64.000 counts
                 ·gc.time:                         2500.000 ms

Iteration   3: (benchmark timed out, interrupted 45992 times) 5208.576 s/op
                 ·gc.alloc.rate:                   116.831 MB/sec
                 ·gc.alloc.rate.norm:              638146022904.000 B/op
                 ·gc.churn.G1_Eden_Space:          117.794 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     643406233600.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 73648.000 B/op
                 ·gc.count:                        65.000 counts
                 ·gc.time:                         2557.000 ms

Iteration   4: (benchmark timed out, interrupted 46026 times) 5211.925 s/op
                 ·gc.alloc.rate:                   116.756 MB/sec
                 ·gc.alloc.rate.norm:              638146002232.000 B/op
                 ·gc.churn.G1_Eden_Space:          115.907 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     633507676160.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 78432.000 B/op
                 ·gc.count:                        64.000 counts
                 ·gc.time:                         2518.000 ms

Iteration   5: (benchmark timed out, interrupted 46009 times) 5210.221 s/op
                 ·gc.alloc.rate:                   116.794 MB/sec
                 ·gc.alloc.rate.norm:              638146022960.000 B/op
                 ·gc.churn.G1_Eden_Space:          117.757 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     643406233600.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 69192.000 B/op
                 ·gc.count:                        65.000 counts
                 ·gc.time:                         2539.000 ms

Iteration   6: (benchmark timed out, interrupted 46004 times) 5209.810 s/op
                 ·gc.alloc.rate:                   116.802 MB/sec
                 ·gc.alloc.rate.norm:              638146002064.000 B/op
                 ·gc.churn.G1_Eden_Space:          115.953 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     633507676160.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 79408.000 B/op
                 ·gc.count:                        64.000 counts
                 ·gc.time:                         2514.000 ms

Iteration   7: (benchmark timed out, interrupted 46006 times) 5210.255 s/op
                 ·gc.alloc.rate:                   116.793 MB/sec
                 ·gc.alloc.rate.norm:              638146022936.000 B/op
                 ·gc.churn.G1_Eden_Space:          117.756 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     643406233600.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 66376.000 B/op
                 ·gc.count:                        65.000 counts
                 ·gc.time:                         2538.000 ms

Iteration   8: (benchmark timed out, interrupted 46018 times) 5211.249 s/op
                 ·gc.alloc.rate:                   116.771 MB/sec
                 ·gc.alloc.rate.norm:              638146002136.000 B/op
                 ·gc.churn.G1_Eden_Space:          115.922 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     633507676160.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 68112.000 B/op
                 ·gc.count:                        64.000 counts
                 ·gc.time:                         2494.000 ms

Iteration   9: (benchmark timed out, interrupted 46035 times) 5213.021 s/op
                 ·gc.alloc.rate:                   116.731 MB/sec
                 ·gc.alloc.rate.norm:              638146003904.000 B/op
                 ·gc.churn.G1_Eden_Space:          117.694 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     643406233600.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 88752.000 B/op
                 ·gc.count:                        65.000 counts
                 ·gc.time:                         2554.000 ms

Iteration  10: (benchmark timed out, interrupted 46037 times) 5212.904 s/op
                 ·gc.alloc.rate:                   116.734 MB/sec
                 ·gc.alloc.rate.norm:              638145977328.000 B/op
                 ·gc.churn.G1_Eden_Space:          115.885 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     633507676160.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 89080.000 B/op
                 ·gc.count:                        64.000 counts
                 ·gc.time:                         2494.000 ms


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 2388.775 bytes/s; standard: 40.401 s, 96364 bytes, 1343 methods; osr:  0.981 s, 2488 bytes, 4 methods; nmethods_size: 2667160 bytes; nmethods_code_size: 1911168 bytes}
  C2 {speed: 471.768 bytes/s; standard: 111.447 s, 53935 bytes, 243 methods; osr: 14.816 s, 5632 bytes, 8 methods; nmethods_size: 461712 bytes; nmethods_code_size: 272608 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 1797.306 bytes/s; standard:  0.430 s, 773 bytes, 158 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 37880 bytes; nmethods_code_size: 23936 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 2394.987 bytes/s; standard: 39.971 s, 95591 bytes, 1185 methods; osr:  0.981 s, 2488 bytes, 4 methods; nmethods_size: 2629280 bytes; nmethods_code_size: 1887232 bytes}
  Tier4 {speed: 471.768 bytes/s; standard: 111.447 s, 53935 bytes, 243 methods; osr: 14.816 s, 5632 bytes, 8 methods; nmethods_size: 461712 bytes; nmethods_code_size: 272608 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   : 167.888 s
    Standard compilation   : 151.848 s, Average : 0.096 s
    Bailed out compilation :   0.243 s, Average : 0.243 s
    On stack replacement   :  15.797 s, Average : 1.316 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       41.458 s
       Setup time:            0.220 s
       Build HIR:            23.031 s
         Parse:                19.460 s
         Optimize blocks:       0.100 s
         GVN:                   1.459 s
         Null checks elim:      0.791 s
         Range checks elim:     0.423 s
         Other:                 0.798 s
       Emit LIR:             11.689 s
         LIR Gen:               4.610 s
         Linear Scan:           6.968 s
         Other:                 0.112 s
       Code Emission:         4.040 s
       Code Installation:     1.839 s
       Other:                 0.638 s

    C2 Compile Time:      132.109 s
       Parse:                26.699 s
       Optimize:             44.359 s
         Escape Analysis:       2.691 s
           Conn Graph:            1.849 s
           Macro Eliminate:       0.590 s
         GVN 1:                 7.053 s
         Incremental Inline:    0.452 s
           IdealLoop:             0.000 s
          (IGVN:                  0.177 s)
          (Inline:                0.258 s)
          (Prune Useless:         0.099 s)
           Other:                 0.452 s
         Vector:                1.104 s
           Box elimination:     1.102 s
             IGVN:              0.198 s
             Prune Useless:     0.165 s
         Renumber Live:         0.266 s
         IdealLoop:            23.295 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.631 s
         GVN 2:                 0.222 s
         Macro Expand:          2.868 s
         Barrier Expand:        0.003 s
         Graph Reshape:         0.857 s
         Other:                 4.917 s
       Matcher:                   10.381 s
         Post Selection Cleanup:   0.639 s
       Scheduler:                  9.967 s
       Regalloc:             30.764 s
         Ctor Chaitin:          0.025 s
         Build IFG (virt):      0.525 s
         Build IFG (phys):      5.302 s
         Compute Liveness:      7.404 s
         Regalloc Split:        3.575 s
         Postalloc Copy Rem:    8.564 s
         Merge multidefs:       0.743 s
         Fixup Spills:          0.191 s
         Compact:               0.082 s
         Coalesce 1:            1.008 s
         Coalesce 2:            0.461 s
         Coalesce 3:            0.291 s
         Cache LRG:             0.067 s
         Simplify:              0.865 s
         Select:                1.364 s
         Other:                 0.300 s
       Block Ordering:        0.734 s
       Peephole:              0.103 s
       Code Emission:           7.322 s
         Insn Scheduling:       0.000 s
         Shorten branches:      2.784 s
         Build OOP maps:        1.434 s
         Fill buffer:           2.172 s
         Code Installation:     0.437 s
         Other:                 0.495 s
       Other:                 1.343 s

  Total compiled methods    :     1598 methods
    Standard compilation    :     1586 methods
    On stack replacement    :       12 methods
  Total compiled bytecodes  :   158419 bytes
    Standard compilation    :   150299 bytes
    On stack replacement    :     8120 bytes
  Average compilation speed :      943 bytes/s

  nmethod code size         :  3128872 bytes
  nmethod total size        :  2183776 bytes


Result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange":
  N = 10
  mean =   5211.063 ±(99.9%) 2.484 s/op

  Histogram, s/op:
    [5208.000, 5208.500) = 0 
    [5208.500, 5209.000) = 1 
    [5209.000, 5209.500) = 1 
    [5209.500, 5210.000) = 1 
    [5210.000, 5210.500) = 2 
    [5210.500, 5211.000) = 0 
    [5211.000, 5211.500) = 1 
    [5211.500, 5212.000) = 1 
    [5212.000, 5212.500) = 0 
    [5212.500, 5213.000) = 1 
    [5213.000, 5213.500) = 2 

  Percentiles, s/op:
      p(0.0000) =   5208.576 s/op
     p(50.0000) =   5210.752 s/op
     p(90.0000) =   5213.191 s/op
     p(95.0000) =   5213.210 s/op
     p(99.0000) =   5213.210 s/op
     p(99.9000) =   5213.210 s/op
     p(99.9900) =   5213.210 s/op
     p(99.9990) =   5213.210 s/op
     p(99.9999) =   5213.210 s/op
    p(100.0000) =   5213.210 s/op

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate":
  116.775 ±(99.9%) 0.055 MB/sec [Average]
  (min, avg, max) = (116.727, 116.775, 116.831), stdev = 0.037
  CI (99.9%): [116.720, 116.830] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate.norm":
  638146008852.800 ±(99.9%) 23835.206 B/op [Average]
  (min, avg, max) = (638145977328.000, 638146008852.800, 638146029920.000), stdev = 15765.513
  CI (99.9%): [638145985017.594, 638146032688.006] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space":
  116.832 ±(99.9%) 1.471 MB/sec [Average]
  (min, avg, max) = (115.878, 116.832, 117.794), stdev = 0.973
  CI (99.9%): [115.361, 118.303] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm":
  638456954880.000 ±(99.9%) 7887356307.910 B/op [Average]
  (min, avg, max) = (633507676160.000, 638456954880.000, 643406233600.000), stdev = 5216997843.401
  CI (99.9%): [630569598572.090, 646344311187.910] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space":
  ≈ 10⁻⁵ MB/sec

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm":
  77256.800 ±(99.9%) 12657.679 B/op [Average]
  (min, avg, max) = (66376.000, 77256.800, 89080.000), stdev = 8372.271
  CI (99.9%): [64599.121, 89914.479] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.count":
  645.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (64.000, 64.500, 65.000), stdev = 0.527
  CI (99.9%): [645.000, 645.000] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.time":
  25263.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (2494.000, 2526.300, 2557.000), stdev = 25.452
  CI (99.9%): [25263.000, 25263.000] (assumes normal distribution)


# Run complete. Total time: 1 days, 05:06:20

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                               Mode  Cnt             Score            Error   Units
Jacobi2dPatternBenchmark.indexInRange                                     ss   10          5211.063 ±          2.484    s/op
Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate                      ss   10           116.775 ±          0.055  MB/sec
Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate.norm                 ss   10  638146008852.800 ±      23835.206    B/op
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space             ss   10           116.832 ±          1.471  MB/sec
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm        ss   10  638456954880.000 ± 7887356307.910    B/op
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space         ss   10            ≈ 10⁻⁵                   MB/sec
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm    ss   10         77256.800 ±      12657.679    B/op
Jacobi2dPatternBenchmark.indexInRange:·gc.count                           ss   10           645.000                   counts
Jacobi2dPatternBenchmark.indexInRange:·gc.time                            ss   10         25263.000                       ms

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/pin_total/2024-05-15_08:50:42/jacobi2d/Jacobi2dPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 2547.073 bytes/s; standard: 34.112 s, 87013 bytes, 1127 methods; osr:  0.305 s, 649 bytes, 1 methods; nmethods_size: 1786488 bytes; nmethods_code_size: 1265728 bytes}
  C2 {speed: 263.013 bytes/s; standard: 40.235 s, 11588 bytes, 102 methods; osr:  4.421 s, 157 bytes, 3 methods; nmethods_size: 104848 bytes; nmethods_code_size: 65664 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 1538.903 bytes/s; standard:  0.424 s, 653 bytes, 138 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 33232 bytes; nmethods_code_size: 21056 bytes}
  Tier2 {speed: 212.130 bytes/s; standard:  0.462 s, 98 bytes, 1 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 976 bytes; nmethods_code_size: 544 bytes}
  Tier3 {speed: 2592.002 bytes/s; standard: 33.226 s, 86262 bytes, 988 methods; osr:  0.305 s, 649 bytes, 1 methods; nmethods_size: 1752280 bytes; nmethods_code_size: 1244128 bytes}
  Tier4 {speed: 263.013 bytes/s; standard: 40.235 s, 11588 bytes, 102 methods; osr:  4.421 s, 157 bytes, 3 methods; nmethods_size: 104848 bytes; nmethods_code_size: 65664 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :  79.072 s
    Standard compilation   :  74.347 s, Average : 0.060 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   4.726 s, Average : 1.181 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       34.297 s
       Setup time:            0.193 s
       Build HIR:            17.797 s
         Parse:                14.569 s
         Optimize blocks:       0.040 s
         GVN:                   1.034 s
         Null checks elim:      0.760 s
         Range checks elim:     0.587 s
         Other:                 0.808 s
       Emit LIR:             10.274 s
         LIR Gen:               4.084 s
         Linear Scan:           5.971 s
         Other:                 0.218 s
       Code Emission:         3.776 s
       Code Installation:     1.518 s
       Other:                 0.738 s

    C2 Compile Time:       50.671 s
       Parse:                10.860 s
       Optimize:             17.645 s
         Escape Analysis:       1.016 s
           Conn Graph:            0.936 s
           Macro Eliminate:       0.004 s
         GVN 1:                 2.721 s
         Incremental Inline:    0.003 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.003 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.027 s
         IdealLoop:             9.332 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.289 s
         GVN 2:                 0.172 s
         Macro Expand:          1.774 s
         Barrier Expand:        0.002 s
         Graph Reshape:         0.499 s
         Other:                 1.811 s
       Matcher:                    5.177 s
         Post Selection Cleanup:   0.359 s
       Scheduler:                  3.938 s
       Regalloc:              7.739 s
         Ctor Chaitin:          0.018 s
         Build IFG (virt):      0.205 s
         Build IFG (phys):      1.126 s
         Compute Liveness:      2.141 s
         Regalloc Split:        1.341 s
         Postalloc Copy Rem:    1.429 s
         Merge multidefs:       0.195 s
         Fixup Spills:          0.127 s
         Compact:               0.015 s
         Coalesce 1:            0.523 s
         Coalesce 2:            0.201 s
         Coalesce 3:            0.049 s
         Cache LRG:             0.011 s
         Simplify:              0.177 s
         Select:                0.208 s
       Block Ordering:        0.404 s
       Peephole:              0.059 s
       Code Emission:           3.929 s
         Insn Scheduling:       0.000 s
         Shorten branches:      1.743 s
         Build OOP maps:        0.462 s
         Fill buffer:           1.331 s
         Code Installation:     0.115 s
         Other:                 0.278 s
       Other:                 0.804 s

  Total compiled methods    :     1233 methods
    Standard compilation    :     1229 methods
    On stack replacement    :        4 methods
  Total compiled bytecodes  :    99407 bytes
    Standard compilation    :    98601 bytes
    On stack replacement    :      806 bytes
  Average compilation speed :     1257 bytes/s

  nmethod code size         :  1891336 bytes
  nmethod total size        :  1331392 bytes
