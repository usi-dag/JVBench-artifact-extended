# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dbenchmark.plugin=jvbench.plugin.SocketPlugin -Dsize=70000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.axpy.AxpyPatternBenchmark.fma

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 378.226 s/op
# Warmup Iteration   2: 366.286 s/op
# Warmup Iteration   3: 361.477 s/op
# Warmup Iteration   4: 362.742 s/op
# Warmup Iteration   5: 362.716 s/op
# Warmup Iteration   6: 362.249 s/op
# Warmup Iteration   7: 362.053 s/op
# Warmup Iteration   8: 362.707 s/op
# Warmup Iteration   9: 363.128 s/op
# Warmup Iteration  10: 363.676 s/op
Iteration   1: 363.311 s/op
                 ·gc.alloc.rate:                   69.026 MB/sec
                 ·gc.alloc.rate.norm:              26378472712.000 B/op
                 ·gc.churn.G1_Eden_Space:          66.775 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     25518145536.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 16512.000 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         173.000 ms

Iteration   2: 365.258 s/op
                 ·gc.alloc.rate:                   68.667 MB/sec
                 ·gc.alloc.rate.norm:              26378465824.000 B/op
                 ·gc.churn.G1_Eden_Space:          66.427 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     25518145536.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 16496.000 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         177.000 ms

Iteration   3: 364.991 s/op
                 ·gc.alloc.rate:                   68.720 MB/sec
                 ·gc.alloc.rate.norm:              26378568544.000 B/op
                 ·gc.churn.G1_Eden_Space:          73.865 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     28353495040.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 29536.000 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         194.000 ms

Iteration   4: 362.773 s/op
                 ·gc.alloc.rate:                   69.137 MB/sec
                 ·gc.alloc.rate.norm:              26378458672.000 B/op
                 ·gc.churn.G1_Eden_Space:          66.883 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     25518145536.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 16512.000 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         162.000 ms

Iteration   5: 362.333 s/op
                 ·gc.alloc.rate:                   69.222 MB/sec
                 ·gc.alloc.rate.norm:              26378458728.000 B/op
                 ·gc.churn.G1_Eden_Space:          66.965 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     25518145536.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 20920.000 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         170.000 ms

Iteration   6: 363.031 s/op
                 ·gc.alloc.rate:                   69.087 MB/sec
                 ·gc.alloc.rate.norm:              26378482808.000 B/op
                 ·gc.churn.G1_Eden_Space:          74.260 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     28353495040.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 14448.000 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         186.000 ms

Iteration   7: 362.567 s/op
                 ·gc.alloc.rate:                   69.178 MB/sec
                 ·gc.alloc.rate.norm:              26378458720.000 B/op
                 ·gc.churn.G1_Eden_Space:          66.922 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     25518145536.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 16512.000 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         165.000 ms

Iteration   8: 363.492 s/op
                 ·gc.alloc.rate:                   69.002 MB/sec
                 ·gc.alloc.rate.norm:              26378458720.000 B/op
                 ·gc.churn.G1_Eden_Space:          66.751 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     25518145536.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 20640.000 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         172.000 ms

Iteration   9: 362.695 s/op
                 ·gc.alloc.rate:                   69.154 MB/sec
                 ·gc.alloc.rate.norm:              26378455120.000 B/op
                 ·gc.churn.G1_Eden_Space:          66.898 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     25518145536.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 27808.000 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         172.000 ms

Iteration  10: 363.328 s/op
                 ·gc.alloc.rate:                   69.034 MB/sec
                 ·gc.alloc.rate.norm:              26378475632.000 B/op
                 ·gc.churn.G1_Eden_Space:          74.202 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     28353495040.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 14448.000 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         182.000 ms


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 2237.510 bytes/s; standard: 37.851 s, 84636 bytes, 1187 methods; osr:  0.401 s, 952 bytes, 3 methods; nmethods_size: 1970640 bytes; nmethods_code_size: 1411360 bytes}
  C2 {speed: 385.881 bytes/s; standard: 78.760 s, 30197 bytes, 156 methods; osr:  5.440 s, 2294 bytes, 5 methods; nmethods_size: 217272 bytes; nmethods_code_size: 133504 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 1309.582 bytes/s; standard:  0.574 s, 752 bytes, 154 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 37008 bytes; nmethods_code_size: 23456 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 2251.653 bytes/s; standard: 37.277 s, 83884 bytes, 1033 methods; osr:  0.401 s, 952 bytes, 3 methods; nmethods_size: 1933632 bytes; nmethods_code_size: 1387904 bytes}
  Tier4 {speed: 385.881 bytes/s; standard: 78.760 s, 30197 bytes, 156 methods; osr:  5.440 s, 2294 bytes, 5 methods; nmethods_size: 217272 bytes; nmethods_code_size: 133504 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   : 122.715 s
    Standard compilation   : 116.611 s, Average : 0.087 s
    Bailed out compilation :   0.264 s, Average : 0.264 s
    On stack replacement   :   5.840 s, Average : 0.730 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       38.361 s
       Setup time:            0.207 s
       Build HIR:            20.613 s
         Parse:                17.807 s
         Optimize blocks:       0.015 s
         GVN:                   1.020 s
         Null checks elim:      0.643 s
         Range checks elim:     0.364 s
         Other:                 0.764 s
       Emit LIR:             10.160 s
         LIR Gen:               4.094 s
         Linear Scan:           5.913 s
         Other:                 0.152 s
       Code Emission:         3.969 s
       Code Installation:     2.216 s
       Other:                 1.196 s

    C2 Compile Time:       89.465 s
       Parse:                19.083 s
       Optimize:             28.962 s
         Escape Analysis:       1.640 s
           Conn Graph:            1.286 s
           Macro Eliminate:       0.381 s
         GVN 1:                 3.599 s
         Incremental Inline:    0.439 s
           IdealLoop:             0.000 s
          (IGVN:                  0.121 s)
          (Inline:                0.214 s)
          (Prune Useless:         0.028 s)
           Other:                 0.439 s
         Vector:                0.612 s
           Box elimination:     0.610 s
             IGVN:              0.103 s
             Prune Useless:     0.063 s
         Renumber Live:         0.066 s
         IdealLoop:            15.200 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.489 s
         GVN 2:                 0.152 s
         Macro Expand:          2.305 s
         Barrier Expand:        0.002 s
         Graph Reshape:         0.787 s
         Other:                 3.672 s
       Matcher:                    8.058 s
         Post Selection Cleanup:   0.636 s
       Scheduler:                  6.432 s
       Regalloc:             19.503 s
         Ctor Chaitin:          0.023 s
         Build IFG (virt):      0.338 s
         Build IFG (phys):      3.142 s
         Compute Liveness:      4.798 s
         Regalloc Split:        2.374 s
         Postalloc Copy Rem:    5.243 s
         Merge multidefs:       0.504 s
         Fixup Spills:          0.196 s
         Compact:               0.052 s
         Coalesce 1:            0.907 s
         Coalesce 2:            0.269 s
         Coalesce 3:            0.137 s
         Cache LRG:             0.041 s
         Simplify:              0.478 s
         Select:                0.876 s
         Other:                 0.125 s
       Block Ordering:        0.522 s
       Peephole:              0.065 s
       Code Emission:           5.355 s
         Insn Scheduling:       0.000 s
         Shorten branches:      2.233 s
         Build OOP maps:        0.888 s
         Fill buffer:           1.783 s
         Code Installation:     0.177 s
         Other:                 0.274 s
       Other:                 1.309 s

  Total compiled methods    :     1351 methods
    Standard compilation    :     1343 methods
    On stack replacement    :        8 methods
  Total compiled bytecodes  :   118079 bytes
    Standard compilation    :   114833 bytes
    On stack replacement    :     3246 bytes
  Average compilation speed :      962 bytes/s

  nmethod code size         :  2187912 bytes
  nmethod total size        :  1544864 bytes


Result "jvbench.axpy.AxpyPatternBenchmark.fma":
  N = 10
  mean =    363.378 ±(99.9%) 1.500 s/op

  Histogram, s/op:
    [362.000, 362.250) = 0 
    [362.250, 362.500) = 1 
    [362.500, 362.750) = 2 
    [362.750, 363.000) = 1 
    [363.000, 363.250) = 1 
    [363.250, 363.500) = 3 
    [363.500, 363.750) = 0 
    [363.750, 364.000) = 0 
    [364.000, 364.250) = 0 
    [364.250, 364.500) = 0 
    [364.500, 364.750) = 0 
    [364.750, 365.000) = 1 
    [365.000, 365.250) = 0 
    [365.250, 365.500) = 1 
    [365.500, 365.750) = 0 

  Percentiles, s/op:
      p(0.0000) =    362.333 s/op
     p(50.0000) =    363.171 s/op
     p(90.0000) =    365.231 s/op
     p(95.0000) =    365.258 s/op
     p(99.0000) =    365.258 s/op
     p(99.9000) =    365.258 s/op
     p(99.9900) =    365.258 s/op
     p(99.9990) =    365.258 s/op
     p(99.9999) =    365.258 s/op
    p(100.0000) =    365.258 s/op

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fma:·gc.alloc.rate":
  69.023 ±(99.9%) 0.284 MB/sec [Average]
  (min, avg, max) = (68.667, 69.023, 69.222), stdev = 0.188
  CI (99.9%): [68.739, 69.307] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fma:·gc.alloc.rate.norm":
  26378475548.000 ±(99.9%) 51281.829 B/op [Average]
  (min, avg, max) = (26378455120.000, 26378475548.000, 26378568544.000), stdev = 33919.755
  CI (99.9%): [26378424266.171, 26378526829.829] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fma:·gc.churn.G1_Eden_Space":
  68.995 ±(99.9%) 5.342 MB/sec [Average]
  (min, avg, max) = (66.427, 68.995, 74.260), stdev = 3.534
  CI (99.9%): [63.652, 74.337] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fma:·gc.churn.G1_Eden_Space.norm":
  26368750387.200 ±(99.9%) 2070645707.146 B/op [Average]
  (min, avg, max) = (25518145536.000, 26368750387.200, 28353495040.000), stdev = 1369603928.986
  CI (99.9%): [24298104680.054, 28439396094.346] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fma:·gc.churn.G1_Survivor_Space":
  ≈ 10⁻⁴ MB/sec

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fma:·gc.churn.G1_Survivor_Space.norm":
  19383.200 ±(99.9%) 8122.513 B/op [Average]
  (min, avg, max) = (14448.000, 19383.200, 29536.000), stdev = 5372.539
  CI (99.9%): [11260.687, 27505.713] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fma:·gc.count":
  93.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (9.000, 9.300, 10.000), stdev = 0.483
  CI (99.9%): [93.000, 93.000] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fma:·gc.time":
  1753.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (162.000, 175.300, 194.000), stdev = 9.719
  CI (99.9%): [1753.000, 1753.000] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dbenchmark.plugin=jvbench.plugin.SocketPlugin -Dsize=70000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.axpy.AxpyPatternBenchmark.fmaScalar

# Run progress: 50.00% complete, ETA 02:02:44
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 377.011 s/op
# Warmup Iteration   2: 368.681 s/op
# Warmup Iteration   3: 365.690 s/op
# Warmup Iteration   4: 366.533 s/op
# Warmup Iteration   5: 365.610 s/op
# Warmup Iteration   6: 365.054 s/op
# Warmup Iteration   7: 366.223 s/op
# Warmup Iteration   8: 365.066 s/op
# Warmup Iteration   9: 366.335 s/op
# Warmup Iteration  10: 365.076 s/op
Iteration   1: 366.657 s/op
                 ·gc.alloc.rate:                   55.016 MB/sec
                 ·gc.alloc.rate.norm:              21217537576.000 B/op
                 ·gc.churn.G1_Eden_Space:          53.073 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     20468203520.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4128.000 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         174.000 ms

Iteration   2: 366.867 s/op
                 ·gc.alloc.rate:                   54.991 MB/sec
                 ·gc.alloc.rate.norm:              21217606048.000 B/op
                 ·gc.churn.G1_Eden_Space:          53.049 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     20468203520.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4440.000 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         172.000 ms

Iteration   3: 364.993 s/op
                 ·gc.alloc.rate:                   55.274 MB/sec
                 ·gc.alloc.rate.norm:              21217546872.000 B/op
                 ·gc.churn.G1_Eden_Space:          58.654 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     22515023872.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4736.000 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         182.000 ms

Iteration   4: 365.067 s/op
                 ·gc.alloc.rate:                   55.263 MB/sec
                 ·gc.alloc.rate.norm:              21217522768.000 B/op
                 ·gc.churn.G1_Eden_Space:          53.311 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     20468203520.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 3816.000 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         161.000 ms

Iteration   5: 364.989 s/op
                 ·gc.alloc.rate:                   55.273 MB/sec
                 ·gc.alloc.rate.norm:              21217522712.000 B/op
                 ·gc.churn.G1_Eden_Space:          53.321 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     20468203520.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁶ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 608.000 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         158.000 ms

Iteration   6: 364.920 s/op
                 ·gc.alloc.rate:                   55.281 MB/sec
                 ·gc.alloc.rate.norm:              21217546848.000 B/op
                 ·gc.churn.G1_Eden_Space:          58.662 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     22515023872.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁶ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 888.000 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         180.000 ms

Iteration   7: 365.169 s/op
                 ·gc.alloc.rate:                   55.247 MB/sec
                 ·gc.alloc.rate.norm:              21217519112.000 B/op
                 ·gc.churn.G1_Eden_Space:          53.296 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     20468203520.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁶ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 560.000 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         161.000 ms

Iteration   8: 365.296 s/op
                 ·gc.alloc.rate:                   55.228 MB/sec
                 ·gc.alloc.rate.norm:              21217538928.000 B/op
                 ·gc.churn.G1_Eden_Space:          58.605 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     22515023872.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4456.000 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         177.000 ms

Iteration   9: 365.162 s/op
                 ·gc.alloc.rate:                   55.247 MB/sec
                 ·gc.alloc.rate.norm:              21217515512.000 B/op
                 ·gc.churn.G1_Eden_Space:          53.296 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     20468203520.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 17816.000 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         166.000 ms

Iteration  10: 365.029 s/op
                 ·gc.alloc.rate:                   55.268 MB/sec
                 ·gc.alloc.rate.norm:              21217515512.000 B/op
                 ·gc.churn.G1_Eden_Space:          53.316 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     20468203520.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4128.000 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         161.000 ms


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 2343.818 bytes/s; standard: 32.600 s, 76379 bytes, 1078 methods; osr:  0.340 s, 827 bytes, 3 methods; nmethods_size: 1709656 bytes; nmethods_code_size: 1222208 bytes}
  C2 {speed: 400.128 bytes/s; standard: 62.100 s, 23076 bytes, 131 methods; osr:  2.857 s, 2915 bytes, 4 methods; nmethods_size: 173312 bytes; nmethods_code_size: 108192 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 618.070 bytes/s; standard:  1.218 s, 753 bytes, 154 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 37072 bytes; nmethods_code_size: 23520 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 2410.096 bytes/s; standard: 31.382 s, 75626 bytes, 924 methods; osr:  0.340 s, 827 bytes, 3 methods; nmethods_size: 1672584 bytes; nmethods_code_size: 1198688 bytes}
  Tier4 {speed: 400.128 bytes/s; standard: 62.100 s, 23076 bytes, 131 methods; osr:  2.857 s, 2915 bytes, 4 methods; nmethods_size: 173312 bytes; nmethods_code_size: 108192 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :  98.240 s
    Standard compilation   :  94.700 s, Average : 0.078 s
    Bailed out compilation :   0.343 s, Average : 0.343 s
    On stack replacement   :   3.197 s, Average : 0.457 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       33.121 s
       Setup time:            0.213 s
       Build HIR:            17.576 s
         Parse:                14.758 s
         Optimize blocks:       0.018 s
         GVN:                   0.929 s
         Null checks elim:      0.644 s
         Range checks elim:     0.516 s
         Other:                 0.711 s
       Emit LIR:              8.969 s
         LIR Gen:               3.519 s
         Linear Scan:           5.311 s
         Other:                 0.138 s
       Code Emission:         3.570 s
       Code Installation:     1.823 s
       Other:                 0.969 s

    C2 Compile Time:       70.223 s
       Parse:                15.233 s
       Optimize:             22.863 s
         Escape Analysis:       1.555 s
           Conn Graph:            1.202 s
           Macro Eliminate:       0.269 s
         GVN 1:                 3.330 s
         Incremental Inline:    0.002 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.002 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.073 s
         IdealLoop:            12.011 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.373 s
         GVN 2:                 0.134 s
         Macro Expand:          1.957 s
         Barrier Expand:        0.002 s
         Graph Reshape:         0.593 s
         Other:                 2.834 s
       Matcher:                    6.152 s
         Post Selection Cleanup:   0.381 s
       Scheduler:                  5.431 s
       Regalloc:             13.968 s
         Ctor Chaitin:          0.024 s
         Build IFG (virt):      0.295 s
         Build IFG (phys):      2.290 s
         Compute Liveness:      3.750 s
         Regalloc Split:        2.135 s
         Postalloc Copy Rem:    3.115 s
         Merge multidefs:       0.328 s
         Fixup Spills:          0.162 s
         Compact:               0.034 s
         Coalesce 1:            0.623 s
         Coalesce 2:            0.227 s
         Coalesce 3:            0.112 s
         Cache LRG:             0.029 s
         Simplify:              0.318 s
         Select:                0.563 s
       Block Ordering:        0.744 s
       Peephole:              0.071 s
       Code Emission:           4.358 s
         Insn Scheduling:       0.000 s
         Shorten branches:      1.964 s
         Build OOP maps:        0.625 s
         Fill buffer:           1.368 s
         Code Installation:     0.127 s
         Other:                 0.274 s
       Other:                 1.278 s

  Total compiled methods    :     1216 methods
    Standard compilation    :     1209 methods
    On stack replacement    :        7 methods
  Total compiled bytecodes  :   103197 bytes
    Standard compilation    :    99455 bytes
    On stack replacement    :     3742 bytes
  Average compilation speed :     1050 bytes/s

  nmethod code size         :  1882968 bytes
  nmethod total size        :  1330400 bytes


Result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar":
  N = 10
  mean =    365.415 ±(99.9%) 1.088 s/op

  Histogram, s/op:
    [364.000, 364.250) = 0 
    [364.250, 364.500) = 0 
    [364.500, 364.750) = 0 
    [364.750, 365.000) = 3 
    [365.000, 365.250) = 4 
    [365.250, 365.500) = 1 
    [365.500, 365.750) = 0 
    [365.750, 366.000) = 0 
    [366.000, 366.250) = 0 
    [366.250, 366.500) = 0 
    [366.500, 366.750) = 1 

  Percentiles, s/op:
      p(0.0000) =    364.920 s/op
     p(50.0000) =    365.114 s/op
     p(90.0000) =    366.846 s/op
     p(95.0000) =    366.867 s/op
     p(99.0000) =    366.867 s/op
     p(99.9000) =    366.867 s/op
     p(99.9900) =    366.867 s/op
     p(99.9990) =    366.867 s/op
     p(99.9999) =    366.867 s/op
    p(100.0000) =    366.867 s/op

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar:·gc.alloc.rate":
  55.209 ±(99.9%) 0.166 MB/sec [Average]
  (min, avg, max) = (54.991, 55.209, 55.281), stdev = 0.110
  CI (99.9%): [55.043, 55.374] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar:·gc.alloc.rate.norm":
  21217537188.800 ±(99.9%) 40990.587 B/op [Average]
  (min, avg, max) = (21217515512.000, 21217537188.800, 21217606048.000), stdev = 27112.736
  CI (99.9%): [21217496198.213, 21217578179.387] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar:·gc.churn.G1_Eden_Space":
  54.858 ±(99.9%) 3.949 MB/sec [Average]
  (min, avg, max) = (53.049, 54.858, 58.662), stdev = 2.612
  CI (99.9%): [50.910, 58.807] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar:·gc.churn.G1_Eden_Space.norm":
  21082249625.600 ±(99.9%) 1494785658.413 B/op [Average]
  (min, avg, max) = (20468203520.000, 21082249625.600, 22515023872.000), stdev = 988708161.753
  CI (99.9%): [19587463967.187, 22577035284.013] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar:·gc.churn.G1_Survivor_Space":
  ≈ 10⁻⁵ MB/sec

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar:·gc.churn.G1_Survivor_Space.norm":
  4557.600 ±(99.9%) 7505.446 B/op [Average]
  (min, avg, max) = (560.000, 4557.600, 17816.000), stdev = 4964.388
  CI (99.9%): [≈ 0, 12063.046] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar:·gc.count":
  103.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (10.000, 10.300, 11.000), stdev = 0.483
  CI (99.9%): [103.000, 103.000] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar:·gc.time":
  1692.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (158.000, 169.200, 182.000), stdev = 8.879
  CI (99.9%): [1692.000, 1692.000] (assumes normal distribution)


# Run complete. Total time: 04:06:15

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                        Mode  Cnt            Score            Error   Units
AxpyPatternBenchmark.fma                                           ss   10          363.378 ±          1.500    s/op
AxpyPatternBenchmark.fma:·gc.alloc.rate                            ss   10           69.023 ±          0.284  MB/sec
AxpyPatternBenchmark.fma:·gc.alloc.rate.norm                       ss   10  26378475548.000 ±      51281.829    B/op
AxpyPatternBenchmark.fma:·gc.churn.G1_Eden_Space                   ss   10           68.995 ±          5.342  MB/sec
AxpyPatternBenchmark.fma:·gc.churn.G1_Eden_Space.norm              ss   10  26368750387.200 ± 2070645707.146    B/op
AxpyPatternBenchmark.fma:·gc.churn.G1_Survivor_Space               ss   10           ≈ 10⁻⁴                   MB/sec
AxpyPatternBenchmark.fma:·gc.churn.G1_Survivor_Space.norm          ss   10        19383.200 ±       8122.513    B/op
AxpyPatternBenchmark.fma:·gc.count                                 ss   10           93.000                   counts
AxpyPatternBenchmark.fma:·gc.time                                  ss   10         1753.000                       ms
AxpyPatternBenchmark.fmaScalar                                     ss   10          365.415 ±          1.088    s/op
AxpyPatternBenchmark.fmaScalar:·gc.alloc.rate                      ss   10           55.209 ±          0.166  MB/sec
AxpyPatternBenchmark.fmaScalar:·gc.alloc.rate.norm                 ss   10  21217537188.800 ±      40990.587    B/op
AxpyPatternBenchmark.fmaScalar:·gc.churn.G1_Eden_Space             ss   10           54.858 ±          3.949  MB/sec
AxpyPatternBenchmark.fmaScalar:·gc.churn.G1_Eden_Space.norm        ss   10  21082249625.600 ± 1494785658.413    B/op
AxpyPatternBenchmark.fmaScalar:·gc.churn.G1_Survivor_Space         ss   10           ≈ 10⁻⁵                   MB/sec
AxpyPatternBenchmark.fmaScalar:·gc.churn.G1_Survivor_Space.norm    ss   10         4557.600 ±       7505.446    B/op
AxpyPatternBenchmark.fmaScalar:·gc.count                           ss   10          103.000                   counts
AxpyPatternBenchmark.fmaScalar:·gc.time                            ss   10         1692.000                       ms

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/pin_total/2024-05-15_08:50:42/axpy/AxpyPatternBenchmark.fma.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 2964.043 bytes/s; standard: 33.219 s, 98776 bytes, 1203 methods; osr:  0.325 s, 649 bytes, 1 methods; nmethods_size: 2005312 bytes; nmethods_code_size: 1417472 bytes}
  C2 {speed: 342.844 bytes/s; standard: 47.397 s, 17557 bytes, 126 methods; osr:  4.271 s, 157 bytes, 3 methods; nmethods_size: 154248 bytes; nmethods_code_size: 95168 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 984.784 bytes/s; standard:  0.681 s, 671 bytes, 141 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 33912 bytes; nmethods_code_size: 21472 bytes}
  Tier2 {speed: 352.296 bytes/s; standard:  0.278 s, 98 bytes, 1 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 976 bytes; nmethods_code_size: 544 bytes}
  Tier3 {speed: 3027.728 bytes/s; standard: 32.260 s, 98007 bytes, 1061 methods; osr:  0.325 s, 649 bytes, 1 methods; nmethods_size: 1970424 bytes; nmethods_code_size: 1395456 bytes}
  Tier4 {speed: 342.844 bytes/s; standard: 47.397 s, 17557 bytes, 126 methods; osr:  4.271 s, 157 bytes, 3 methods; nmethods_size: 154248 bytes; nmethods_code_size: 95168 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :  85.212 s
    Standard compilation   :  80.616 s, Average : 0.061 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   4.596 s, Average : 1.149 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       33.448 s
       Setup time:            0.193 s
       Build HIR:            17.013 s
         Parse:                14.031 s
         Optimize blocks:       0.055 s
         GVN:                   1.002 s
         Null checks elim:      0.689 s
         Range checks elim:     0.489 s
         Other:                 0.747 s
       Emit LIR:              9.713 s
         LIR Gen:               3.701 s
         Linear Scan:           5.899 s
         Other:                 0.113 s
       Code Emission:         3.890 s
       Code Installation:     1.826 s
       Other:                 0.813 s

    C2 Compile Time:       57.222 s
       Parse:                12.439 s
       Optimize:             18.167 s
         Escape Analysis:       1.094 s
           Conn Graph:            1.015 s
           Macro Eliminate:       0.004 s
         GVN 1:                 2.761 s
         Incremental Inline:    0.002 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.002 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.027 s
         IdealLoop:             9.443 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.406 s
         GVN 2:                 0.119 s
         Macro Expand:          1.720 s
         Barrier Expand:        0.001 s
         Graph Reshape:         0.557 s
         Other:                 2.037 s
       Matcher:                    5.539 s
         Post Selection Cleanup:   0.487 s
       Scheduler:                  4.937 s
       Regalloc:              9.937 s
         Ctor Chaitin:          0.014 s
         Build IFG (virt):      0.234 s
         Build IFG (phys):      1.533 s
         Compute Liveness:      2.958 s
         Regalloc Split:        1.648 s
         Postalloc Copy Rem:    2.154 s
         Merge multidefs:       0.215 s
         Fixup Spills:          0.136 s
         Compact:               0.021 s
         Coalesce 1:            0.580 s
         Coalesce 2:            0.274 s
         Coalesce 3:            0.089 s
         Cache LRG:             0.014 s
         Simplify:              0.184 s
         Select:                0.275 s
       Block Ordering:        0.515 s
       Peephole:              0.060 s
       Code Emission:           4.263 s
         Insn Scheduling:       0.000 s
         Shorten branches:      2.102 s
         Build OOP maps:        0.468 s
         Fill buffer:           1.368 s
         Code Installation:     0.098 s
         Other:                 0.227 s
       Other:                 1.267 s

  Total compiled methods    :     1333 methods
    Standard compilation    :     1329 methods
    On stack replacement    :        4 methods
  Total compiled bytecodes  :   117139 bytes
    Standard compilation    :   116333 bytes
    On stack replacement    :      806 bytes
  Average compilation speed :     1374 bytes/s

  nmethod code size         :  2159560 bytes
  nmethod total size        :  1512640 bytes
