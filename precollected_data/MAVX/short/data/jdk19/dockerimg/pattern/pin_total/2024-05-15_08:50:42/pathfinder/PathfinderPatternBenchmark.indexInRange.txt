# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dbenchmark.plugin=jvbench.plugin.SocketPlugin -Dinput=/pathfinder/input/pathfinder_5000_5000.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.pathfinder.PathfinderPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: (benchmark timed out, interrupted 2026 times) 766.701 s/op
# Warmup Iteration   2: (benchmark timed out, interrupted 1412 times) 741.443 s/op
# Warmup Iteration   3: (benchmark timed out, interrupted 1389 times) 739.128 s/op
# Warmup Iteration   4: (benchmark timed out, interrupted 1400 times) 740.295 s/op
# Warmup Iteration   5: (benchmark timed out, interrupted 1384 times) 738.573 s/op
# Warmup Iteration   6: (benchmark timed out, interrupted 1376 times) 737.788 s/op
# Warmup Iteration   7: (benchmark timed out, interrupted 1390 times) 739.118 s/op
# Warmup Iteration   8: (benchmark timed out, interrupted 1311 times) 731.344 s/op
# Warmup Iteration   9: (benchmark timed out, interrupted 1319 times) 732.068 s/op
# Warmup Iteration  10: (benchmark timed out, interrupted 1312 times) 731.442 s/op
Iteration   1: (benchmark timed out, interrupted 1314 times) 731.514 s/op
                 ·gc.alloc.rate:                   260.463 MB/sec
                 ·gc.alloc.rate.norm:              199963675392.000 B/op
                 ·gc.churn.G1_Eden_Space:          260.490 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199984414720.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 86672.000 B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         1299.000 ms

Iteration   2: (benchmark timed out, interrupted 1316 times) 731.767 s/op
                 ·gc.alloc.rate:                   260.407 MB/sec
                 ·gc.alloc.rate.norm:              199963669504.000 B/op
                 ·gc.churn.G1_Eden_Space:          260.435 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199984414720.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 74944.000 B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         1294.000 ms

Iteration   3: (benchmark timed out, interrupted 1313 times) 731.442 s/op
                 ·gc.alloc.rate:                   260.521 MB/sec
                 ·gc.alloc.rate.norm:              199963668696.000 B/op
                 ·gc.churn.G1_Eden_Space:          260.548 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199984414720.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 80496.000 B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         1284.000 ms

Iteration   4: (benchmark timed out, interrupted 1311 times) 731.253 s/op
                 ·gc.alloc.rate:                   260.599 MB/sec
                 ·gc.alloc.rate.norm:              199963668720.000 B/op
                 ·gc.churn.G1_Eden_Space:          260.626 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199984414720.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 91096.000 B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         1293.000 ms

Iteration   5: (benchmark timed out, interrupted 1315 times) 731.663 s/op
                 ·gc.alloc.rate:                   260.457 MB/sec
                 ·gc.alloc.rate.norm:              199963668600.000 B/op
                 ·gc.churn.G1_Eden_Space:          260.484 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199984414720.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 64264.000 B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         1291.000 ms

Iteration   6: (benchmark timed out, interrupted 1320 times) 732.154 s/op
                 ·gc.alloc.rate:                   260.267 MB/sec
                 ·gc.alloc.rate.norm:              199963639920.000 B/op
                 ·gc.churn.G1_Eden_Space:          260.294 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199984414720.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 85880.000 B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         1294.000 ms

Iteration   7: (benchmark timed out, interrupted 1310 times) 731.141 s/op
                 ·gc.alloc.rate:                   260.639 MB/sec
                 ·gc.alloc.rate.norm:              199963637032.000 B/op
                 ·gc.churn.G1_Eden_Space:          260.666 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199984414720.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 68392.000 B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         1298.000 ms

Iteration   8: (benchmark timed out, interrupted 1304 times) 730.654 s/op
                 ·gc.alloc.rate:                   260.812 MB/sec
                 ·gc.alloc.rate.norm:              199963636720.000 B/op
                 ·gc.churn.G1_Eden_Space:          260.839 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199984414720.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 88752.000 B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         1292.000 ms

Iteration   9: (benchmark timed out, interrupted 1314 times) 731.554 s/op
                 ·gc.alloc.rate:                   260.493 MB/sec
                 ·gc.alloc.rate.norm:              199963636696.000 B/op
                 ·gc.churn.G1_Eden_Space:          260.520 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199984414720.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 76368.000 B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         1294.000 ms

Iteration  10: (benchmark timed out, interrupted 1312 times) 731.454 s/op
                 ·gc.alloc.rate:                   260.531 MB/sec
                 ·gc.alloc.rate.norm:              199963636552.000 B/op
                 ·gc.churn.G1_Eden_Space:          260.558 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199984414720.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 53664.000 B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         1295.000 ms


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 2331.917 bytes/s; standard: 42.341 s, 100031 bytes, 1380 methods; osr:  1.541 s, 2298 bytes, 4 methods; nmethods_size: 2912000 bytes; nmethods_code_size: 2099296 bytes}
  C2 {speed: 582.192 bytes/s; standard: 111.311 s, 67623 bytes, 287 methods; osr: 10.183 s, 3110 bytes, 8 methods; nmethods_size: 503392 bytes; nmethods_code_size: 302496 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 872.236 bytes/s; standard:  0.903 s, 788 bytes, 161 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 38624 bytes; nmethods_code_size: 24416 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 2362.600 bytes/s; standard: 41.437 s, 99243 bytes, 1219 methods; osr:  1.541 s, 2298 bytes, 4 methods; nmethods_size: 2873376 bytes; nmethods_code_size: 2074880 bytes}
  Tier4 {speed: 582.192 bytes/s; standard: 111.311 s, 67623 bytes, 287 methods; osr: 10.183 s, 3110 bytes, 8 methods; nmethods_size: 503392 bytes; nmethods_code_size: 302496 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   : 165.376 s
    Standard compilation   : 153.652 s, Average : 0.092 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :  11.724 s, Average : 0.977 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       43.741 s
       Setup time:            0.226 s
       Build HIR:            24.187 s
         Parse:                20.741 s
         Optimize blocks:       0.016 s
         GVN:                   1.220 s
         Null checks elim:      0.861 s
         Range checks elim:     0.432 s
         Other:                 0.918 s
       Emit LIR:             12.452 s
         LIR Gen:               4.625 s
         Linear Scan:           7.679 s
         Other:                 0.148 s
       Code Emission:         4.367 s
       Code Installation:     1.960 s
       Other:                 0.549 s

    C2 Compile Time:      126.660 s
       Parse:                26.125 s
       Optimize:             45.033 s
         Escape Analysis:       2.637 s
           Conn Graph:            2.059 s
           Macro Eliminate:       0.395 s
         GVN 1:                 4.987 s
         Incremental Inline:    0.674 s
           IdealLoop:             0.000 s
          (IGVN:                  0.258 s)
          (Inline:                0.336 s)
          (Prune Useless:         0.116 s)
           Other:                 0.674 s
         Vector:                1.115 s
           Box elimination:     1.112 s
             IGVN:              0.289 s
             Prune Useless:     0.178 s
         Renumber Live:         0.140 s
         IdealLoop:            26.151 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.667 s
         GVN 2:                 0.231 s
         Macro Expand:          2.763 s
         Barrier Expand:        0.003 s
         Graph Reshape:         0.845 s
         Other:                 4.819 s
       Matcher:                    9.437 s
         Post Selection Cleanup:   0.665 s
       Scheduler:                  9.100 s
       Regalloc:             27.943 s
         Ctor Chaitin:          0.036 s
         Build IFG (virt):      0.560 s
         Build IFG (phys):      4.845 s
         Compute Liveness:      7.112 s
         Regalloc Split:        3.204 s
         Postalloc Copy Rem:    7.696 s
         Merge multidefs:       0.746 s
         Fixup Spills:          0.148 s
         Compact:               0.091 s
         Coalesce 1:            1.168 s
         Coalesce 2:            0.320 s
         Coalesce 3:            0.239 s
         Cache LRG:             0.058 s
         Simplify:              0.722 s
         Select:                1.148 s
       Block Ordering:        0.675 s
       Peephole:              0.105 s
       Code Emission:           6.551 s
         Insn Scheduling:       0.000 s
         Shorten branches:      2.786 s
         Build OOP maps:        1.319 s
         Fill buffer:           1.850 s
         Code Installation:     0.242 s
         Other:                 0.354 s
       Other:                 1.451 s

  Total compiled methods    :     1679 methods
    Standard compilation    :     1667 methods
    On stack replacement    :       12 methods
  Total compiled bytecodes  :   173062 bytes
    Standard compilation    :   167654 bytes
    On stack replacement    :     5408 bytes
  Average compilation speed :     1046 bytes/s

  nmethod code size         :  3415392 bytes
  nmethod total size        :  2401792 bytes


Result "jvbench.pathfinder.PathfinderPatternBenchmark.indexInRange":
  N = 10
  mean =    731.460 ±(99.9%) 0.601 s/op

  Histogram, s/op:
    [730.000, 730.250) = 0 
    [730.250, 730.500) = 0 
    [730.500, 730.750) = 1 
    [730.750, 731.000) = 0 
    [731.000, 731.250) = 1 
    [731.250, 731.500) = 3 
    [731.500, 731.750) = 3 
    [731.750, 732.000) = 1 
    [732.000, 732.250) = 1 
    [732.250, 732.500) = 0 
    [732.500, 732.750) = 0 

  Percentiles, s/op:
      p(0.0000) =    730.654 s/op
     p(50.0000) =    731.484 s/op
     p(90.0000) =    732.115 s/op
     p(95.0000) =    732.154 s/op
     p(99.0000) =    732.154 s/op
     p(99.9000) =    732.154 s/op
     p(99.9900) =    732.154 s/op
     p(99.9990) =    732.154 s/op
     p(99.9999) =    732.154 s/op
    p(100.0000) =    732.154 s/op

Secondary result "jvbench.pathfinder.PathfinderPatternBenchmark.indexInRange:·gc.alloc.rate":
  260.519 ±(99.9%) 0.220 MB/sec [Average]
  (min, avg, max) = (260.267, 260.519, 260.812), stdev = 0.145
  CI (99.9%): [260.299, 260.738] (assumes normal distribution)

Secondary result "jvbench.pathfinder.PathfinderPatternBenchmark.indexInRange:·gc.alloc.rate.norm":
  199963653783.200 ±(99.9%) 26340.622 B/op [Average]
  (min, avg, max) = (199963636552.000, 199963653783.200, 199963675392.000), stdev = 17422.691
  CI (99.9%): [199963627442.578, 199963680123.823] (assumes normal distribution)

Secondary result "jvbench.pathfinder.PathfinderPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space":
  260.546 ±(99.9%) 0.220 MB/sec [Average]
  (min, avg, max) = (260.294, 260.546, 260.839), stdev = 0.145
  CI (99.9%): [260.326, 260.766] (assumes normal distribution)

Secondary result "jvbench.pathfinder.PathfinderPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm":
  199984414720.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (199984414720.000, 199984414720.000, 199984414720.000), stdev = 0.001
  CI (99.9%): [199984414720.000, 199984414720.000] (assumes normal distribution)

Secondary result "jvbench.pathfinder.PathfinderPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space":
  ≈ 10⁻⁴ MB/sec

Secondary result "jvbench.pathfinder.PathfinderPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm":
  77052.800 ±(99.9%) 18218.432 B/op [Average]
  (min, avg, max) = (53664.000, 77052.800, 91096.000), stdev = 12050.365
  CI (99.9%): [58834.368, 95271.232] (assumes normal distribution)

Secondary result "jvbench.pathfinder.PathfinderPatternBenchmark.indexInRange:·gc.count":
  800.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
  CI (99.9%): [800.000, 800.000] (assumes normal distribution)

Secondary result "jvbench.pathfinder.PathfinderPatternBenchmark.indexInRange:·gc.time":
  12934.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1284.000, 1293.400, 1299.000), stdev = 4.115
  CI (99.9%): [12934.000, 12934.000] (assumes normal distribution)


# Run complete. Total time: 04:06:55

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                                 Mode  Cnt             Score       Error   Units
PathfinderPatternBenchmark.indexInRange                                     ss   10           731.460 ±     0.601    s/op
PathfinderPatternBenchmark.indexInRange:·gc.alloc.rate                      ss   10           260.519 ±     0.220  MB/sec
PathfinderPatternBenchmark.indexInRange:·gc.alloc.rate.norm                 ss   10  199963653783.200 ± 26340.623    B/op
PathfinderPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space             ss   10           260.546 ±     0.220  MB/sec
PathfinderPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm        ss   10  199984414720.000 ±     0.001    B/op
PathfinderPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space         ss   10            ≈ 10⁻⁴              MB/sec
PathfinderPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm    ss   10         77052.800 ± 18218.432    B/op
PathfinderPatternBenchmark.indexInRange:·gc.count                           ss   10           800.000              counts
PathfinderPatternBenchmark.indexInRange:·gc.time                            ss   10         12934.000                  ms

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/pin_total/2024-05-15_08:50:42/pathfinder/PathfinderPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 2790.658 bytes/s; standard: 30.076 s, 84041 bytes, 1088 methods; osr:  0.272 s, 649 bytes, 1 methods; nmethods_size: 1739200 bytes; nmethods_code_size: 1230528 bytes}
  C2 {speed: 252.768 bytes/s; standard: 40.587 s, 11659 bytes, 97 methods; osr:  6.160 s, 157 bytes, 3 methods; nmethods_size: 103664 bytes; nmethods_code_size: 64448 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 1709.196 bytes/s; standard:  0.359 s, 613 bytes, 129 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 31000 bytes; nmethods_code_size: 19616 bytes}
  Tier2 {speed: 648.118 bytes/s; standard:  0.151 s, 98 bytes, 1 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 976 bytes; nmethods_code_size: 544 bytes}
  Tier3 {speed: 2814.514 bytes/s; standard: 29.566 s, 83330 bytes, 958 methods; osr:  0.272 s, 649 bytes, 1 methods; nmethods_size: 1707224 bytes; nmethods_code_size: 1210368 bytes}
  Tier4 {speed: 252.768 bytes/s; standard: 40.587 s, 11659 bytes, 97 methods; osr:  6.160 s, 157 bytes, 3 methods; nmethods_size: 103664 bytes; nmethods_code_size: 64448 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :  77.094 s
    Standard compilation   :  70.662 s, Average : 0.060 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   6.432 s, Average : 1.608 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       30.218 s
       Setup time:            0.161 s
       Build HIR:            16.087 s
         Parse:                13.581 s
         Optimize blocks:       0.034 s
         GVN:                   0.880 s
         Null checks elim:      0.529 s
         Range checks elim:     0.371 s
         Other:                 0.692 s
       Emit LIR:              8.515 s
         LIR Gen:               3.292 s
         Linear Scan:           5.079 s
         Other:                 0.144 s
       Code Emission:         3.365 s
       Code Installation:     1.507 s
       Other:                 0.583 s

    C2 Compile Time:       52.277 s
       Parse:                12.455 s
       Optimize:             17.787 s
         Escape Analysis:       1.024 s
           Conn Graph:            0.931 s
           Macro Eliminate:       0.004 s
         GVN 1:                 3.093 s
         Incremental Inline:    0.002 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.002 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.028 s
         IdealLoop:             9.252 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.341 s
         GVN 2:                 0.105 s
         Macro Expand:          1.805 s
         Barrier Expand:        0.001 s
         Graph Reshape:         0.527 s
         Other:                 1.604 s
       Matcher:                    5.455 s
         Post Selection Cleanup:   0.326 s
       Scheduler:                  4.296 s
       Regalloc:              7.066 s
         Ctor Chaitin:          0.020 s
         Build IFG (virt):      0.210 s
         Build IFG (phys):      0.964 s
         Compute Liveness:      2.141 s
         Regalloc Split:        1.308 s
         Postalloc Copy Rem:    1.263 s
         Merge multidefs:       0.139 s
         Fixup Spills:          0.117 s
         Compact:               0.025 s
         Coalesce 1:            0.461 s
         Coalesce 2:            0.194 s
         Coalesce 3:            0.035 s
         Cache LRG:             0.009 s
         Simplify:              0.165 s
         Select:                0.234 s
       Block Ordering:        0.468 s
       Peephole:              0.071 s
       Code Emission:           3.629 s
         Insn Scheduling:       0.000 s
         Shorten branches:      1.796 s
         Build OOP maps:        0.338 s
         Fill buffer:           1.108 s
         Code Installation:     0.194 s
         Other:                 0.193 s
       Other:                 0.587 s

  Total compiled methods    :     1189 methods
    Standard compilation    :     1185 methods
    On stack replacement    :        4 methods
  Total compiled bytecodes  :    96506 bytes
    Standard compilation    :    95700 bytes
    On stack replacement    :      806 bytes
  Average compilation speed :     1251 bytes/s

  nmethod code size         :  1842864 bytes
  nmethod total size        :  1294976 bytes
