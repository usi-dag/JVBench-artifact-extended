# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dsize=10000 -Dtsteps=14
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 268.538 s/op
# Warmup Iteration   2: 259.723 s/op
# Warmup Iteration   3: 260.503 s/op
# Warmup Iteration   4: 259.343 s/op
# Warmup Iteration   5: 258.066 s/op
# Warmup Iteration   6: 261.687 s/op
# Warmup Iteration   7: 259.916 s/op
# Warmup Iteration   8: 261.117 s/op
# Warmup Iteration   9: 261.117 s/op
# Warmup Iteration  10: 260.841 s/op
Iteration   1: 261.284 s/op
                 ·gc.alloc.rate:                   2324.737 MB/sec
                 ·gc.alloc.rate.norm:              638145998208.000 B/op
                 ·gc.churn.G1_Eden_Space:          2307.840 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     633507676160.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 86968.000 B/op
                 ·gc.count:                        64.000 counts
                 ·gc.time:                         153.000 ms

Iteration   2: 261.225 s/op
                 ·gc.alloc.rate:                   2325.267 MB/sec
                 ·gc.alloc.rate.norm:              638146019008.000 B/op
                 ·gc.churn.G1_Eden_Space:          2344.434 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     643406233600.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 105264.000 B/op
                 ·gc.count:                        65.000 counts
                 ·gc.time:                         156.000 ms

Iteration   3: 261.420 s/op
                 ·gc.alloc.rate:                   2323.538 MB/sec
                 ·gc.alloc.rate.norm:              638145998096.000 B/op
                 ·gc.churn.G1_Eden_Space:          2306.649 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     633507676160.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 102888.000 B/op
                 ·gc.count:                        64.000 counts
                 ·gc.time:                         154.000 ms

Iteration   4: 261.698 s/op
                 ·gc.alloc.rate:                   2321.067 MB/sec
                 ·gc.alloc.rate.norm:              638146018960.000 B/op
                 ·gc.churn.G1_Eden_Space:          2340.200 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     643406233600.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 93160.000 B/op
                 ·gc.count:                        65.000 counts
                 ·gc.time:                         155.000 ms

Iteration   5: 261.416 s/op
                 ·gc.alloc.rate:                   2323.568 MB/sec
                 ·gc.alloc.rate.norm:              638145998160.000 B/op
                 ·gc.churn.G1_Eden_Space:          2306.679 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     633507676160.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 97008.000 B/op
                 ·gc.count:                        64.000 counts
                 ·gc.time:                         155.000 ms

Iteration   6: 261.849 s/op
                 ·gc.alloc.rate:                   2319.732 MB/sec
                 ·gc.alloc.rate.norm:              638146018872.000 B/op
                 ·gc.churn.G1_Eden_Space:          2338.853 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     643406233600.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 74304.000 B/op
                 ·gc.count:                        65.000 counts
                 ·gc.time:                         159.000 ms

Iteration   7: 261.668 s/op
                 ·gc.alloc.rate:                   2321.335 MB/sec
                 ·gc.alloc.rate.norm:              638145998088.000 B/op
                 ·gc.churn.G1_Eden_Space:          2304.463 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     633507676160.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 74304.000 B/op
                 ·gc.count:                        64.000 counts
                 ·gc.time:                         161.000 ms

Iteration   8: 261.316 s/op
                 ·gc.alloc.rate:                   2324.456 MB/sec
                 ·gc.alloc.rate.norm:              638146019008.000 B/op
                 ·gc.churn.G1_Eden_Space:          2343.617 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     643406233600.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 107744.000 B/op
                 ·gc.count:                        65.000 counts
                 ·gc.time:                         160.000 ms

Iteration   9: 262.102 s/op
                 ·gc.alloc.rate:                   2317.498 MB/sec
                 ·gc.alloc.rate.norm:              638145984544.000 B/op
                 ·gc.churn.G1_Eden_Space:          2300.653 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     633507676160.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 111456.000 B/op
                 ·gc.count:                        64.000 counts
                 ·gc.time:                         151.000 ms

Iteration  10: 261.997 s/op
                 ·gc.alloc.rate:                   2318.427 MB/sec
                 ·gc.alloc.rate.norm:              638145993008.000 B/op
                 ·gc.churn.G1_Eden_Space:          2337.538 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     643406233600.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 116240.000 B/op
                 ·gc.count:                        65.000 counts
                 ·gc.time:                         161.000 ms


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 155441.253 bytes/s; standard:  0.588 s, 93084 bytes, 1347 methods; osr:  0.020 s, 1298 bytes, 3 methods; nmethods_size: 2586296 bytes; nmethods_code_size: 1855008 bytes}
  C2 {speed: 31760.542 bytes/s; standard:  1.319 s, 42295 bytes, 208 methods; osr:  0.047 s, 1091 bytes, 3 methods; nmethods_size: 335600 bytes; nmethods_code_size: 198880 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 61246.890 bytes/s; standard:  0.014 s, 840 bytes, 172 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 41312 bytes; nmethods_code_size: 26176 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 157618.058 bytes/s; standard:  0.574 s, 92244 bytes, 1175 methods; osr:  0.020 s, 1298 bytes, 3 methods; nmethods_size: 2544984 bytes; nmethods_code_size: 1828832 bytes}
  Tier4 {speed: 31760.542 bytes/s; standard:  1.319 s, 42295 bytes, 208 methods; osr:  0.047 s, 1091 bytes, 3 methods; nmethods_size: 335600 bytes; nmethods_code_size: 198880 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   1.973 s
    Standard compilation   :   1.906 s, Average : 0.001 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.067 s, Average : 0.011 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.601 s
       Setup time:            0.003 s
       Build HIR:             0.262 s
         Parse:                 0.219 s
         Optimize blocks:       0.000 s
         GVN:                   0.015 s
         Null checks elim:      0.011 s
         Range checks elim:     0.002 s
         Other:                 0.014 s
       Emit LIR:              0.196 s
         LIR Gen:               0.049 s
         Linear Scan:           0.145 s
         Other:                 0.002 s
       Code Emission:         0.068 s
       Code Installation:     0.048 s
       Other:                 0.024 s

    C2 Compile Time:        1.366 s
       Parse:                 0.250 s
       Optimize:              0.442 s
         Escape Analysis:       0.018 s
           Conn Graph:            0.013 s
           Macro Eliminate:       0.005 s
         GVN 1:                 0.052 s
         Incremental Inline:    0.003 s
           IdealLoop:             0.000 s
          (IGVN:                  0.002 s)
          (Inline:                0.001 s)
          (Prune Useless:         0.001 s)
           Other:                 0.003 s
         Vector:                0.005 s
           Box elimination:     0.005 s
             IGVN:              0.001 s
             Prune Useless:     0.001 s
         Renumber Live:         0.005 s
         IdealLoop:             0.272 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.006 s
         GVN 2:                 0.003 s
         Macro Expand:          0.015 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.008 s
         Other:                 0.056 s
       Matcher:                    0.079 s
         Post Selection Cleanup:   0.006 s
       Scheduler:                  0.087 s
       Regalloc:              0.422 s
         Ctor Chaitin:          0.001 s
         Build IFG (virt):      0.007 s
         Build IFG (phys):      0.085 s
         Compute Liveness:      0.136 s
         Regalloc Split:        0.039 s
         Postalloc Copy Rem:    0.059 s
         Merge multidefs:       0.024 s
         Fixup Spills:          0.001 s
         Compact:               0.002 s
         Coalesce 1:            0.012 s
         Coalesce 2:            0.004 s
         Coalesce 3:            0.006 s
         Cache LRG:             0.001 s
         Simplify:              0.019 s
         Select:                0.024 s
         Other:                 0.001 s
       Block Ordering:        0.006 s
       Peephole:              0.001 s
       Code Emission:           0.071 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.011 s
         Build OOP maps:        0.019 s
         Fill buffer:           0.017 s
         Code Installation:     0.008 s
         Other:                 0.015 s
       Other:                 0.001 s

  Total compiled methods    :     1561 methods
    Standard compilation    :     1555 methods
    On stack replacement    :        6 methods
  Total compiled bytecodes  :   137768 bytes
    Standard compilation    :   135379 bytes
    On stack replacement    :     2389 bytes
  Average compilation speed :    69818 bytes/s

  nmethod code size         :  2921896 bytes
  nmethod total size        :  2053888 bytes


Result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange":
  N = 10
  mean =    261.598 ±(99.9%) 0.471 s/op

  Histogram, s/op:
    [261.200, 261.300) = 2 
    [261.300, 261.400) = 1 
    [261.400, 261.500) = 2 
    [261.500, 261.600) = 0 
    [261.600, 261.700) = 2 
    [261.700, 261.800) = 0 
    [261.800, 261.900) = 1 
    [261.900, 262.000) = 1 
    [262.000, 262.100) = 0 

  Percentiles, s/op:
      p(0.0000) =    261.225 s/op
     p(50.0000) =    261.544 s/op
     p(90.0000) =    262.092 s/op
     p(95.0000) =    262.102 s/op
     p(99.0000) =    262.102 s/op
     p(99.9000) =    262.102 s/op
     p(99.9900) =    262.102 s/op
     p(99.9990) =    262.102 s/op
     p(99.9999) =    262.102 s/op
    p(100.0000) =    262.102 s/op

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate":
  2321.963 ±(99.9%) 4.171 MB/sec [Average]
  (min, avg, max) = (2317.498, 2321.963, 2325.267), stdev = 2.759
  CI (99.9%): [2317.792, 2326.134] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate.norm":
  638146004595.200 ±(99.9%) 19704.072 B/op [Average]
  (min, avg, max) = (638145984544.000, 638146004595.200, 638146019008.000), stdev = 13033.023
  CI (99.9%): [638145984891.128, 638146024299.272] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space":
  2323.093 ±(99.9%) 28.727 MB/sec [Average]
  (min, avg, max) = (2300.653, 2323.093, 2344.434), stdev = 19.001
  CI (99.9%): [2294.365, 2351.820] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm":
  638456954880.000 ±(99.9%) 7887356307.910 B/op [Average]
  (min, avg, max) = (633507676160.000, 638456954880.000, 643406233600.000), stdev = 5216997843.401
  CI (99.9%): [630569598572.090, 646344311187.910] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space":
  ≈ 10⁻³ MB/sec

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm":
  96933.600 ±(99.9%) 22214.580 B/op [Average]
  (min, avg, max) = (74304.000, 96933.600, 116240.000), stdev = 14693.569
  CI (99.9%): [74719.020, 119148.180] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.count":
  645.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (64.000, 64.500, 65.000), stdev = 0.527
  CI (99.9%): [645.000, 645.000] (assumes normal distribution)

Secondary result "jvbench.jacobi2d.Jacobi2dPatternBenchmark.indexInRange:·gc.time":
  1565.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (151.000, 156.500, 161.000), stdev = 3.536
  CI (99.9%): [1565.000, 1565.000] (assumes normal distribution)


# Run complete. Total time: 01:27:20

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                               Mode  Cnt             Score            Error   Units
Jacobi2dPatternBenchmark.indexInRange                                     ss   10           261.598 ±          0.471    s/op
Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate                      ss   10          2321.963 ±          4.171  MB/sec
Jacobi2dPatternBenchmark.indexInRange:·gc.alloc.rate.norm                 ss   10  638146004595.200 ±      19704.072    B/op
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space             ss   10          2323.093 ±         28.727  MB/sec
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm        ss   10  638456954880.000 ± 7887356307.910    B/op
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space         ss   10            ≈ 10⁻³                   MB/sec
Jacobi2dPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm    ss   10         96933.600 ±      22214.580    B/op
Jacobi2dPatternBenchmark.indexInRange:·gc.count                           ss   10           645.000                   counts
Jacobi2dPatternBenchmark.indexInRange:·gc.time                            ss   10          1565.000                       ms

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-23_17:00:03/jacobi2d/Jacobi2dPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 232625.031 bytes/s; standard:  0.365 s, 84854 bytes, 1108 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1704824 bytes; nmethods_code_size: 1207168 bytes}
  C2 {speed: 33885.955 bytes/s; standard:  0.338 s, 11629 bytes, 91 methods; osr:  0.007 s, 66 bytes, 2 methods; nmethods_size: 97896 bytes; nmethods_code_size: 60896 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 66332.831 bytes/s; standard:  0.010 s, 678 bytes, 143 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 34408 bytes; nmethods_code_size: 21792 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 237419.056 bytes/s; standard:  0.355 s, 84176 bytes, 965 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1670416 bytes; nmethods_code_size: 1185376 bytes}
  Tier4 {speed: 33885.955 bytes/s; standard:  0.338 s, 11629 bytes, 91 methods; osr:  0.007 s, 66 bytes, 2 methods; nmethods_size: 97896 bytes; nmethods_code_size: 60896 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.710 s
    Standard compilation   :   0.703 s, Average : 0.001 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.007 s, Average : 0.004 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.360 s
       Setup time:            0.002 s
       Build HIR:             0.144 s
         Parse:                 0.115 s
         Optimize blocks:       0.000 s
         GVN:                   0.010 s
         Null checks elim:      0.006 s
         Range checks elim:     0.002 s
         Other:                 0.010 s
       Emit LIR:              0.128 s
         LIR Gen:               0.030 s
         Linear Scan:           0.096 s
         Other:                 0.002 s
       Code Emission:         0.042 s
       Code Installation:     0.035 s
       Other:                 0.010 s

    C2 Compile Time:        0.348 s
       Parse:                 0.052 s
       Optimize:              0.109 s
         Escape Analysis:       0.002 s
           Conn Graph:            0.002 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.011 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.073 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.002 s
         GVN 2:                 0.001 s
         Macro Expand:          0.004 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.013 s
       Matcher:                    0.026 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.029 s
       Regalloc:              0.115 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.021 s
         Compute Liveness:      0.039 s
         Regalloc Split:        0.013 s
         Postalloc Copy Rem:    0.018 s
         Merge multidefs:       0.008 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.005 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.004 s
         Select:                0.005 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.018 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.004 s
         Build OOP maps:        0.006 s
         Fill buffer:           0.005 s
         Code Installation:     0.002 s
         Other:                 0.001 s

  Total compiled methods    :     1201 methods
    Standard compilation    :     1199 methods
    On stack replacement    :        2 methods
  Total compiled bytecodes  :    96549 bytes
    Standard compilation    :    96483 bytes
    On stack replacement    :       66 bytes
  Average compilation speed :   136004 bytes/s

  nmethod code size         :  1802720 bytes
  nmethod total size        :  1268064 bytes
