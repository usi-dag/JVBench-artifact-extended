# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dsize=70000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.axpy.AxpyPatternBenchmark.fma

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 23.992 s/op
# Warmup Iteration   2: 22.765 s/op
# Warmup Iteration   3: 22.598 s/op
# Warmup Iteration   4: 21.830 s/op
# Warmup Iteration   5: 22.238 s/op
# Warmup Iteration   6: 21.754 s/op
# Warmup Iteration   7: 22.318 s/op
# Warmup Iteration   8: 21.466 s/op
# Warmup Iteration   9: 22.127 s/op
# Warmup Iteration  10: 21.978 s/op
Iteration   1: 21.972 s/op
                 ·gc.alloc.rate:                   1106.051 MB/sec
                 ·gc.alloc.rate.norm:              26378578504.000 B/op
                 ·gc.churn.G1_Eden_Space:          1122.733 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     26776436736.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 51600.000 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         21.000 ms

Iteration   2: 22.148 s/op
                 ·gc.alloc.rate:                   1105.611 MB/sec
                 ·gc.alloc.rate.norm:              26378578512.000 B/op
                 ·gc.churn.G1_Eden_Space:          1122.286 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     26776436736.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 45408.000 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         21.000 ms

Iteration   3: 21.791 s/op
                 ·gc.alloc.rate:                   1115.713 MB/sec
                 ·gc.alloc.rate.norm:              26378545032.000 B/op
                 ·gc.churn.G1_Eden_Space:          1051.647 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     24863834112.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 53024.000 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         19.000 ms

Iteration   4: 21.912 s/op
                 ·gc.alloc.rate:                   1111.861 MB/sec
                 ·gc.alloc.rate.norm:              26378568448.000 B/op
                 ·gc.churn.G1_Eden_Space:          1128.632 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     26776436736.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 49536.000 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         20.000 ms

Iteration   5: 21.881 s/op
                 ·gc.alloc.rate:                   1118.734 MB/sec
                 ·gc.alloc.rate.norm:              26378568432.000 B/op
                 ·gc.churn.G1_Eden_Space:          1135.608 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     26776436736.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 53664.000 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         21.000 ms

Iteration   6: 21.856 s/op
                 ·gc.alloc.rate:                   1110.343 MB/sec
                 ·gc.alloc.rate.norm:              26378568352.000 B/op
                 ·gc.churn.G1_Eden_Space:          1127.090 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     26776436736.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 14448.000 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         18.000 ms

Iteration   7: 21.883 s/op
                 ·gc.alloc.rate:                   1116.788 MB/sec
                 ·gc.alloc.rate.norm:              26378568432.000 B/op
                 ·gc.churn.G1_Eden_Space:          1133.632 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     26776436736.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 35088.000 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         20.000 ms

Iteration   8: 21.869 s/op
                 ·gc.alloc.rate:                   1119.358 MB/sec
                 ·gc.alloc.rate.norm:              26378545008.000 B/op
                 ·gc.churn.G1_Eden_Space:          1055.082 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     24863834112.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 30960.000 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         18.000 ms

Iteration   9: 21.759 s/op
                 ·gc.alloc.rate:                   1117.676 MB/sec
                 ·gc.alloc.rate.norm:              26378568448.000 B/op
                 ·gc.churn.G1_Eden_Space:          1134.534 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     26776436736.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 34280.000 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         19.000 ms

Iteration  10: 21.769 s/op
                 ·gc.alloc.rate:                   1118.925 MB/sec
                 ·gc.alloc.rate.norm:              26378568432.000 B/op
                 ·gc.churn.G1_Eden_Space:          1135.802 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     26776436736.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 37152.000 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         19.000 ms


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 62155.882 bytes/s; standard:  1.455 s, 89877 bytes, 1249 methods; osr:  0.006 s, 952 bytes, 3 methods; nmethods_size: 2116872 bytes; nmethods_code_size: 1515104 bytes}
  C2 {speed: 42508.369 bytes/s; standard:  0.747 s, 31890 bytes, 161 methods; osr:  0.057 s, 2294 bytes, 5 methods; nmethods_size: 231880 bytes; nmethods_code_size: 141824 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 65028.410 bytes/s; standard:  0.013 s, 840 bytes, 172 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 41312 bytes; nmethods_code_size: 26176 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 62130.263 bytes/s; standard:  1.442 s, 89037 bytes, 1077 methods; osr:  0.006 s, 952 bytes, 3 methods; nmethods_size: 2075560 bytes; nmethods_code_size: 1488928 bytes}
  Tier4 {speed: 42508.369 bytes/s; standard:  0.747 s, 31890 bytes, 161 methods; osr:  0.057 s, 2294 bytes, 5 methods; nmethods_size: 231880 bytes; nmethods_code_size: 141824 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   2.265 s
    Standard compilation   :   2.202 s, Average : 0.002 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.063 s, Average : 0.008 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        1.455 s
       Setup time:            0.002 s
       Build HIR:             0.861 s
         Parse:                 0.826 s
         Optimize blocks:       0.000 s
         GVN:                   0.012 s
         Null checks elim:      0.008 s
         Range checks elim:     0.002 s
         Other:                 0.012 s
       Emit LIR:              0.162 s
         LIR Gen:               0.041 s
         Linear Scan:           0.119 s
         Other:                 0.002 s
       Code Emission:         0.377 s
       Code Installation:     0.042 s
       Other:                 0.011 s

    C2 Compile Time:        0.806 s
       Parse:                 0.130 s
       Optimize:              0.251 s
         Escape Analysis:       0.006 s
           Conn Graph:            0.006 s
           Macro Eliminate:       0.001 s
         GVN 1:                 0.025 s
         Incremental Inline:    0.001 s
           IdealLoop:             0.000 s
          (IGVN:                  0.001 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.001 s
         Vector:                0.003 s
           Box elimination:     0.003 s
             IGVN:              0.001 s
             Prune Useless:     0.001 s
         Renumber Live:         0.001 s
         IdealLoop:             0.166 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.004 s
         GVN 2:                 0.002 s
         Macro Expand:          0.010 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.005 s
         Other:                 0.027 s
       Matcher:                    0.054 s
         Post Selection Cleanup:   0.004 s
       Scheduler:                  0.058 s
       Regalloc:              0.263 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.005 s
         Build IFG (phys):      0.053 s
         Compute Liveness:      0.087 s
         Regalloc Split:        0.023 s
         Postalloc Copy Rem:    0.039 s
         Merge multidefs:       0.017 s
         Fixup Spills:          0.001 s
         Compact:               0.001 s
         Coalesce 1:            0.007 s
         Coalesce 2:            0.002 s
         Coalesce 3:            0.003 s
         Cache LRG:             0.001 s
         Simplify:              0.011 s
         Select:                0.015 s
       Block Ordering:        0.004 s
       Peephole:              0.001 s
       Code Emission:           0.040 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.008 s
         Build OOP maps:        0.013 s
         Fill buffer:           0.011 s
         Code Installation:     0.005 s
         Other:                 0.002 s
       Other:                 0.001 s

  Total compiled methods    :     1418 methods
    Standard compilation    :     1410 methods
    On stack replacement    :        8 methods
  Total compiled bytecodes  :   125013 bytes
    Standard compilation    :   121767 bytes
    On stack replacement    :     3246 bytes
  Average compilation speed :    55181 bytes/s

  nmethod code size         :  2348752 bytes
  nmethod total size        :  1656928 bytes


Result "jvbench.axpy.AxpyPatternBenchmark.fma":
  N = 10
  mean =     21.884 ±(99.9%) 0.172 s/op

  Histogram, s/op:
    [21.700, 21.750) = 0 
    [21.750, 21.800) = 3 
    [21.800, 21.850) = 0 
    [21.850, 21.900) = 4 
    [21.900, 21.950) = 1 
    [21.950, 22.000) = 1 
    [22.000, 22.050) = 0 
    [22.050, 22.100) = 0 
    [22.100, 22.150) = 1 

  Percentiles, s/op:
      p(0.0000) =     21.759 s/op
     p(50.0000) =     21.875 s/op
     p(90.0000) =     22.131 s/op
     p(95.0000) =     22.148 s/op
     p(99.0000) =     22.148 s/op
     p(99.9000) =     22.148 s/op
     p(99.9900) =     22.148 s/op
     p(99.9990) =     22.148 s/op
     p(99.9999) =     22.148 s/op
    p(100.0000) =     22.148 s/op

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fma:·gc.alloc.rate":
  1114.106 ±(99.9%) 7.984 MB/sec [Average]
  (min, avg, max) = (1105.611, 1114.106, 1119.358), stdev = 5.281
  CI (99.9%): [1106.122, 1122.090] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fma:·gc.alloc.rate.norm":
  26378565760.000 ±(99.9%) 17659.247 B/op [Average]
  (min, avg, max) = (26378545008.000, 26378565760.000, 26378578512.000), stdev = 11680.499
  CI (99.9%): [26378548100.753, 26378583419.247] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fma:·gc.churn.G1_Eden_Space":
  1114.705 ±(99.9%) 49.464 MB/sec [Average]
  (min, avg, max) = (1051.647, 1114.705, 1135.802), stdev = 32.718
  CI (99.9%): [1065.240, 1164.169] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fma:·gc.churn.G1_Eden_Space.norm":
  26393916211.200 ±(99.9%) 1219198127.596 B/op [Average]
  (min, avg, max) = (24863834112.000, 26393916211.200, 26776436736.000), stdev = 806424073.421
  CI (99.9%): [25174718083.604, 27613114338.796] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fma:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.001, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.003] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fma:·gc.churn.G1_Survivor_Space.norm":
  40516.000 ±(99.9%) 18909.919 B/op [Average]
  (min, avg, max) = (14448.000, 40516.000, 53664.000), stdev = 12507.741
  CI (99.9%): [21606.081, 59425.919] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fma:·gc.count":
  138.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (13.000, 13.800, 14.000), stdev = 0.422
  CI (99.9%): [138.000, 138.000] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fma:·gc.time":
  196.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (18.000, 19.600, 21.000), stdev = 1.174
  CI (99.9%): [196.000, 196.000] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dsize=70000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.axpy.AxpyPatternBenchmark.fmaScalar

# Run progress: 50.00% complete, ETA 00:07:38
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 22.229 s/op
# Warmup Iteration   2: 21.843 s/op
# Warmup Iteration   3: 20.645 s/op
# Warmup Iteration   4: 20.120 s/op
# Warmup Iteration   5: 20.686 s/op
# Warmup Iteration   6: 19.980 s/op
# Warmup Iteration   7: 19.997 s/op
# Warmup Iteration   8: 20.615 s/op
# Warmup Iteration   9: 19.775 s/op
# Warmup Iteration  10: 19.997 s/op
Iteration   1: 20.313 s/op
                 ·gc.alloc.rate:                   967.329 MB/sec
                 ·gc.alloc.rate.norm:              21217504928.000 B/op
                 ·gc.churn.G1_Eden_Space:          991.299 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     21743271936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 6192.000 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         14.000 ms

Iteration   2: 20.072 s/op
                 ·gc.alloc.rate:                   978.541 MB/sec
                 ·gc.alloc.rate.norm:              21217504952.000 B/op
                 ·gc.churn.G1_Eden_Space:          1002.789 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     21743271936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 12712.000 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         16.000 ms

Iteration   3: 19.792 s/op
                 ·gc.alloc.rate:                   989.535 MB/sec
                 ·gc.alloc.rate.norm:              21217557920.000 B/op
                 ·gc.churn.G1_Eden_Space:          901.381 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     19327352832.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 15872.000 B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         12.000 ms

Iteration   4: 20.156 s/op
                 ·gc.alloc.rate:                   967.488 MB/sec
                 ·gc.alloc.rate.norm:              21217497848.000 B/op
                 ·gc.churn.G1_Eden_Space:          991.462 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     21743271936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 15232.000 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         15.000 ms

Iteration   5: 20.329 s/op
                 ·gc.alloc.rate:                   966.580 MB/sec
                 ·gc.alloc.rate.norm:              21217497800.000 B/op
                 ·gc.churn.G1_Eden_Space:          990.532 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     21743271936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4456.000 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         14.000 ms

Iteration   6: 19.901 s/op
                 ·gc.alloc.rate:                   986.724 MB/sec
                 ·gc.alloc.rate.norm:              21217497880.000 B/op
                 ·gc.churn.G1_Eden_Space:          1011.175 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     21743271936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 22704.000 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         15.000 ms

Iteration   7: 20.143 s/op
                 ·gc.alloc.rate:                   967.758 MB/sec
                 ·gc.alloc.rate.norm:              21217473688.000 B/op
                 ·gc.churn.G1_Eden_Space:          881.547 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     19327352832.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 6192.000 B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         12.000 ms

Iteration   8: 20.234 s/op
                 ·gc.alloc.rate:                   970.999 MB/sec
                 ·gc.alloc.rate.norm:              21217497800.000 B/op
                 ·gc.churn.G1_Eden_Space:          995.060 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     21743271936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 12384.000 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         14.000 ms

Iteration   9: 20.078 s/op
                 ·gc.alloc.rate:                   978.279 MB/sec
                 ·gc.alloc.rate.norm:              21217495720.000 B/op
                 ·gc.churn.G1_Eden_Space:          1002.521 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     21743271936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 36064.000 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         15.000 ms

Iteration  10: 20.105 s/op
                 ·gc.alloc.rate:                   968.603 MB/sec
                 ·gc.alloc.rate.norm:              21217491296.000 B/op
                 ·gc.churn.G1_Eden_Space:          992.606 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     21743271936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻⁵ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 328.000 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         15.000 ms


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 189815.691 bytes/s; standard:  0.413 s, 78263 bytes, 1111 methods; osr:  0.004 s, 827 bytes, 3 methods; nmethods_size: 1777336 bytes; nmethods_code_size: 1269760 bytes}
  C2 {speed: 43106.600 bytes/s; standard:  0.561 s, 22794 bytes, 127 methods; osr:  0.035 s, 2915 bytes, 4 methods; nmethods_size: 170432 bytes; nmethods_code_size: 106400 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 61914.175 bytes/s; standard:  0.013 s, 810 bytes, 166 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 39952 bytes; nmethods_code_size: 25344 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 193961.754 bytes/s; standard:  0.400 s, 77453 bytes, 945 methods; osr:  0.004 s, 827 bytes, 3 methods; nmethods_size: 1737384 bytes; nmethods_code_size: 1244416 bytes}
  Tier4 {speed: 43106.600 bytes/s; standard:  0.561 s, 22794 bytes, 127 methods; osr:  0.035 s, 2915 bytes, 4 methods; nmethods_size: 170432 bytes; nmethods_code_size: 106400 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   1.013 s
    Standard compilation   :   0.974 s, Average : 0.001 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.039 s, Average : 0.006 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.411 s
       Setup time:            0.002 s
       Build HIR:             0.181 s
         Parse:                 0.151 s
         Optimize blocks:       0.000 s
         GVN:                   0.011 s
         Null checks elim:      0.006 s
         Range checks elim:     0.002 s
         Other:                 0.011 s
       Emit LIR:              0.138 s
         LIR Gen:               0.036 s
         Linear Scan:           0.100 s
         Other:                 0.002 s
       Code Emission:         0.045 s
       Code Installation:     0.035 s
       Other:                 0.010 s

    C2 Compile Time:        0.599 s
       Parse:                 0.087 s
       Optimize:              0.196 s
         Escape Analysis:       0.006 s
           Conn Graph:            0.005 s
           Macro Eliminate:       0.001 s
         GVN 1:                 0.021 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.130 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.003 s
         GVN 2:                 0.002 s
         Macro Expand:          0.007 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.004 s
         Other:                 0.022 s
       Matcher:                    0.041 s
         Post Selection Cleanup:   0.003 s
       Scheduler:                  0.044 s
       Regalloc:              0.193 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.004 s
         Build IFG (phys):      0.040 s
         Compute Liveness:      0.067 s
         Regalloc Split:        0.016 s
         Postalloc Copy Rem:    0.026 s
         Merge multidefs:       0.013 s
         Fixup Spills:          0.000 s
         Compact:               0.001 s
         Coalesce 1:            0.006 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.002 s
         Cache LRG:             0.001 s
         Simplify:              0.008 s
         Select:                0.010 s
       Block Ordering:        0.003 s
       Peephole:              0.001 s
       Code Emission:           0.029 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.006 s
         Build OOP maps:        0.010 s
         Fill buffer:           0.008 s
         Code Installation:     0.004 s
         Other:                 0.002 s
       Other:                 0.001 s

  Total compiled methods    :     1245 methods
    Standard compilation    :     1238 methods
    On stack replacement    :        7 methods
  Total compiled bytecodes  :   104799 bytes
    Standard compilation    :   101057 bytes
    On stack replacement    :     3742 bytes
  Average compilation speed :   103446 bytes/s

  nmethod code size         :  1947768 bytes
  nmethod total size        :  1376160 bytes


Result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar":
  N = 10
  mean =     20.112 ±(99.9%) 0.254 s/op

  Histogram, s/op:
    [19.700, 19.750) = 0 
    [19.750, 19.800) = 1 
    [19.800, 19.850) = 0 
    [19.850, 19.900) = 0 
    [19.900, 19.950) = 1 
    [19.950, 20.000) = 0 
    [20.000, 20.050) = 0 
    [20.050, 20.100) = 2 
    [20.100, 20.150) = 2 
    [20.150, 20.200) = 1 
    [20.200, 20.250) = 1 
    [20.250, 20.300) = 0 
    [20.300, 20.350) = 2 

  Percentiles, s/op:
      p(0.0000) =     19.792 s/op
     p(50.0000) =     20.124 s/op
     p(90.0000) =     20.327 s/op
     p(95.0000) =     20.329 s/op
     p(99.0000) =     20.329 s/op
     p(99.9000) =     20.329 s/op
     p(99.9900) =     20.329 s/op
     p(99.9990) =     20.329 s/op
     p(99.9999) =     20.329 s/op
    p(100.0000) =     20.329 s/op

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar:·gc.alloc.rate":
  974.184 ±(99.9%) 12.956 MB/sec [Average]
  (min, avg, max) = (966.580, 974.184, 989.535), stdev = 8.569
  CI (99.9%): [961.228, 987.139] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar:·gc.alloc.rate.norm":
  21217501983.200 ±(99.9%) 32540.689 B/op [Average]
  (min, avg, max) = (21217473688.000, 21217501983.200, 21217557920.000), stdev = 21523.651
  CI (99.9%): [21217469442.511, 21217534523.889] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar:·gc.churn.G1_Eden_Space":
  976.037 ±(99.9%) 68.491 MB/sec [Average]
  (min, avg, max) = (881.547, 976.037, 1011.175), stdev = 45.303
  CI (99.9%): [907.546, 1044.529] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar:·gc.churn.G1_Eden_Space.norm":
  21260088115.200 ±(99.9%) 1540039740.121 B/op [Average]
  (min, avg, max) = (19327352832.000, 21260088115.200, 21743271936.000), stdev = 1018640934.847
  CI (99.9%): [19720048375.079, 22800127855.321] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁵, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [≈ 0, 0.001] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar:·gc.churn.G1_Survivor_Space.norm":
  13213.600 ±(99.9%) 15660.109 B/op [Average]
  (min, avg, max) = (328.000, 13213.600, 36064.000), stdev = 10358.192
  CI (99.9%): [≈ 0, 28873.709] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar:·gc.count":
  88.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (8.000, 8.800, 9.000), stdev = 0.422
  CI (99.9%): [88.000, 88.000] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.fmaScalar:·gc.time":
  142.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (12.000, 14.200, 16.000), stdev = 1.317
  CI (99.9%): [142.000, 142.000] (assumes normal distribution)


# Run complete. Total time: 00:14:40

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                        Mode  Cnt            Score            Error   Units
AxpyPatternBenchmark.fma                                           ss   10           21.884 ±          0.172    s/op
AxpyPatternBenchmark.fma:·gc.alloc.rate                            ss   10         1114.106 ±          7.984  MB/sec
AxpyPatternBenchmark.fma:·gc.alloc.rate.norm                       ss   10  26378565760.000 ±      17659.247    B/op
AxpyPatternBenchmark.fma:·gc.churn.G1_Eden_Space                   ss   10         1114.705 ±         49.464  MB/sec
AxpyPatternBenchmark.fma:·gc.churn.G1_Eden_Space.norm              ss   10  26393916211.200 ± 1219198127.596    B/op
AxpyPatternBenchmark.fma:·gc.churn.G1_Survivor_Space               ss   10            0.002 ±          0.001  MB/sec
AxpyPatternBenchmark.fma:·gc.churn.G1_Survivor_Space.norm          ss   10        40516.000 ±      18909.919    B/op
AxpyPatternBenchmark.fma:·gc.count                                 ss   10          138.000                   counts
AxpyPatternBenchmark.fma:·gc.time                                  ss   10          196.000                       ms
AxpyPatternBenchmark.fmaScalar                                     ss   10           20.112 ±          0.254    s/op
AxpyPatternBenchmark.fmaScalar:·gc.alloc.rate                      ss   10          974.184 ±         12.956  MB/sec
AxpyPatternBenchmark.fmaScalar:·gc.alloc.rate.norm                 ss   10  21217501983.200 ±      32540.689    B/op
AxpyPatternBenchmark.fmaScalar:·gc.churn.G1_Eden_Space             ss   10          976.037 ±         68.491  MB/sec
AxpyPatternBenchmark.fmaScalar:·gc.churn.G1_Eden_Space.norm        ss   10  21260088115.200 ± 1540039740.121    B/op
AxpyPatternBenchmark.fmaScalar:·gc.churn.G1_Survivor_Space         ss   10            0.001 ±          0.001  MB/sec
AxpyPatternBenchmark.fmaScalar:·gc.churn.G1_Survivor_Space.norm    ss   10        13213.600 ±      15660.109    B/op
AxpyPatternBenchmark.fmaScalar:·gc.count                           ss   10           88.000                   counts
AxpyPatternBenchmark.fmaScalar:·gc.time                            ss   10          142.000                       ms

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-23_17:00:03/axpy/AxpyPatternBenchmark.fma.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 232097.446 bytes/s; standard:  0.429 s, 99656 bytes, 1213 methods; osr:  0.003 s, 649 bytes, 1 methods; nmethods_size: 2037944 bytes; nmethods_code_size: 1439520 bytes}
  C2 {speed: 36867.689 bytes/s; standard:  0.432 s, 16133 bytes, 124 methods; osr:  0.007 s, 66 bytes, 2 methods; nmethods_size: 133816 bytes; nmethods_code_size: 82560 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 64019.980 bytes/s; standard:  0.011 s, 688 bytes, 145 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 34872 bytes; nmethods_code_size: 22080 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 236383.585 bytes/s; standard:  0.419 s, 98968 bytes, 1068 methods; osr:  0.003 s, 649 bytes, 1 methods; nmethods_size: 2003072 bytes; nmethods_code_size: 1417440 bytes}
  Tier4 {speed: 36867.689 bytes/s; standard:  0.432 s, 16133 bytes, 124 methods; osr:  0.007 s, 66 bytes, 2 methods; nmethods_size: 133816 bytes; nmethods_code_size: 82560 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.872 s
    Standard compilation   :   0.861 s, Average : 0.001 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.010 s, Average : 0.003 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.427 s
       Setup time:            0.002 s
       Build HIR:             0.171 s
         Parse:                 0.137 s
         Optimize blocks:       0.000 s
         GVN:                   0.013 s
         Null checks elim:      0.008 s
         Range checks elim:     0.002 s
         Other:                 0.012 s
       Emit LIR:              0.155 s
         LIR Gen:               0.036 s
         Linear Scan:           0.116 s
         Other:                 0.002 s
       Code Emission:         0.050 s
       Code Installation:     0.038 s
       Other:                 0.011 s

    C2 Compile Time:        0.442 s
       Parse:                 0.073 s
       Optimize:              0.131 s
         Escape Analysis:       0.002 s
           Conn Graph:            0.002 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.014 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.085 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.003 s
         GVN 2:                 0.001 s
         Macro Expand:          0.005 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.003 s
         Other:                 0.016 s
       Matcher:                    0.036 s
         Post Selection Cleanup:   0.003 s
       Scheduler:                  0.038 s
       Regalloc:              0.145 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.003 s
         Build IFG (phys):      0.027 s
         Compute Liveness:      0.050 s
         Regalloc Split:        0.017 s
         Postalloc Copy Rem:    0.024 s
         Merge multidefs:       0.011 s
         Fixup Spills:          0.000 s
         Compact:               0.001 s
         Coalesce 1:            0.006 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.005 s
         Select:                0.007 s
       Block Ordering:        0.003 s
       Peephole:              0.000 s
       Code Emission:           0.024 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.005 s
         Build OOP maps:        0.008 s
         Fill buffer:           0.007 s
         Code Installation:     0.003 s
         Other:                 0.001 s

  Total compiled methods    :     1340 methods
    Standard compilation    :     1337 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :   116504 bytes
    Standard compilation    :   115789 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   133674 bytes/s

  nmethod code size         :  2171760 bytes
  nmethod total size        :  1522080 bytes
