# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dsize=70000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.axpy.AxpyPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 5.287 s/op
# Warmup Iteration   2: 5.363 s/op
# Warmup Iteration   3: 5.252 s/op
# Warmup Iteration   4: 4.203 s/op
# Warmup Iteration   5: 4.378 s/op
# Warmup Iteration   6: 4.236 s/op
# Warmup Iteration   7: 4.387 s/op
# Warmup Iteration   8: 4.700 s/op
# Warmup Iteration   9: 4.656 s/op
# Warmup Iteration  10: 4.208 s/op
Iteration   1: 4.357 s/op
                 ·gc.alloc.rate:                   2149.068 MB/sec
                 ·gc.alloc.rate.norm:              11182224968.000 B/op
                 ·gc.churn.G1_Eden_Space:          2337.652 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     12163481600.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 7728.000 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         9.000 ms

Iteration   2: 4.213 s/op
                 ·gc.alloc.rate:                   2190.395 MB/sec
                 ·gc.alloc.rate.norm:              11182212152.000 B/op
                 ·gc.churn.G1_Eden_Space:          2382.608 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     12163481600.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 8584.000 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         8.000 ms

Iteration   3: 4.317 s/op
                 ·gc.alloc.rate:                   2147.027 MB/sec
                 ·gc.alloc.rate.norm:              11182186736.000 B/op
                 ·gc.churn.G1_Eden_Space:          1868.352 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9730785280.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 5552.000 B/op
                 ·gc.count:                        4.000 counts
                 ·gc.time:                         7.000 ms

Iteration   4: 4.258 s/op
                 ·gc.alloc.rate:                   2145.346 MB/sec
                 ·gc.alloc.rate.norm:              11182205288.000 B/op
                 ·gc.churn.G1_Eden_Space:          2333.607 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     12163481600.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4128.000 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         8.000 ms

Iteration   5: 4.576 s/op
                 ·gc.alloc.rate:                   2058.263 MB/sec
                 ·gc.alloc.rate.norm:              11182180408.000 B/op
                 ·gc.churn.G1_Eden_Space:          1791.110 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9730785280.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 8896.000 B/op
                 ·gc.count:                        4.000 counts
                 ·gc.time:                         7.000 ms

Iteration   6: 4.577 s/op
                 ·gc.alloc.rate:                   2057.672 MB/sec
                 ·gc.alloc.rate.norm:              11182205312.000 B/op
                 ·gc.churn.G1_Eden_Space:          2238.240 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     12163481600.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 5552.000 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         8.000 ms

Iteration   7: 4.517 s/op
                 ·gc.alloc.rate:                   2081.885 MB/sec
                 ·gc.alloc.rate.norm:              11182205312.000 B/op
                 ·gc.churn.G1_Eden_Space:          2264.577 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     12163481600.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4128.000 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         8.000 ms

Iteration   8: 4.210 s/op
                 ·gc.alloc.rate:                   2214.344 MB/sec
                 ·gc.alloc.rate.norm:              11182180384.000 B/op
                 ·gc.churn.G1_Eden_Space:          1926.932 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9730785280.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4128.000 B/op
                 ·gc.count:                        4.000 counts
                 ·gc.time:                         7.000 ms

Iteration   9: 4.335 s/op
                 ·gc.alloc.rate:               2156.869 MB/sec
                 ·gc.alloc.rate.norm:          11182205232.000 B/op
                 ·gc.churn.G1_Eden_Space:      2346.141 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 12163481600.000 B/op
                 ·gc.count:                    5.000 counts
                 ·gc.time:                     8.000 ms

Iteration  10: 4.417 s/op
                 ·gc.alloc.rate:                   2102.336 MB/sec
                 ·gc.alloc.rate.norm:              11182180384.000 B/op
                 ·gc.churn.G1_Eden_Space:          1829.463 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9730785280.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2064.000 B/op
                 ·gc.count:                        4.000 counts
                 ·gc.time:                         7.000 ms


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 77168.290 bytes/s; standard:  1.110 s, 85532 bytes, 1235 methods; osr:  0.013 s, 1149 bytes, 3 methods; nmethods_size: 2158440 bytes; nmethods_code_size: 1551712 bytes}
  C2 {speed: 31214.676 bytes/s; standard:  0.524 s, 16712 bytes, 151 methods; osr:  0.056 s, 1389 bytes, 4 methods; nmethods_size: 164720 bytes; nmethods_code_size: 97760 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 67986.843 bytes/s; standard:  0.012 s, 784 bytes, 161 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 38648 bytes; nmethods_code_size: 24480 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 77263.525 bytes/s; standard:  1.099 s, 84748 bytes, 1074 methods; osr:  0.013 s, 1149 bytes, 3 methods; nmethods_size: 2119792 bytes; nmethods_code_size: 1527232 bytes}
  Tier4 {speed: 31214.676 bytes/s; standard:  0.524 s, 16712 bytes, 151 methods; osr:  0.056 s, 1389 bytes, 4 methods; nmethods_size: 164720 bytes; nmethods_code_size: 97760 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   1.703 s
    Standard compilation   :   1.634 s, Average : 0.001 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.069 s, Average : 0.010 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        1.118 s
       Setup time:            0.002 s
       Build HIR:             0.533 s
         Parse:                 0.499 s
         Optimize blocks:       0.000 s
         GVN:                   0.012 s
         Null checks elim:      0.007 s
         Range checks elim:     0.002 s
         Other:                 0.012 s
       Emit LIR:              0.158 s
         LIR Gen:               0.039 s
         Linear Scan:           0.117 s
         Other:                 0.002 s
       Code Emission:         0.055 s
       Code Installation:     0.041 s
       Other:                 0.330 s

    C2 Compile Time:        0.582 s
       Parse:                 0.121 s
       Optimize:              0.180 s
         Escape Analysis:       0.005 s
           Conn Graph:            0.004 s
           Macro Eliminate:       0.001 s
         GVN 1:                 0.017 s
         Incremental Inline:    0.002 s
           IdealLoop:             0.000 s
          (IGVN:                  0.001 s)
          (Inline:                0.001 s)
          (Prune Useless:         0.001 s)
           Other:                 0.002 s
         Vector:                0.005 s
           Box elimination:     0.005 s
             IGVN:              0.001 s
             Prune Useless:     0.001 s
         Renumber Live:         0.001 s
         IdealLoop:             0.114 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.003 s
         GVN 2:                 0.001 s
         Macro Expand:          0.008 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.004 s
         Other:                 0.019 s
       Matcher:                    0.038 s
         Post Selection Cleanup:   0.003 s
       Scheduler:                  0.040 s
       Regalloc:              0.163 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.003 s
         Build IFG (phys):      0.032 s
         Compute Liveness:      0.054 s
         Regalloc Split:        0.014 s
         Postalloc Copy Rem:    0.026 s
         Merge multidefs:       0.012 s
         Fixup Spills:          0.000 s
         Compact:               0.001 s
         Coalesce 1:            0.005 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.002 s
         Cache LRG:             0.000 s
         Simplify:              0.006 s
         Select:                0.008 s
       Block Ordering:        0.003 s
       Peephole:              0.000 s
       Code Emission:           0.032 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.006 s
         Build OOP maps:        0.009 s
         Fill buffer:           0.008 s
         Code Installation:     0.005 s
         Other:                 0.004 s

  Total compiled methods    :     1393 methods
    Standard compilation    :     1386 methods
    On stack replacement    :        7 methods
  Total compiled bytecodes  :   104782 bytes
    Standard compilation    :   102244 bytes
    On stack replacement    :     2538 bytes
  Average compilation speed :    61522 bytes/s

  nmethod code size         :  2323160 bytes
  nmethod total size        :  1649472 bytes


Result "jvbench.axpy.AxpyPatternBenchmark.indexInRange":
  N = 10
  mean =      4.378 ±(99.9%) 0.211 s/op

  Histogram, s/op:
    [4.200, 4.225) = 2 
    [4.225, 4.250) = 0 
    [4.250, 4.275) = 1 
    [4.275, 4.300) = 0 
    [4.300, 4.325) = 1 
    [4.325, 4.350) = 1 
    [4.350, 4.375) = 1 
    [4.375, 4.400) = 0 
    [4.400, 4.425) = 1 
    [4.425, 4.450) = 0 
    [4.450, 4.475) = 0 
    [4.475, 4.500) = 0 
    [4.500, 4.525) = 1 
    [4.525, 4.550) = 0 
    [4.550, 4.575) = 0 
    [4.575, 4.600) = 2 

  Percentiles, s/op:
      p(0.0000) =      4.210 s/op
     p(50.0000) =      4.346 s/op
     p(90.0000) =      4.577 s/op
     p(95.0000) =      4.577 s/op
     p(99.0000) =      4.577 s/op
     p(99.9000) =      4.577 s/op
     p(99.9900) =      4.577 s/op
     p(99.9990) =      4.577 s/op
     p(99.9999) =      4.577 s/op
    p(100.0000) =      4.577 s/op

Secondary result "jvbench.axpy.AxpyPatternBenchmark.indexInRange:·gc.alloc.rate":
  2130.320 ±(99.9%) 80.992 MB/sec [Average]
  (min, avg, max) = (2057.672, 2130.320, 2214.344), stdev = 53.572
  CI (99.9%): [2049.328, 2211.313] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.indexInRange:·gc.alloc.rate.norm":
  11182198617.600 ±(99.9%) 23600.305 B/op [Average]
  (min, avg, max) = (11182180384.000, 11182198617.600, 11182224968.000), stdev = 15610.140
  CI (99.9%): [11182175017.295, 11182222217.905] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space":
  2131.868 ±(99.9%) 370.245 MB/sec [Average]
  (min, avg, max) = (1791.110, 2131.868, 2382.608), stdev = 244.894
  CI (99.9%): [1761.623, 2502.114] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm":
  11190403072.000 ±(99.9%) 1899254077.434 B/op [Average]
  (min, avg, max) = (9730785280.000, 11190403072.000, 12163481600.000), stdev = 1256238977.832
  CI (99.9%): [9291148994.566, 13089657149.434] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.002] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm":
  5076.000 ±(99.9%) 4273.765 B/op [Average]
  (min, avg, max) = (≈ 0, 5076.000, 8896.000), stdev = 2826.831
  CI (99.9%): [802.235, 9349.765] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.indexInRange:·gc.count":
  46.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.516
  CI (99.9%): [46.000, 46.000] (assumes normal distribution)

Secondary result "jvbench.axpy.AxpyPatternBenchmark.indexInRange:·gc.time":
  77.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (7.000, 7.700, 9.000), stdev = 0.675
  CI (99.9%): [77.000, 77.000] (assumes normal distribution)


# Run complete. Total time: 00:01:45

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                           Mode  Cnt            Score            Error   Units
AxpyPatternBenchmark.indexInRange                                     ss   10            4.378 ±          0.211    s/op
AxpyPatternBenchmark.indexInRange:·gc.alloc.rate                      ss   10         2130.320 ±         80.992  MB/sec
AxpyPatternBenchmark.indexInRange:·gc.alloc.rate.norm                 ss   10  11182198617.600 ±      23600.305    B/op
AxpyPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space             ss   10         2131.868 ±        370.245  MB/sec
AxpyPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm        ss   10  11190403072.000 ± 1899254077.434    B/op
AxpyPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space         ss   10            0.001 ±          0.001  MB/sec
AxpyPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm    ss   10         5076.000 ±       4273.765    B/op
AxpyPatternBenchmark.indexInRange:·gc.count                           ss   10           46.000                   counts
AxpyPatternBenchmark.indexInRange:·gc.time                            ss   10           77.000                       ms

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-23_17:00:03/axpy/AxpyPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 234954.592 bytes/s; standard:  0.373 s, 87755 bytes, 1121 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1741936 bytes; nmethods_code_size: 1234976 bytes}
  C2 {speed: 34503.368 bytes/s; standard:  0.332 s, 11631 bytes, 93 methods; osr:  0.007 s, 66 bytes, 2 methods; nmethods_size: 97344 bytes; nmethods_code_size: 60768 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 63388.953 bytes/s; standard:  0.011 s, 678 bytes, 143 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 34408 bytes; nmethods_code_size: 21792 bytes}
  Tier2 {speed: 232299.676 bytes/s; standard:  0.000 s, 51 bytes, 1 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 768 bytes; nmethods_code_size: 480 bytes}
  Tier3 {speed: 240017.240 bytes/s; standard:  0.363 s, 87026 bytes, 977 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1706760 bytes; nmethods_code_size: 1212704 bytes}
  Tier4 {speed: 34503.368 bytes/s; standard:  0.332 s, 11631 bytes, 93 methods; osr:  0.007 s, 66 bytes, 2 methods; nmethods_size: 97344 bytes; nmethods_code_size: 60768 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.713 s
    Standard compilation   :   0.705 s, Average : 0.001 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.007 s, Average : 0.004 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.369 s
       Setup time:            0.002 s
       Build HIR:             0.147 s
         Parse:                 0.118 s
         Optimize blocks:       0.000 s
         GVN:                   0.010 s
         Null checks elim:      0.006 s
         Range checks elim:     0.002 s
         Other:                 0.010 s
       Emit LIR:              0.130 s
         LIR Gen:               0.030 s
         Linear Scan:           0.098 s
         Other:                 0.002 s
       Code Emission:         0.043 s
       Code Installation:     0.036 s
       Other:                 0.010 s

    C2 Compile Time:        0.342 s
       Parse:                 0.048 s
       Optimize:              0.103 s
         Escape Analysis:       0.002 s
           Conn Graph:            0.002 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.010 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.069 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.002 s
         GVN 2:                 0.001 s
         Macro Expand:          0.004 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.012 s
       Matcher:                    0.026 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.028 s
       Regalloc:              0.114 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.021 s
         Compute Liveness:      0.037 s
         Regalloc Split:        0.013 s
         Postalloc Copy Rem:    0.018 s
         Merge multidefs:       0.008 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.005 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.004 s
         Select:                0.006 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.018 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.004 s
         Build OOP maps:        0.006 s
         Fill buffer:           0.005 s
         Code Installation:     0.002 s
         Other:                 0.001 s
       Other:                 0.001 s

  Total compiled methods    :     1216 methods
    Standard compilation    :     1214 methods
    On stack replacement    :        2 methods
  Total compiled bytecodes  :    99452 bytes
    Standard compilation    :    99386 bytes
    On stack replacement    :       66 bytes
  Average compilation speed :   139580 bytes/s

  nmethod code size         :  1839280 bytes
  nmethod total size        :  1295744 bytes
