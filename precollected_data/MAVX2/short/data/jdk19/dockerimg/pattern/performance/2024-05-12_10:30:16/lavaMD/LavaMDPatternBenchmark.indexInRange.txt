# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dinput=/lavaMD/input/lavaMD_127776.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.lavaMD.LavaMDPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 1.672 s/op
# Warmup Iteration   2: 1.293 s/op
# Warmup Iteration   3: 0.321 s/op
# Warmup Iteration   4: 0.321 s/op
# Warmup Iteration   5: 0.320 s/op
# Warmup Iteration   6: 0.321 s/op
# Warmup Iteration   7: 0.324 s/op
# Warmup Iteration   8: 0.320 s/op
# Warmup Iteration   9: 0.320 s/op
# Warmup Iteration  10: 0.343 s/op
Iteration   1: 0.323 s/op
Iteration   2: 0.321 s/op
Iteration   3: 0.320 s/op
Iteration   4: 0.325 s/op
Iteration   5: 0.331 s/op
Iteration   6: 0.322 s/op
Iteration   7: 0.324 s/op
Iteration   8: 0.321 s/op
Iteration   9: 0.321 s/op
Iteration  10: 0.320 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 409670.228 bytes/s; standard:  0.181 s, 73476 bytes, 930 methods; osr:  0.009 s, 4261 bytes, 4 methods; nmethods_size: 1772360 bytes; nmethods_code_size: 1249344 bytes}
  C2 {speed: 73091.252 bytes/s; standard:  0.275 s, 21673 bytes, 143 methods; osr:  0.108 s, 6309 bytes, 12 methods; nmethods_size: 227632 bytes; nmethods_code_size: 136096 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 138925.933 bytes/s; standard:  0.004 s, 574 bytes, 119 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 28456 bytes; nmethods_code_size: 17984 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 415696.591 bytes/s; standard:  0.177 s, 72902 bytes, 811 methods; osr:  0.009 s, 4261 bytes, 4 methods; nmethods_size: 1743904 bytes; nmethods_code_size: 1231360 bytes}
  Tier4 {speed: 73091.252 bytes/s; standard:  0.275 s, 21673 bytes, 143 methods; osr:  0.108 s, 6309 bytes, 12 methods; nmethods_size: 227632 bytes; nmethods_code_size: 136096 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.573 s
    Standard compilation   :   0.456 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.116 s, Average : 0.007 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.188 s
       Setup time:            0.001 s
       Build HIR:             0.083 s
         Parse:                 0.069 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.003 s
         Range checks elim:     0.001 s
         Other:                 0.005 s
       Emit LIR:              0.063 s
         LIR Gen:               0.013 s
         Linear Scan:           0.050 s
         Other:                 0.001 s
       Code Emission:         0.020 s
       Code Installation:     0.016 s
       Other:                 0.004 s

    C2 Compile Time:        0.384 s
       Parse:                 0.066 s
       Optimize:              0.135 s
         Escape Analysis:       0.005 s
           Conn Graph:            0.004 s
           Macro Eliminate:       0.001 s
         GVN 1:                 0.010 s
         Incremental Inline:    0.004 s
           IdealLoop:             0.000 s
          (IGVN:                  0.002 s)
          (Inline:                0.001 s)
          (Prune Useless:         0.001 s)
           Other:                 0.004 s
         Vector:                0.004 s
           Box elimination:     0.004 s
             IGVN:              0.001 s
             Prune Useless:     0.001 s
         Renumber Live:         0.001 s
         IdealLoop:             0.083 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.002 s
         GVN 2:                 0.001 s
         Macro Expand:          0.010 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.015 s
       Matcher:                    0.022 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.025 s
       Regalloc:              0.111 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.025 s
         Compute Liveness:      0.034 s
         Regalloc Split:        0.011 s
         Postalloc Copy Rem:    0.014 s
         Merge multidefs:       0.002 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.006 s
         Select:                0.007 s
         Other:                 0.002 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.020 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.003 s
         Build OOP maps:        0.005 s
         Fill buffer:           0.005 s
         Code Installation:     0.006 s
         Other:                 0.001 s

  Total compiled methods    :     1089 methods
    Standard compilation    :     1073 methods
    On stack replacement    :       16 methods
  Total compiled bytecodes  :   105719 bytes
    Standard compilation    :    95149 bytes
    On stack replacement    :    10570 bytes
  Average compilation speed :   184632 bytes/s

  nmethod code size         :  1999992 bytes
  nmethod total size        :  1385440 bytes


Result "jvbench.lavaMD.LavaMDPatternBenchmark.indexInRange":
  N = 10
  mean =      0.323 ±(99.9%) 0.005 s/op

  Histogram, s/op:
    [0.310, 0.313) = 0 
    [0.313, 0.315) = 0 
    [0.315, 0.318) = 0 
    [0.318, 0.320) = 2 
    [0.320, 0.323) = 4 
    [0.323, 0.325) = 2 
    [0.325, 0.328) = 1 
    [0.328, 0.330) = 0 
    [0.330, 0.333) = 1 
    [0.333, 0.335) = 0 
    [0.335, 0.338) = 0 
    [0.338, 0.340) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.320 s/op
     p(50.0000) =      0.321 s/op
     p(90.0000) =      0.330 s/op
     p(95.0000) =      0.331 s/op
     p(99.0000) =      0.331 s/op
     p(99.9000) =      0.331 s/op
     p(99.9900) =      0.331 s/op
     p(99.9990) =      0.331 s/op
     p(99.9999) =      0.331 s/op
    p(100.0000) =      0.331 s/op


# Run complete. Total time: 00:00:09

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                   Mode  Cnt  Score   Error  Units
lavaMD.LavaMDPatternBenchmark.indexInRange    ss   10  0.323 ± 0.005   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-12_10:30:16/lavaMD/LavaMDPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 449368.366 bytes/s; standard:  0.143 s, 63983 bytes, 879 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 1286904 bytes; nmethods_code_size: 912768 bytes}
  C2 {speed: 66282.515 bytes/s; standard:  0.145 s, 9811 bytes, 75 methods; osr:  0.004 s, 66 bytes, 2 methods; nmethods_size: 90680 bytes; nmethods_code_size: 57024 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 134492.653 bytes/s; standard:  0.004 s, 605 bytes, 128 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 30752 bytes; nmethods_code_size: 19456 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 459534.383 bytes/s; standard:  0.138 s, 63378 bytes, 751 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 1256152 bytes; nmethods_code_size: 893312 bytes}
  Tier4 {speed: 66282.515 bytes/s; standard:  0.145 s, 9811 bytes, 75 methods; osr:  0.004 s, 66 bytes, 2 methods; nmethods_size: 90680 bytes; nmethods_code_size: 57024 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.293 s
    Standard compilation   :   0.288 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.005 s, Average : 0.002 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.142 s
       Setup time:            0.001 s
       Build HIR:             0.056 s
         Parse:                 0.043 s
         Optimize blocks:       0.000 s
         GVN:                   0.005 s
         Null checks elim:      0.003 s
         Range checks elim:     0.001 s
         Other:                 0.004 s
       Emit LIR:              0.051 s
         LIR Gen:               0.010 s
         Linear Scan:           0.040 s
         Other:                 0.001 s
       Code Emission:         0.016 s
       Code Installation:     0.014 s
       Other:                 0.004 s

    C2 Compile Time:        0.150 s
       Parse:                 0.019 s
       Optimize:              0.048 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.005 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.032 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.000 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.001 s
         Other:                 0.006 s
       Matcher:                    0.011 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.012 s
       Regalloc:              0.050 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.010 s
         Compute Liveness:      0.016 s
         Regalloc Split:        0.006 s
         Postalloc Copy Rem:    0.007 s
         Merge multidefs:       0.001 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.002 s
         Coalesce 2:            0.000 s
         Coalesce 3:            0.000 s
         Cache LRG:             0.000 s
         Simplify:              0.002 s
         Select:                0.002 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.008 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.002 s
         Fill buffer:           0.002 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :      957 methods
    Standard compilation    :      954 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    74509 bytes
    Standard compilation    :    73794 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   254433 bytes/s

  nmethod code size         :  1377584 bytes
  nmethod total size        :   969792 bytes
