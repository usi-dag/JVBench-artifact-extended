# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dsteps=10 -Dn=128
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.somier.SomierPatternBenchmark.pow

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 3.050 s/op
# Warmup Iteration   2: 2.095 s/op
# Warmup Iteration   3: 2.091 s/op
# Warmup Iteration   4: 2.090 s/op
# Warmup Iteration   5: 2.094 s/op
# Warmup Iteration   6: 2.092 s/op
# Warmup Iteration   7: 2.093 s/op
# Warmup Iteration   8: 2.092 s/op
# Warmup Iteration   9: 2.091 s/op
# Warmup Iteration  10: 2.091 s/op
Iteration   1: 2.091 s/op
                 ·gc.alloc.rate:                   3755.765 MB/sec
                 ·gc.alloc.rate.norm:              10205479008.000 B/op
                 ·gc.churn.G1_Eden_Space:          3905.219 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10611589120.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 5664.000 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         5.000 ms

Iteration   2: 2.092 s/op
                 ·gc.alloc.rate:                   3753.793 MB/sec
                 ·gc.alloc.rate.norm:              10205491896.000 B/op
                 ·gc.churn.G1_Eden_Space:          3903.164 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10611589120.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 14448.000 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         6.000 ms

Iteration   3: 2.099 s/op
                 ·gc.alloc.rate:                   3744.176 MB/sec
                 ·gc.alloc.rate.norm:              10205479032.000 B/op
                 ·gc.churn.G1_Eden_Space:          3893.170 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10611589120.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4768.000 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         6.000 ms

Iteration   4: 2.099 s/op
                 ·gc.alloc.rate:                   3743.456 MB/sec
                 ·gc.alloc.rate.norm:              10205453560.000 B/op
                 ·gc.churn.G1_Eden_Space:          3113.944 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     8489271296.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 1424.000 B/op
                 ·gc.count:                        4.000 counts
                 ·gc.time:                         5.000 ms

Iteration   5: 2.096 s/op
                 ·gc.alloc.rate:                   3747.909 MB/sec
                 ·gc.alloc.rate.norm:              10205472192.000 B/op
                 ·gc.churn.G1_Eden_Space:          3897.053 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10611589120.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 7472.000 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         6.000 ms

Iteration   6: 2.106 s/op
                 ·gc.alloc.rate:                   3734.246 MB/sec
                 ·gc.alloc.rate.norm:              10205472168.000 B/op
                 ·gc.churn.G1_Eden_Space:          3882.846 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10611589120.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 5552.000 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         5.000 ms

Iteration   7: 2.094 s/op
                 ·gc.alloc.rate:                   3751.325 MB/sec
                 ·gc.alloc.rate.norm:              10205472168.000 B/op
                 ·gc.churn.G1_Eden_Space:          3900.605 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10611589120.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 6192.000 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         6.000 ms

Iteration   8: 2.096 s/op
                 ·gc.alloc.rate:               3747.739 MB/sec
                 ·gc.alloc.rate.norm:          10205472112.000 B/op
                 ·gc.churn.G1_Eden_Space:      3896.877 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 10611589120.000 B/op
                 ·gc.count:                    5.000 counts
                 ·gc.time:                     6.000 ms

Iteration   9: 2.098 s/op
                 ·gc.alloc.rate:                   3745.205 MB/sec
                 ·gc.alloc.rate.norm:              10205472168.000 B/op
                 ·gc.churn.G1_Eden_Space:          3894.242 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10611589120.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2064.000 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         6.000 ms

Iteration  10: 2.093 s/op
                 ·gc.alloc.rate:               3753.129 MB/sec
                 ·gc.alloc.rate.norm:          10205447208.000 B/op
                 ·gc.churn.G1_Eden_Space:      3121.993 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 8489271296.000 B/op
                 ·gc.count:                    4.000 counts
                 ·gc.time:                     4.000 ms


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 351132.504 bytes/s; standard:  0.246 s, 87010 bytes, 1211 methods; osr:  0.009 s, 2631 bytes, 8 methods; nmethods_size: 2297552 bytes; nmethods_code_size: 1632192 bytes}
  C2 {speed: 71709.375 bytes/s; standard:  0.316 s, 22370 bytes, 145 methods; osr:  0.070 s, 5277 bytes, 12 methods; nmethods_size: 214400 bytes; nmethods_code_size: 132384 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 130396.823 bytes/s; standard:  0.006 s, 788 bytes, 162 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 38896 bytes; nmethods_code_size: 24608 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 356484.306 bytes/s; standard:  0.240 s, 86222 bytes, 1049 methods; osr:  0.009 s, 2631 bytes, 8 methods; nmethods_size: 2258656 bytes; nmethods_code_size: 1607584 bytes}
  Tier4 {speed: 71709.375 bytes/s; standard:  0.316 s, 22370 bytes, 145 methods; osr:  0.070 s, 5277 bytes, 12 methods; nmethods_size: 214400 bytes; nmethods_code_size: 132384 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.641 s
    Standard compilation   :   0.562 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.079 s, Average : 0.004 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.253 s
       Setup time:            0.001 s
       Build HIR:             0.111 s
         Parse:                 0.092 s
         Optimize blocks:       0.000 s
         GVN:                   0.007 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.083 s
         LIR Gen:               0.022 s
         Linear Scan:           0.061 s
         Other:                 0.001 s
       Code Emission:         0.028 s
       Code Installation:     0.024 s
       Other:                 0.006 s

    C2 Compile Time:        0.386 s
       Parse:                 0.078 s
       Optimize:              0.147 s
         Escape Analysis:       0.002 s
           Conn Graph:            0.002 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.014 s
         Incremental Inline:    0.004 s
           IdealLoop:             0.000 s
          (IGVN:                  0.002 s)
          (Inline:                0.001 s)
          (Prune Useless:         0.001 s)
           Other:                 0.004 s
         Vector:                0.004 s
           Box elimination:     0.004 s
             IGVN:              0.002 s
             Prune Useless:     0.001 s
         Renumber Live:         0.001 s
         IdealLoop:             0.097 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.002 s
         GVN 2:                 0.001 s
         Macro Expand:          0.005 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.015 s
       Matcher:                    0.021 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.025 s
       Regalloc:              0.088 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.019 s
         Compute Liveness:      0.031 s
         Regalloc Split:        0.008 s
         Postalloc Copy Rem:    0.012 s
         Merge multidefs:       0.003 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.004 s
         Select:                0.005 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.022 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.004 s
         Build OOP maps:        0.005 s
         Fill buffer:           0.005 s
         Code Installation:     0.007 s
         Other:                 0.002 s

  Total compiled methods    :     1376 methods
    Standard compilation    :     1356 methods
    On stack replacement    :       20 methods
  Total compiled bytecodes  :   117288 bytes
    Standard compilation    :   109380 bytes
    On stack replacement    :     7908 bytes
  Average compilation speed :   183024 bytes/s

  nmethod code size         :  2511952 bytes
  nmethod total size        :  1764576 bytes


Result "jvbench.somier.SomierPatternBenchmark.pow":
  N = 10
  mean =      2.096 ±(99.9%) 0.007 s/op

  Histogram, s/op:
    [2.090, 2.091) = 1 
    [2.091, 2.093) = 1 
    [2.093, 2.094) = 1 
    [2.094, 2.095) = 1 
    [2.095, 2.096) = 2 
    [2.096, 2.097) = 0 
    [2.097, 2.099) = 1 
    [2.099, 2.100) = 2 
    [2.100, 2.101) = 0 
    [2.101, 2.103) = 0 
    [2.103, 2.104) = 0 
    [2.104, 2.105) = 0 
    [2.105, 2.106) = 1 
    [2.106, 2.108) = 0 
    [2.108, 2.109) = 0 
    [2.109, 2.110) = 0 

  Percentiles, s/op:
      p(0.0000) =      2.091 s/op
     p(50.0000) =      2.096 s/op
     p(90.0000) =      2.105 s/op
     p(95.0000) =      2.106 s/op
     p(99.0000) =      2.106 s/op
     p(99.9000) =      2.106 s/op
     p(99.9900) =      2.106 s/op
     p(99.9990) =      2.106 s/op
     p(99.9999) =      2.106 s/op
    p(100.0000) =      2.106 s/op

Secondary result "jvbench.somier.SomierPatternBenchmark.pow:·gc.alloc.rate":
  3747.674 ±(99.9%) 9.595 MB/sec [Average]
  (min, avg, max) = (3734.246, 3747.674, 3755.765), stdev = 6.346
  CI (99.9%): [3738.079, 3757.269] (assumes normal distribution)

Secondary result "jvbench.somier.SomierPatternBenchmark.pow:·gc.alloc.rate.norm":
  10205471151.200 ±(99.9%) 19137.047 B/op [Average]
  (min, avg, max) = (10205447208.000, 10205471151.200, 10205491896.000), stdev = 12657.972
  CI (99.9%): [10205452014.153, 10205490288.247] (assumes normal distribution)

Secondary result "jvbench.somier.SomierPatternBenchmark.pow:·gc.churn.G1_Eden_Space":
  3740.911 ±(99.9%) 496.468 MB/sec [Average]
  (min, avg, max) = (3113.944, 3740.911, 3905.219), stdev = 328.383
  CI (99.9%): [3244.444, 4237.379] (assumes normal distribution)

Secondary result "jvbench.somier.SomierPatternBenchmark.pow:·gc.churn.G1_Eden_Space.norm":
  10187125555.200 ±(99.9%) 1352882132.814 B/op [Average]
  (min, avg, max) = (8489271296.000, 10187125555.200, 10611589120.000), stdev = 894847765.682
  CI (99.9%): [8834243422.386, 11540007688.014] (assumes normal distribution)

Secondary result "jvbench.somier.SomierPatternBenchmark.pow:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.002, 0.005), stdev = 0.002
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "jvbench.somier.SomierPatternBenchmark.pow:·gc.churn.G1_Survivor_Space.norm":
  4758.400 ±(99.9%) 6540.129 B/op [Average]
  (min, avg, max) = (≈ 0, 4758.400, 14448.000), stdev = 4325.890
  CI (99.9%): [≈ 0, 11298.529] (assumes normal distribution)

Secondary result "jvbench.somier.SomierPatternBenchmark.pow:·gc.count":
  48.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.422
  CI (99.9%): [48.000, 48.000] (assumes normal distribution)

Secondary result "jvbench.somier.SomierPatternBenchmark.pow:·gc.time":
  55.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (4.000, 5.500, 6.000), stdev = 0.707
  CI (99.9%): [55.000, 55.000] (assumes normal distribution)


# Run complete. Total time: 00:00:53

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                    Mode  Cnt            Score            Error   Units
SomierPatternBenchmark.pow                                     ss   10            2.096 ±          0.007    s/op
SomierPatternBenchmark.pow:·gc.alloc.rate                      ss   10         3747.674 ±          9.595  MB/sec
SomierPatternBenchmark.pow:·gc.alloc.rate.norm                 ss   10  10205471151.200 ±      19137.047    B/op
SomierPatternBenchmark.pow:·gc.churn.G1_Eden_Space             ss   10         3740.911 ±        496.468  MB/sec
SomierPatternBenchmark.pow:·gc.churn.G1_Eden_Space.norm        ss   10  10187125555.200 ± 1352882132.814    B/op
SomierPatternBenchmark.pow:·gc.churn.G1_Survivor_Space         ss   10            0.002 ±          0.002  MB/sec
SomierPatternBenchmark.pow:·gc.churn.G1_Survivor_Space.norm    ss   10         4758.400 ±       6540.129    B/op
SomierPatternBenchmark.pow:·gc.count                           ss   10           48.000                   counts
SomierPatternBenchmark.pow:·gc.time                            ss   10           55.000                       ms

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-16_07:11:34/somier/SomierPatternBenchmark.pow.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 489692.620 bytes/s; standard:  0.180 s, 88006 bytes, 1105 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1736360 bytes; nmethods_code_size: 1230688 bytes}
  C2 {speed: 75450.622 bytes/s; standard:  0.149 s, 11444 bytes, 93 methods; osr:  0.004 s, 66 bytes, 2 methods; nmethods_size: 97480 bytes; nmethods_code_size: 62208 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 140428.551 bytes/s; standard:  0.005 s, 678 bytes, 143 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 34408 bytes; nmethods_code_size: 21792 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 499334.603 bytes/s; standard:  0.175 s, 87328 bytes, 962 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1701952 bytes; nmethods_code_size: 1208896 bytes}
  Tier4 {speed: 75450.622 bytes/s; standard:  0.149 s, 11444 bytes, 93 methods; osr:  0.004 s, 66 bytes, 2 methods; nmethods_size: 97480 bytes; nmethods_code_size: 62208 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.332 s
    Standard compilation   :   0.328 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.004 s, Average : 0.002 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.178 s
       Setup time:            0.001 s
       Build HIR:             0.069 s
         Parse:                 0.053 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.003 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.065 s
         LIR Gen:               0.013 s
         Linear Scan:           0.051 s
         Other:                 0.001 s
       Code Emission:         0.020 s
       Code Installation:     0.017 s
       Other:                 0.005 s

    C2 Compile Time:        0.154 s
       Parse:                 0.022 s
       Optimize:              0.049 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.005 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.032 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.001 s
         Other:                 0.006 s
       Matcher:                    0.012 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.013 s
       Regalloc:              0.048 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.009 s
         Compute Liveness:      0.017 s
         Regalloc Split:        0.006 s
         Postalloc Copy Rem:    0.007 s
         Merge multidefs:       0.001 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.000 s
         Coalesce 3:            0.000 s
         Cache LRG:             0.000 s
         Simplify:              0.002 s
         Select:                0.002 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.009 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.003 s
         Fill buffer:           0.003 s
         Code Installation:     0.001 s
         Other:                 0.001 s

  Total compiled methods    :     1200 methods
    Standard compilation    :     1198 methods
    On stack replacement    :        2 methods
  Total compiled bytecodes  :    99516 bytes
    Standard compilation    :    99450 bytes
    On stack replacement    :       66 bytes
  Average compilation speed :   299506 bytes/s

  nmethod code size         :  1833840 bytes
  nmethod total size        :  1292896 bytes
