# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dinput=/blackscholes/input/in_512K.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.343 s/op
# Warmup Iteration   2: 0.245 s/op
# Warmup Iteration   3: 0.208 s/op
# Warmup Iteration   4: 0.212 s/op
# Warmup Iteration   5: 0.207 s/op
# Warmup Iteration   6: 0.211 s/op
# Warmup Iteration   7: 0.208 s/op
# Warmup Iteration   8: 0.211 s/op
# Warmup Iteration   9: 0.237 s/op
# Warmup Iteration  10: 0.207 s/op
Iteration   1: 0.207 s/op
                 ·gc.alloc.rate:                   741.711 MB/sec
                 ·gc.alloc.rate.norm:              550529504.000 B/op
                 ·gc.churn.G1_Eden_Space:          627.245 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     465567744.000 B/op
                 ·gc.churn.G1_Survivor_Space:      11.481 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 8521672.000 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         3.000 ms

Iteration   2: 0.206 s/op
                 ·gc.alloc.rate:                   742.906 MB/sec
                 ·gc.alloc.rate.norm:              550529504.000 B/op
                 ·gc.churn.G1_Eden_Space:          639.576 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     473956352.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.898 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 665384.000 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         1.000 ms

Iteration   3: 0.207 s/op
                 ·gc.alloc.rate:                   741.788 MB/sec
                 ·gc.alloc.rate.norm:              550555800.000 B/op
                 ·gc.churn.G1_Eden_Space:          1277.164 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     947912704.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.578 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 428712.000 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         2.000 ms

Iteration   4: 0.205 s/op
                 ·gc.alloc.rate:               743.881 MB/sec
                 ·gc.alloc.rate.norm:          550529448.000 B/op
                 ·gc.churn.G1_Eden_Space:      640.414 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 473956352.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     ≈ 0 ms

Iteration   5: 0.206 s/op
                 ·gc.alloc.rate:                   742.771 MB/sec
                 ·gc.alloc.rate.norm:              550529504.000 B/op
                 ·gc.churn.G1_Eden_Space:          639.459 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     473956352.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 6192.000 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   6: 0.205 s/op
                 ·gc.alloc.rate:               743.986 MB/sec
                 ·gc.alloc.rate.norm:          550529448.000 B/op
                 ·gc.churn.G1_Eden_Space:      640.505 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 473956352.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms

Iteration   7: 0.206 s/op
                 ·gc.alloc.rate:               742.815 MB/sec
                 ·gc.alloc.rate.norm:          550529448.000 B/op
                 ·gc.churn.G1_Eden_Space:      639.497 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 473956352.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     ≈ 0 ms

Iteration   8: 0.205 s/op
                 ·gc.alloc.rate:                   743.882 MB/sec
                 ·gc.alloc.rate.norm:              550529504.000 B/op
                 ·gc.churn.G1_Eden_Space:          640.415 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     473956352.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2704.000 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         1.000 ms

Iteration   9: 0.208 s/op
                 ·gc.alloc.rate:                   740.512 MB/sec
                 ·gc.alloc.rate.norm:              550555776.000 B/op
                 ·gc.churn.G1_Eden_Space:          1274.967 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     947912704.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 6520.000 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         2.000 ms

Iteration  10: 0.205 s/op
                 ·gc.alloc.rate:               744.380 MB/sec
                 ·gc.alloc.rate.norm:          550529568.000 B/op
                 ·gc.churn.G1_Eden_Space:      640.844 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 473956352.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 361114.903 bytes/s; standard:  0.295 s, 106510 bytes, 1415 methods; osr:  0.006 s, 2274 bytes, 4 methods; nmethods_size: 2811568 bytes; nmethods_code_size: 2026400 bytes}
  C2 {speed: 68751.771 bytes/s; standard:  0.565 s, 39816 bytes, 246 methods; osr:  0.057 s, 2947 bytes, 14 methods; nmethods_size: 326816 bytes; nmethods_code_size: 203808 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 128624.148 bytes/s; standard:  0.006 s, 829 bytes, 170 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 40752 bytes; nmethods_code_size: 25792 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 366197.792 bytes/s; standard:  0.289 s, 105681 bytes, 1245 methods; osr:  0.006 s, 2274 bytes, 4 methods; nmethods_size: 2770816 bytes; nmethods_code_size: 2000608 bytes}
  Tier4 {speed: 68751.771 bytes/s; standard:  0.565 s, 39816 bytes, 246 methods; osr:  0.057 s, 2947 bytes, 14 methods; nmethods_size: 326816 bytes; nmethods_code_size: 203808 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.926 s
    Standard compilation   :   0.860 s, Average : 0.001 s
    Bailed out compilation :   0.003 s, Average : 0.003 s
    On stack replacement   :   0.063 s, Average : 0.004 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.298 s
       Setup time:            0.001 s
       Build HIR:             0.135 s
         Parse:                 0.112 s
         Optimize blocks:       0.000 s
         GVN:                   0.009 s
         Null checks elim:      0.005 s
         Range checks elim:     0.001 s
         Other:                 0.008 s
       Emit LIR:              0.098 s
         LIR Gen:               0.021 s
         Linear Scan:           0.076 s
         Other:                 0.001 s
       Code Emission:         0.032 s
       Code Installation:     0.026 s
       Other:                 0.007 s

    C2 Compile Time:        0.625 s
       Parse:                 0.116 s
       Optimize:              0.241 s
         Escape Analysis:       0.005 s
           Conn Graph:            0.004 s
           Macro Eliminate:       0.001 s
         GVN 1:                 0.019 s
         Incremental Inline:    0.010 s
           IdealLoop:             0.000 s
          (IGVN:                  0.002 s)
          (Inline:                0.007 s)
          (Prune Useless:         0.001 s)
           Other:                 0.010 s
         Vector:                0.007 s
           Box elimination:     0.007 s
             IGVN:              0.002 s
             Prune Useless:     0.001 s
         Renumber Live:         0.001 s
         IdealLoop:             0.152 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.008 s
         GVN 2:                 0.002 s
         Macro Expand:          0.011 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.004 s
         Other:                 0.023 s
       Matcher:                    0.038 s
         Post Selection Cleanup:   0.003 s
       Scheduler:                  0.040 s
       Regalloc:              0.152 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.003 s
         Build IFG (phys):      0.034 s
         Compute Liveness:      0.052 s
         Regalloc Split:        0.015 s
         Postalloc Copy Rem:    0.020 s
         Merge multidefs:       0.004 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.005 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.002 s
         Cache LRG:             0.000 s
         Simplify:              0.006 s
         Select:                0.008 s
       Block Ordering:        0.003 s
       Peephole:              0.001 s
       Code Emission:           0.029 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.005 s
         Build OOP maps:        0.008 s
         Fill buffer:           0.008 s
         Code Installation:     0.004 s
         Other:                 0.004 s
       Other:                 0.002 s

  Total compiled methods    :     1679 methods
    Standard compilation    :     1661 methods
    On stack replacement    :       18 methods
  Total compiled bytecodes  :   151547 bytes
    Standard compilation    :   146326 bytes
    On stack replacement    :     5221 bytes
  Average compilation speed :   163688 bytes/s

  nmethod code size         :  3138384 bytes
  nmethod total size        :  2230208 bytes


Result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange":
  N = 10
  mean =      0.206 ±(99.9%) 0.002 s/op

  Histogram, s/op:
    [0.204, 0.204) = 0 
    [0.204, 0.205) = 0 
    [0.205, 0.205) = 1 
    [0.205, 0.205) = 1 
    [0.205, 0.205) = 2 
    [0.205, 0.206) = 0 
    [0.206, 0.206) = 0 
    [0.206, 0.206) = 0 
    [0.206, 0.206) = 3 
    [0.206, 0.207) = 0 
    [0.207, 0.207) = 0 
    [0.207, 0.207) = 0 
    [0.207, 0.207) = 1 
    [0.207, 0.208) = 1 
    [0.208, 0.208) = 0 
    [0.208, 0.208) = 0 
    [0.208, 0.208) = 0 
    [0.208, 0.209) = 1 
    [0.209, 0.209) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.205 s/op
     p(50.0000) =      0.206 s/op
     p(90.0000) =      0.208 s/op
     p(95.0000) =      0.208 s/op
     p(99.0000) =      0.208 s/op
     p(99.9000) =      0.208 s/op
     p(99.9900) =      0.208 s/op
     p(99.9990) =      0.208 s/op
     p(99.9999) =      0.208 s/op
    p(100.0000) =      0.208 s/op

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange:·gc.alloc.rate":
  742.863 ±(99.9%) 1.862 MB/sec [Average]
  (min, avg, max) = (740.512, 742.863, 744.380), stdev = 1.232
  CI (99.9%): [741.001, 744.726] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange:·gc.alloc.rate.norm":
  550534750.400 ±(99.9%) 16763.249 B/op [Average]
  (min, avg, max) = (550529448.000, 550534750.400, 550555800.000), stdev = 11087.851
  CI (99.9%): [550517987.151, 550551513.649] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space":
  766.009 ±(99.9%) 406.470 MB/sec [Average]
  (min, avg, max) = (627.245, 766.009, 1277.164), stdev = 268.854
  CI (99.9%): [359.539, 1172.478] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm":
  567908761.600 ±(99.9%) 302820092.685 B/op [Average]
  (min, avg, max) = (465567744.000, 567908761.600, 947912704.000), stdev = 200296741.875
  CI (99.9%): [265088668.915, 870728854.285] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space":
  1.298 ±(99.9%) 5.430 MB/sec [Average]
  (min, avg, max) = (≈ 0, 1.298, 11.481), stdev = 3.592
  CI (99.9%): [≈ 0, 6.728] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm":
  963118.400 ±(99.9%) 4030660.007 B/op [Average]
  (min, avg, max) = (≈ 0, 963118.400, 8521672.000), stdev = 2666032.032
  CI (99.9%): [≈ 0, 4993778.407] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange:·gc.count":
  12.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.422
  CI (99.9%): [12.000, 12.000] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange:·gc.time":
  13.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 1.300, 3.000), stdev = 0.949
  CI (99.9%): [13.000, 13.000] (assumes normal distribution)


# Run complete. Total time: 00:00:14

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                                   Mode  Cnt          Score           Error   Units
BlackscholesPatternBenchmark.indexInRange                                     ss   10          0.206 ±         0.002    s/op
BlackscholesPatternBenchmark.indexInRange:·gc.alloc.rate                      ss   10        742.863 ±         1.862  MB/sec
BlackscholesPatternBenchmark.indexInRange:·gc.alloc.rate.norm                 ss   10  550534750.400 ±     16763.249    B/op
BlackscholesPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space             ss   10        766.009 ±       406.470  MB/sec
BlackscholesPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm        ss   10  567908761.600 ± 302820092.685    B/op
BlackscholesPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space         ss   10          1.298 ±         5.430  MB/sec
BlackscholesPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm    ss   10     963118.400 ±   4030660.007    B/op
BlackscholesPatternBenchmark.indexInRange:·gc.count                           ss   10         12.000                  counts
BlackscholesPatternBenchmark.indexInRange:·gc.time                            ss   10         13.000                      ms

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-16_07:11:34/blackscholes/BlackscholesPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 486014.231 bytes/s; standard:  0.181 s, 87906 bytes, 1104 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1727328 bytes; nmethods_code_size: 1224320 bytes}
  C2 {speed: 68689.479 bytes/s; standard:  0.159 s, 11097 bytes, 89 methods; osr:  0.003 s, 66 bytes, 2 methods; nmethods_size: 95160 bytes; nmethods_code_size: 60672 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 144422.111 bytes/s; standard:  0.005 s, 678 bytes, 143 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 34408 bytes; nmethods_code_size: 21792 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 495116.621 bytes/s; standard:  0.176 s, 87228 bytes, 961 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1692920 bytes; nmethods_code_size: 1202528 bytes}
  Tier4 {speed: 68689.479 bytes/s; standard:  0.159 s, 11097 bytes, 89 methods; osr:  0.003 s, 66 bytes, 2 methods; nmethods_size: 95160 bytes; nmethods_code_size: 60672 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.343 s
    Standard compilation   :   0.340 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.003 s, Average : 0.002 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.179 s
       Setup time:            0.001 s
       Build HIR:             0.070 s
         Parse:                 0.054 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.003 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.065 s
         LIR Gen:               0.013 s
         Linear Scan:           0.051 s
         Other:                 0.001 s
       Code Emission:         0.020 s
       Code Installation:     0.017 s
       Other:                 0.005 s

    C2 Compile Time:        0.164 s
       Parse:                 0.023 s
       Optimize:              0.051 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.006 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.001 s
         IdealLoop:             0.033 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.001 s
         Other:                 0.006 s
       Matcher:                    0.013 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.015 s
       Regalloc:              0.051 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.009 s
         Compute Liveness:      0.018 s
         Regalloc Split:        0.007 s
         Postalloc Copy Rem:    0.007 s
         Merge multidefs:       0.001 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.000 s
         Coalesce 3:            0.000 s
         Cache LRG:             0.000 s
         Simplify:              0.002 s
         Select:                0.002 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.009 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.003 s
         Fill buffer:           0.003 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :     1195 methods
    Standard compilation    :     1193 methods
    On stack replacement    :        2 methods
  Total compiled bytecodes  :    99069 bytes
    Standard compilation    :    99003 bytes
    On stack replacement    :       66 bytes
  Average compilation speed :   288506 bytes/s

  nmethod code size         :  1822488 bytes
  nmethod total size        :  1284992 bytes
