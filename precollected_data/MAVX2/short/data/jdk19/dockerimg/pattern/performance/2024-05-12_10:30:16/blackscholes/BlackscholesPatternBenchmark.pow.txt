# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dinput=/blackscholes/input/in_512K.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.blackscholes.BlackscholesPatternBenchmark.pow

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.912 s/op
# Warmup Iteration   2: 0.763 s/op
# Warmup Iteration   3: 0.702 s/op
# Warmup Iteration   4: 0.697 s/op
# Warmup Iteration   5: 0.697 s/op
# Warmup Iteration   6: 0.699 s/op
# Warmup Iteration   7: 0.696 s/op
# Warmup Iteration   8: 0.698 s/op
# Warmup Iteration   9: 0.702 s/op
# Warmup Iteration  10: 0.701 s/op
Iteration   1: 0.695 s/op
Iteration   2: 0.703 s/op
Iteration   3: 0.694 s/op
Iteration   4: 0.700 s/op
Iteration   5: 0.695 s/op
Iteration   6: 0.695 s/op
Iteration   7: 0.703 s/op
Iteration   8: 0.696 s/op
Iteration   9: 0.697 s/op
Iteration  10: 0.700 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 380421.689 bytes/s; standard:  0.209 s, 79342 bytes, 1056 methods; osr:  0.005 s, 2167 bytes, 4 methods; nmethods_size: 1892576 bytes; nmethods_code_size: 1359008 bytes}
  C2 {speed: 69099.671 bytes/s; standard:  0.463 s, 33029 bytes, 190 methods; osr:  0.051 s, 2462 bytes, 13 methods; nmethods_size: 267264 bytes; nmethods_code_size: 160992 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 125469.319 bytes/s; standard:  0.005 s, 619 bytes, 128 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 30656 bytes; nmethods_code_size: 19392 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 386430.502 bytes/s; standard:  0.204 s, 78723 bytes, 928 methods; osr:  0.005 s, 2167 bytes, 4 methods; nmethods_size: 1861920 bytes; nmethods_code_size: 1339616 bytes}
  Tier4 {speed: 69099.671 bytes/s; standard:  0.463 s, 33029 bytes, 190 methods; osr:  0.051 s, 2462 bytes, 13 methods; nmethods_size: 267264 bytes; nmethods_code_size: 160992 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.728 s
    Standard compilation   :   0.672 s, Average : 0.001 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.056 s, Average : 0.003 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.212 s
       Setup time:            0.001 s
       Build HIR:             0.096 s
         Parse:                 0.080 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.003 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.069 s
         LIR Gen:               0.015 s
         Linear Scan:           0.054 s
         Other:                 0.001 s
       Code Emission:         0.022 s
       Code Installation:     0.018 s
       Other:                 0.005 s

    C2 Compile Time:        0.514 s
       Parse:                 0.096 s
       Optimize:              0.193 s
         Escape Analysis:       0.005 s
           Conn Graph:            0.004 s
           Macro Eliminate:       0.001 s
         GVN 1:                 0.014 s
         Incremental Inline:    0.008 s
           IdealLoop:             0.000 s
          (IGVN:                  0.002 s)
          (Inline:                0.006 s)
          (Prune Useless:         0.001 s)
           Other:                 0.008 s
         Vector:                0.005 s
           Box elimination:     0.005 s
             IGVN:              0.001 s
             Prune Useless:     0.001 s
         Renumber Live:         0.001 s
         IdealLoop:             0.124 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.003 s
         GVN 2:                 0.002 s
         Macro Expand:          0.009 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.003 s
         Other:                 0.020 s
       Matcher:                    0.030 s
         Post Selection Cleanup:   0.003 s
       Scheduler:                  0.034 s
       Regalloc:              0.129 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.003 s
         Build IFG (phys):      0.029 s
         Compute Liveness:      0.044 s
         Regalloc Split:        0.013 s
         Postalloc Copy Rem:    0.017 s
         Merge multidefs:       0.003 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.004 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.002 s
         Cache LRG:             0.000 s
         Simplify:              0.005 s
         Select:                0.007 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.026 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.004 s
         Build OOP maps:        0.007 s
         Fill buffer:           0.006 s
         Code Installation:     0.003 s
         Other:                 0.006 s

  Total compiled methods    :     1263 methods
    Standard compilation    :     1246 methods
    On stack replacement    :       17 methods
  Total compiled bytecodes  :   117000 bytes
    Standard compilation    :   112371 bytes
    On stack replacement    :     4629 bytes
  Average compilation speed :   160740 bytes/s

  nmethod code size         :  2159840 bytes
  nmethod total size        :  1520000 bytes


Result "jvbench.blackscholes.BlackscholesPatternBenchmark.pow":
  N = 10
  mean =      0.698 ±(99.9%) 0.005 s/op

  Histogram, s/op:
    [0.693, 0.694) = 1 
    [0.694, 0.695) = 1 
    [0.695, 0.696) = 2 
    [0.696, 0.697) = 1 
    [0.697, 0.698) = 1 
    [0.698, 0.699) = 0 
    [0.699, 0.700) = 2 
    [0.700, 0.701) = 0 
    [0.701, 0.702) = 0 
    [0.702, 0.703) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.694 s/op
     p(50.0000) =      0.697 s/op
     p(90.0000) =      0.703 s/op
     p(95.0000) =      0.703 s/op
     p(99.0000) =      0.703 s/op
     p(99.9000) =      0.703 s/op
     p(99.9900) =      0.703 s/op
     p(99.9990) =      0.703 s/op
     p(99.9999) =      0.703 s/op
    p(100.0000) =      0.703 s/op


# Run complete. Total time: 00:00:14

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                         Mode  Cnt  Score   Error  Units
BlackscholesPatternBenchmark.pow    ss   10  0.698 ± 0.005   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-12_10:30:16/blackscholes/BlackscholesPatternBenchmark.pow.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 472948.011 bytes/s; standard:  0.136 s, 64102 bytes, 872 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 1278416 bytes; nmethods_code_size: 908256 bytes}
  C2 {speed: 70860.077 bytes/s; standard:  0.133 s, 9618 bytes, 73 methods; osr:  0.004 s, 66 bytes, 2 methods; nmethods_size: 84392 bytes; nmethods_code_size: 53376 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 133530.149 bytes/s; standard:  0.005 s, 605 bytes, 128 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 30752 bytes; nmethods_code_size: 19456 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 484564.989 bytes/s; standard:  0.131 s, 63497 bytes, 744 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 1247664 bytes; nmethods_code_size: 888800 bytes}
  Tier4 {speed: 70860.077 bytes/s; standard:  0.133 s, 9618 bytes, 73 methods; osr:  0.004 s, 66 bytes, 2 methods; nmethods_size: 84392 bytes; nmethods_code_size: 53376 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.274 s
    Standard compilation   :   0.268 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.005 s, Average : 0.002 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.135 s
       Setup time:            0.001 s
       Build HIR:             0.052 s
         Parse:                 0.040 s
         Optimize blocks:       0.000 s
         GVN:                   0.004 s
         Null checks elim:      0.003 s
         Range checks elim:     0.001 s
         Other:                 0.004 s
       Emit LIR:              0.048 s
         LIR Gen:               0.010 s
         Linear Scan:           0.038 s
       Code Emission:         0.016 s
       Code Installation:     0.014 s
       Other:                 0.005 s

    C2 Compile Time:        0.138 s
       Parse:                 0.018 s
       Optimize:              0.043 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.004 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.028 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.000 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.001 s
         Other:                 0.005 s
       Matcher:                    0.010 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.012 s
       Regalloc:              0.044 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.009 s
         Compute Liveness:      0.016 s
         Regalloc Split:        0.006 s
         Postalloc Copy Rem:    0.007 s
         Merge multidefs:       0.001 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.002 s
         Coalesce 2:            0.000 s
         Coalesce 3:            0.000 s
         Cache LRG:             0.000 s
         Simplify:              0.002 s
         Select:                0.002 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.008 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.002 s
         Fill buffer:           0.002 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :      948 methods
    Standard compilation    :      945 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    74435 bytes
    Standard compilation    :    73720 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   272084 bytes/s

  nmethod code size         :  1362808 bytes
  nmethod total size        :   961632 bytes
