# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dx=128 -Dy=128 -Dz=24 -Dnp=32768
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.particlefilter.ParticlefilterPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 9.866 s/op
# Warmup Iteration   2: 9.602 s/op
# Warmup Iteration   3: 5.329 s/op
# Warmup Iteration   4: 5.417 s/op
# Warmup Iteration   5: 5.380 s/op
# Warmup Iteration   6: 5.389 s/op
# Warmup Iteration   7: 5.388 s/op
# Warmup Iteration   8: 5.383 s/op
# Warmup Iteration   9: 5.382 s/op
# Warmup Iteration  10: 5.383 s/op
Iteration   1: 5.379 s/op
Iteration   2: 5.395 s/op
Iteration   3: 5.396 s/op
Iteration   4: 5.396 s/op
Iteration   5: 5.399 s/op
Iteration   6: 5.415 s/op
Iteration   7: 5.424 s/op
Iteration   8: 5.433 s/op
Iteration   9: 5.432 s/op
Iteration  10: 5.427 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 249433.750 bytes/s; standard:  0.208 s, 66500 bytes, 969 methods; osr:  0.102 s, 10831 bytes, 9 methods; nmethods_size: 2666368 bytes; nmethods_code_size: 1910176 bytes}
  C2 {speed: 51451.582 bytes/s; standard:  0.438 s, 21255 bytes, 170 methods; osr:  0.322 s, 17839 bytes, 18 methods; nmethods_size: 323600 bytes; nmethods_code_size: 206688 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 147558.423 bytes/s; standard:  0.004 s, 559 bytes, 116 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 27808 bytes; nmethods_code_size: 17600 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 250694.004 bytes/s; standard:  0.204 s, 65941 bytes, 853 methods; osr:  0.102 s, 10831 bytes, 9 methods; nmethods_size: 2638560 bytes; nmethods_code_size: 1892576 bytes}
  Tier4 {speed: 51451.582 bytes/s; standard:  0.438 s, 21255 bytes, 170 methods; osr:  0.322 s, 17839 bytes, 18 methods; nmethods_size: 323600 bytes; nmethods_code_size: 206688 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   1.070 s
    Standard compilation   :   0.646 s, Average : 0.001 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.424 s, Average : 0.016 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.308 s
       Setup time:            0.001 s
       Build HIR:             0.124 s
         Parse:                 0.099 s
         Optimize blocks:       0.000 s
         GVN:                   0.010 s
         Null checks elim:      0.005 s
         Range checks elim:     0.001 s
         Other:                 0.009 s
       Emit LIR:              0.121 s
         LIR Gen:               0.020 s
         Linear Scan:           0.100 s
         Other:                 0.001 s
       Code Emission:         0.037 s
       Code Installation:     0.022 s
       Other:                 0.004 s

    C2 Compile Time:        0.760 s
       Parse:                 0.109 s
       Optimize:              0.331 s
         Escape Analysis:       0.006 s
           Conn Graph:            0.006 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.015 s
         Incremental Inline:    0.013 s
           IdealLoop:             0.000 s
          (IGVN:                  0.005 s)
          (Inline:                0.006 s)
          (Prune Useless:         0.002 s)
           Other:                 0.013 s
         Vector:                0.010 s
           Box elimination:     0.010 s
             IGVN:              0.003 s
             Prune Useless:     0.002 s
         Renumber Live:         0.001 s
         IdealLoop:             0.247 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.002 s
         GVN 2:                 0.001 s
         Macro Expand:          0.011 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.003 s
         Other:                 0.022 s
       Matcher:                    0.031 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.036 s
       Regalloc:              0.217 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.004 s
         Build IFG (phys):      0.052 s
         Compute Liveness:      0.061 s
         Regalloc Split:        0.023 s
         Postalloc Copy Rem:    0.024 s
         Merge multidefs:       0.004 s
         Fixup Spills:          0.001 s
         Compact:               0.000 s
         Coalesce 1:            0.010 s
         Coalesce 2:            0.004 s
         Coalesce 3:            0.002 s
         Cache LRG:             0.001 s
         Simplify:              0.012 s
         Select:                0.014 s
         Other:                 0.006 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.031 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.005 s
         Build OOP maps:        0.007 s
         Fill buffer:           0.007 s
         Code Installation:     0.005 s
         Other:                 0.007 s

  Total compiled methods    :     1166 methods
    Standard compilation    :     1139 methods
    On stack replacement    :       27 methods
  Total compiled bytecodes  :   116425 bytes
    Standard compilation    :    87755 bytes
    On stack replacement    :    28670 bytes
  Average compilation speed :   108823 bytes/s

  nmethod code size         :  2989968 bytes
  nmethod total size        :  2116864 bytes


Result "jvbench.particlefilter.ParticlefilterPatternBenchmark.indexInRange":
  N = 10
  mean =      5.410 ±(99.9%) 0.029 s/op

  Histogram, s/op:
    [5.370, 5.375) = 0 
    [5.375, 5.380) = 1 
    [5.380, 5.385) = 0 
    [5.385, 5.390) = 0 
    [5.390, 5.395) = 1 
    [5.395, 5.400) = 3 
    [5.400, 5.405) = 0 
    [5.405, 5.410) = 0 
    [5.410, 5.415) = 1 
    [5.415, 5.420) = 0 
    [5.420, 5.425) = 1 
    [5.425, 5.430) = 1 
    [5.430, 5.435) = 2 
    [5.435, 5.440) = 0 

  Percentiles, s/op:
      p(0.0000) =      5.379 s/op
     p(50.0000) =      5.407 s/op
     p(90.0000) =      5.433 s/op
     p(95.0000) =      5.433 s/op
     p(99.0000) =      5.433 s/op
     p(99.9000) =      5.433 s/op
     p(99.9900) =      5.433 s/op
     p(99.9990) =      5.433 s/op
     p(99.9999) =      5.433 s/op
    p(100.0000) =      5.433 s/op


# Run complete. Total time: 00:01:56

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                    Mode  Cnt  Score   Error  Units
ParticlefilterPatternBenchmark.indexInRange    ss   10  5.410 ± 0.029   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-12_10:30:16/particlefilter/ParticlefilterPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 483623.394 bytes/s; standard:  0.132 s, 63641 bytes, 868 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 1271032 bytes; nmethods_code_size: 902752 bytes}
  C2 {speed: 60364.990 bytes/s; standard:  0.106 s, 6534 bytes, 75 methods; osr:  0.004 s, 66 bytes, 2 methods; nmethods_size: 61976 bytes; nmethods_code_size: 39648 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 131133.895 bytes/s; standard:  0.005 s, 610 bytes, 129 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 31000 bytes; nmethods_code_size: 19616 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 496405.264 bytes/s; standard:  0.127 s, 63031 bytes, 739 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 1240032 bytes; nmethods_code_size: 883136 bytes}
  Tier4 {speed: 60364.990 bytes/s; standard:  0.106 s, 6534 bytes, 75 methods; osr:  0.004 s, 66 bytes, 2 methods; nmethods_size: 61976 bytes; nmethods_code_size: 39648 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.242 s
    Standard compilation   :   0.237 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.005 s, Average : 0.002 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.131 s
       Setup time:            0.001 s
       Build HIR:             0.051 s
         Parse:                 0.039 s
         Optimize blocks:       0.000 s
         GVN:                   0.004 s
         Null checks elim:      0.002 s
         Range checks elim:     0.001 s
         Other:                 0.004 s
       Emit LIR:              0.048 s
         LIR Gen:               0.010 s
         Linear Scan:           0.038 s
         Other:                 0.001 s
       Code Emission:         0.015 s
       Code Installation:     0.012 s
       Other:                 0.004 s

    C2 Compile Time:        0.111 s
       Parse:                 0.021 s
       Optimize:              0.049 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.005 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.033 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.002 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.001 s
         Other:                 0.006 s
       Matcher:                    0.011 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.013 s
       Regalloc:              0.053 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.010 s
         Compute Liveness:      0.017 s
         Regalloc Split:        0.007 s
         Postalloc Copy Rem:    0.008 s
         Merge multidefs:       0.002 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.000 s
         Cache LRG:             0.000 s
         Simplify:              0.002 s
         Select:                0.003 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.009 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.003 s
         Fill buffer:           0.003 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :      946 methods
    Standard compilation    :      943 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    70890 bytes
    Standard compilation    :    70175 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   292608 bytes/s

  nmethod code size         :  1333008 bytes
  nmethod total size        :   942400 bytes
