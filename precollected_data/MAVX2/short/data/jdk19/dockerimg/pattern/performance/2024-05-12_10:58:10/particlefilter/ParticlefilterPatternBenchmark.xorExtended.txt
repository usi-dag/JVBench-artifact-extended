# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19-xor/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dx=128 -Dy=128 -Dz=24 -Dnp=32768
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.particlefilter.ParticlefilterPatternBenchmark.xorExtended

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 8.894 s/op
# Warmup Iteration   2: 8.630 s/op
# Warmup Iteration   3: 5.709 s/op
# Warmup Iteration   4: 5.613 s/op
# Warmup Iteration   5: 5.639 s/op
# Warmup Iteration   6: 5.646 s/op
# Warmup Iteration   7: 5.542 s/op
# Warmup Iteration   8: 5.548 s/op
# Warmup Iteration   9: 5.544 s/op
# Warmup Iteration  10: 5.571 s/op
Iteration   1: 5.547 s/op
Iteration   2: 5.583 s/op
Iteration   3: 5.541 s/op
Iteration   4: 5.545 s/op
Iteration   5: 5.562 s/op
Iteration   6: 5.563 s/op
Iteration   7: 5.561 s/op
Iteration   8: 5.549 s/op
Iteration   9: 5.571 s/op
Iteration  10: 5.570 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 355617.318 bytes/s; standard:  0.179 s, 64322 bytes, 907 methods; osr:  0.015 s, 4610 bytes, 7 methods; nmethods_size: 1775488 bytes; nmethods_code_size: 1249632 bytes}
  C2 {speed: 42462.507 bytes/s; standard:  0.445 s, 19121 bytes, 136 methods; osr:  0.492 s, 20688 bytes, 19 methods; nmethods_size: 337480 bytes; nmethods_code_size: 219680 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 155405.566 bytes/s; standard:  0.004 s, 549 bytes, 114 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 27312 bytes; nmethods_code_size: 17280 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 359333.915 bytes/s; standard:  0.175 s, 63773 bytes, 793 methods; osr:  0.015 s, 4610 bytes, 7 methods; nmethods_size: 1748176 bytes; nmethods_code_size: 1232352 bytes}
  Tier4 {speed: 42462.507 bytes/s; standard:  0.445 s, 19121 bytes, 136 methods; osr:  0.492 s, 20688 bytes, 19 methods; nmethods_size: 337480 bytes; nmethods_code_size: 219680 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   1.131 s
    Standard compilation   :   0.624 s, Average : 0.001 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.507 s, Average : 0.020 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.192 s
       Setup time:            0.001 s
       Build HIR:             0.085 s
         Parse:                 0.070 s
         Optimize blocks:       0.000 s
         GVN:                   0.006 s
         Null checks elim:      0.003 s
         Range checks elim:     0.001 s
         Other:                 0.005 s
       Emit LIR:              0.066 s
         LIR Gen:               0.014 s
         Linear Scan:           0.052 s
         Other:                 0.001 s
       Code Emission:         0.021 s
       Code Installation:     0.016 s
       Other:                 0.003 s

    C2 Compile Time:        0.938 s
       Parse:                 0.103 s
       Optimize:              0.451 s
         Escape Analysis:       0.003 s
           Conn Graph:            0.003 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.018 s
         Incremental Inline:    0.011 s
           IdealLoop:             0.000 s
          (IGVN:                  0.005 s)
          (Inline:                0.004 s)
          (Prune Useless:         0.003 s)
           Other:                 0.011 s
         Vector:                0.007 s
           Box elimination:     0.007 s
             IGVN:              0.002 s
             Prune Useless:     0.002 s
         Renumber Live:         0.002 s
         IdealLoop:             0.363 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.002 s
         GVN 2:                 0.002 s
         Macro Expand:          0.014 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.003 s
         Other:                 0.026 s
       Matcher:                    0.032 s
         Post Selection Cleanup:   0.003 s
       Scheduler:                  0.038 s
       Regalloc:              0.272 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.005 s
         Build IFG (phys):      0.064 s
         Compute Liveness:      0.073 s
         Regalloc Split:        0.029 s
         Postalloc Copy Rem:    0.028 s
         Merge multidefs:       0.004 s
         Fixup Spills:          0.001 s
         Compact:               0.000 s
         Coalesce 1:            0.015 s
         Coalesce 2:            0.009 s
         Coalesce 3:            0.002 s
         Cache LRG:             0.001 s
         Simplify:              0.016 s
         Select:                0.018 s
         Other:                 0.009 s
       Block Ordering:        0.003 s
       Peephole:              0.001 s
       Code Emission:           0.036 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.005 s
         Build OOP maps:        0.007 s
         Fill buffer:           0.007 s
         Code Installation:     0.002 s
         Other:                 0.014 s
       Other:                 0.000 s

  Total compiled methods    :     1069 methods
    Standard compilation    :     1043 methods
    On stack replacement    :       26 methods
  Total compiled bytecodes  :   108741 bytes
    Standard compilation    :    83443 bytes
    On stack replacement    :    25298 bytes
  Average compilation speed :    96116 bytes/s

  nmethod code size         :  2112968 bytes
  nmethod total size        :  1469312 bytes


Result "jvbench.particlefilter.ParticlefilterPatternBenchmark.xorExtended":
  N = 10
  mean =      5.559 ±(99.9%) 0.020 s/op

  Histogram, s/op:
    [5.540, 5.543) = 1 
    [5.543, 5.545) = 1 
    [5.545, 5.548) = 1 
    [5.548, 5.550) = 1 
    [5.550, 5.553) = 0 
    [5.553, 5.555) = 0 
    [5.555, 5.558) = 0 
    [5.558, 5.560) = 0 
    [5.560, 5.563) = 2 
    [5.563, 5.565) = 1 
    [5.565, 5.568) = 0 
    [5.568, 5.570) = 0 
    [5.570, 5.573) = 2 
    [5.573, 5.575) = 0 
    [5.575, 5.578) = 0 
    [5.578, 5.580) = 0 
    [5.580, 5.583) = 0 
    [5.583, 5.585) = 1 
    [5.585, 5.588) = 0 

  Percentiles, s/op:
      p(0.0000) =      5.541 s/op
     p(50.0000) =      5.562 s/op
     p(90.0000) =      5.581 s/op
     p(95.0000) =      5.583 s/op
     p(99.0000) =      5.583 s/op
     p(99.9000) =      5.583 s/op
     p(99.9900) =      5.583 s/op
     p(99.9990) =      5.583 s/op
     p(99.9999) =      5.583 s/op
    p(100.0000) =      5.583 s/op


# Run complete. Total time: 00:01:58

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                   Mode  Cnt  Score   Error  Units
ParticlefilterPatternBenchmark.xorExtended    ss   10  5.559 ± 0.020   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-12_10:58:10/particlefilter/ParticlefilterPatternBenchmark.xorExtended.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 495445.088 bytes/s; standard:  0.128 s, 63631 bytes, 871 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 1270256 bytes; nmethods_code_size: 901888 bytes}
  C2 {speed: 70482.174 bytes/s; standard:  0.139 s, 9974 bytes, 78 methods; osr:  0.004 s, 66 bytes, 2 methods; nmethods_size: 89536 bytes; nmethods_code_size: 56288 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 141132.713 bytes/s; standard:  0.004 s, 610 bytes, 129 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 31000 bytes; nmethods_code_size: 19616 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 507655.281 bytes/s; standard:  0.124 s, 63021 bytes, 742 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 1239256 bytes; nmethods_code_size: 882272 bytes}
  Tier4 {speed: 70482.174 bytes/s; standard:  0.139 s, 9974 bytes, 78 methods; osr:  0.004 s, 66 bytes, 2 methods; nmethods_size: 89536 bytes; nmethods_code_size: 56288 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.272 s
    Standard compilation   :   0.267 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.005 s, Average : 0.002 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.128 s
       Setup time:            0.001 s
       Build HIR:             0.050 s
         Parse:                 0.038 s
         Optimize blocks:       0.000 s
         GVN:                   0.004 s
         Null checks elim:      0.002 s
         Range checks elim:     0.001 s
         Other:                 0.004 s
       Emit LIR:              0.046 s
         LIR Gen:               0.009 s
         Linear Scan:           0.036 s
         Other:                 0.001 s
       Code Emission:         0.015 s
       Code Installation:     0.012 s
       Other:                 0.004 s

    C2 Compile Time:        0.144 s
       Parse:                 0.019 s
       Optimize:              0.046 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.004 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.031 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.000 s
         Macro Expand:          0.001 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.001 s
         Other:                 0.005 s
       Matcher:                    0.010 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.012 s
       Regalloc:              0.046 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.009 s
         Compute Liveness:      0.016 s
         Regalloc Split:        0.006 s
         Postalloc Copy Rem:    0.007 s
         Merge multidefs:       0.001 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.002 s
         Coalesce 2:            0.000 s
         Coalesce 3:            0.000 s
         Cache LRG:             0.000 s
         Simplify:              0.002 s
         Select:                0.002 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.008 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.002 s
         Fill buffer:           0.002 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :      952 methods
    Standard compilation    :      949 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    74320 bytes
    Standard compilation    :    73605 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   273045 bytes/s

  nmethod code size         :  1359792 bytes
  nmethod total size        :   958176 bytes
