# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dinput=/blackscholes/input/in_512K.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 0.368 s/op
# Warmup Iteration   2: 0.246 s/op
# Warmup Iteration   3: 0.209 s/op
# Warmup Iteration   4: 0.242 s/op
# Warmup Iteration   5: 0.212 s/op
# Warmup Iteration   6: 0.208 s/op
# Warmup Iteration   7: 0.209 s/op
# Warmup Iteration   8: 0.244 s/op
# Warmup Iteration   9: 0.213 s/op
# Warmup Iteration  10: 0.208 s/op
Iteration   1: 0.210 s/op
Iteration   2: 0.208 s/op
Iteration   3: 0.207 s/op
Iteration   4: 0.211 s/op
Iteration   5: 0.207 s/op
Iteration   6: 0.207 s/op
Iteration   7: 0.206 s/op
Iteration   8: 0.206 s/op
Iteration   9: 0.206 s/op
Iteration  10: 0.207 s/op

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 359132.526 bytes/s; standard:  0.230 s, 82633 bytes, 1126 methods; osr:  0.006 s, 2274 bytes, 4 methods; nmethods_size: 2158872 bytes; nmethods_code_size: 1563552 bytes}
  C2 {speed: 69800.953 bytes/s; standard:  0.499 s, 35690 bytes, 214 methods; osr:  0.052 s, 2788 bytes, 12 methods; nmethods_size: 287128 bytes; nmethods_code_size: 175936 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 126925.030 bytes/s; standard:  0.005 s, 624 bytes, 129 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 30904 bytes; nmethods_code_size: 19552 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 364063.707 bytes/s; standard:  0.225 s, 82009 bytes, 997 methods; osr:  0.006 s, 2274 bytes, 4 methods; nmethods_size: 2127968 bytes; nmethods_code_size: 1544000 bytes}
  Tier4 {speed: 69800.953 bytes/s; standard:  0.499 s, 35690 bytes, 214 methods; osr:  0.052 s, 2788 bytes, 12 methods; nmethods_size: 287128 bytes; nmethods_code_size: 175936 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.788 s
    Standard compilation   :   0.729 s, Average : 0.001 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.058 s, Average : 0.004 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.235 s
       Setup time:            0.001 s
       Build HIR:             0.106 s
         Parse:                 0.088 s
         Optimize blocks:       0.000 s
         GVN:                   0.007 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.076 s
         LIR Gen:               0.016 s
         Linear Scan:           0.059 s
         Other:                 0.001 s
       Code Emission:         0.024 s
       Code Installation:     0.022 s
       Other:                 0.006 s

    C2 Compile Time:        0.552 s
       Parse:                 0.104 s
       Optimize:              0.219 s
         Escape Analysis:       0.005 s
           Conn Graph:            0.004 s
           Macro Eliminate:       0.001 s
         GVN 1:                 0.014 s
         Incremental Inline:    0.012 s
           IdealLoop:             0.000 s
          (IGVN:                  0.002 s)
          (Inline:                0.009 s)
          (Prune Useless:         0.001 s)
           Other:                 0.012 s
         Vector:                0.011 s
           Box elimination:     0.011 s
             IGVN:              0.002 s
             Prune Useless:     0.001 s
         Renumber Live:         0.001 s
         IdealLoop:             0.135 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.003 s
         GVN 2:                 0.004 s
         Macro Expand:          0.010 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.003 s
         Other:                 0.021 s
       Matcher:                    0.031 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.034 s
       Regalloc:              0.132 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.003 s
         Build IFG (phys):      0.029 s
         Compute Liveness:      0.045 s
         Regalloc Split:        0.013 s
         Postalloc Copy Rem:    0.018 s
         Merge multidefs:       0.004 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.004 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.002 s
         Cache LRG:             0.000 s
         Simplify:              0.005 s
         Select:                0.007 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.026 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.005 s
         Build OOP maps:        0.007 s
         Fill buffer:           0.007 s
         Code Installation:     0.003 s
         Other:                 0.005 s

  Total compiled methods    :     1356 methods
    Standard compilation    :     1340 methods
    On stack replacement    :       16 methods
  Total compiled bytecodes  :   123385 bytes
    Standard compilation    :   118323 bytes
    On stack replacement    :     5062 bytes
  Average compilation speed :   156550 bytes/s

  nmethod code size         :  2446000 bytes
  nmethod total size        :  1739488 bytes


Result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange":
  N = 10
  mean =      0.207 ±(99.9%) 0.002 s/op

  Histogram, s/op:
    [0.206, 0.207) = 3 
    [0.207, 0.207) = 3 
    [0.207, 0.208) = 1 
    [0.208, 0.208) = 1 
    [0.208, 0.209) = 0 
    [0.209, 0.209) = 0 
    [0.209, 0.210) = 0 
    [0.210, 0.210) = 1 
    [0.210, 0.211) = 0 
    [0.211, 0.211) = 0 
    [0.211, 0.212) = 1 

  Percentiles, s/op:
      p(0.0000) =      0.206 s/op
     p(50.0000) =      0.207 s/op
     p(90.0000) =      0.211 s/op
     p(95.0000) =      0.211 s/op
     p(99.0000) =      0.211 s/op
     p(99.9000) =      0.211 s/op
     p(99.9900) =      0.211 s/op
     p(99.9990) =      0.211 s/op
     p(99.9999) =      0.211 s/op
    p(100.0000) =      0.211 s/op


# Run complete. Total time: 00:00:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                  Mode  Cnt  Score   Error  Units
BlackscholesPatternBenchmark.indexInRange    ss   10  0.207 ± 0.002   s/op

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/performance/2024-05-12_10:30:16/blackscholes/BlackscholesPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 483483.850 bytes/s; standard:  0.135 s, 65344 bytes, 891 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 1305848 bytes; nmethods_code_size: 927072 bytes}
  C2 {speed: 69628.022 bytes/s; standard:  0.133 s, 9471 bytes, 73 methods; osr:  0.004 s, 66 bytes, 2 methods; nmethods_size: 83328 bytes; nmethods_code_size: 52640 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 142702.243 bytes/s; standard:  0.004 s, 605 bytes, 128 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 30752 bytes; nmethods_code_size: 19456 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 494408.013 bytes/s; standard:  0.131 s, 64739 bytes, 763 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 1275096 bytes; nmethods_code_size: 907616 bytes}
  Tier4 {speed: 69628.022 bytes/s; standard:  0.133 s, 9471 bytes, 73 methods; osr:  0.004 s, 66 bytes, 2 methods; nmethods_size: 83328 bytes; nmethods_code_size: 52640 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.273 s
    Standard compilation   :   0.268 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.005 s, Average : 0.002 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.135 s
       Setup time:            0.001 s
       Build HIR:             0.052 s
         Parse:                 0.040 s
         Optimize blocks:       0.000 s
         GVN:                   0.004 s
         Null checks elim:      0.003 s
         Range checks elim:     0.001 s
         Other:                 0.004 s
       Emit LIR:              0.049 s
         LIR Gen:               0.010 s
         Linear Scan:           0.038 s
         Other:                 0.001 s
       Code Emission:         0.015 s
       Code Installation:     0.013 s
       Other:                 0.005 s

    C2 Compile Time:        0.138 s
       Parse:                 0.017 s
       Optimize:              0.041 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.004 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.027 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.000 s
         Macro Expand:          0.001 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.001 s
         Other:                 0.005 s
       Matcher:                    0.010 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.011 s
       Regalloc:              0.049 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.011 s
         Compute Liveness:      0.016 s
         Regalloc Split:        0.006 s
         Postalloc Copy Rem:    0.007 s
         Merge multidefs:       0.001 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.002 s
         Coalesce 2:            0.000 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.002 s
         Select:                0.003 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.007 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.001 s
         Build OOP maps:        0.002 s
         Fill buffer:           0.002 s
         Code Installation:     0.001 s
         Other:                 0.001 s
       Other:                 0.000 s

  Total compiled methods    :      967 methods
    Standard compilation    :      964 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    75530 bytes
    Standard compilation    :    74815 bytes
    On stack replacement    :      715 bytes
  Average compilation speed :   276195 bytes/s

  nmethod code size         :  1389176 bytes
  nmethod total size        :   979712 bytes
