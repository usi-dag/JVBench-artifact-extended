# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dbenchmark.plugin=jvbench.plugin.SocketPlugin -Dinput=/blackscholes/input/in_512K.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 4.470 s/op
# Warmup Iteration   2: 0.749 s/op
# Warmup Iteration   3: 0.749 s/op
# Warmup Iteration   4: 0.696 s/op
# Warmup Iteration   5: 0.702 s/op
# Warmup Iteration   6: 0.694 s/op
# Warmup Iteration   7: 0.706 s/op
# Warmup Iteration   8: 0.692 s/op
# Warmup Iteration   9: 0.696 s/op
# Warmup Iteration  10: 0.695 s/op
Iteration   1: 0.697 s/op
                 ·gc.alloc.rate:                   416.237 MB/sec
                 ·gc.alloc.rate.norm:              550563040.000 B/op
                 ·gc.churn.G1_Eden_Space:          570.776 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     754974720.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.331 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 437840.000 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         6.000 ms

Iteration   2: 0.699 s/op
                 ·gc.alloc.rate:                   433.766 MB/sec
                 ·gc.alloc.rate.norm:              550530128.000 B/op
                 ·gc.churn.G1_Eden_Space:          297.425 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     377487360.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.017 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 22048.000 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         3.000 ms

Iteration   3: 0.698 s/op
                 ·gc.alloc.rate:                   435.671 MB/sec
                 ·gc.alloc.rate.norm:              550556368.000 B/op
                 ·gc.churn.G1_Eden_Space:          597.433 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     754974720.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 720.000 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         5.000 ms

Iteration   4: 0.692 s/op
                 ·gc.alloc.rate:                   437.482 MB/sec
                 ·gc.alloc.rate.norm:              550530096.000 B/op
                 ·gc.churn.G1_Eden_Space:          299.973 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     377487360.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 6192.000 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   5: 0.695 s/op
                 ·gc.alloc.rate:               436.867 MB/sec
                 ·gc.alloc.rate.norm:          550556312.000 B/op
                 ·gc.churn.G1_Eden_Space:      599.073 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 754974720.000 B/op
                 ·gc.count:                    2.000 counts
                 ·gc.time:                     4.000 ms

Iteration   6: 0.691 s/op
                 ·gc.alloc.rate:                   435.433 MB/sec
                 ·gc.alloc.rate.norm:              550530216.000 B/op
                 ·gc.churn.G1_Eden_Space:          298.568 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     377487360.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2064.000 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         3.000 ms

Iteration   7: 0.695 s/op
                 ·gc.alloc.rate:                   437.601 MB/sec
                 ·gc.alloc.rate.norm:              550556872.000 B/op
                 ·gc.churn.G1_Eden_Space:          600.079 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     754974720.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2704.000 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         4.000 ms

Iteration   8: 0.692 s/op
                 ·gc.alloc.rate:               437.920 MB/sec
                 ·gc.alloc.rate.norm:          550530040.000 B/op
                 ·gc.churn.G1_Eden_Space:      300.273 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 377487360.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   9: 0.692 s/op
                 ·gc.alloc.rate:               437.764 MB/sec
                 ·gc.alloc.rate.norm:          550530040.000 B/op
                 ·gc.churn.G1_Eden_Space:      300.166 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 377487360.000 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     3.000 ms

Iteration  10: 0.695 s/op
                 ·gc.alloc.rate:                   436.859 MB/sec
                 ·gc.alloc.rate.norm:              550556368.000 B/op
                 ·gc.churn.G1_Eden_Space:          599.062 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     754974720.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 6192.000 B/op
                 ·gc.count:                        2.000 counts
                 ·gc.time:                         5.000 ms


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 7193.176 bytes/s; standard: 14.959 s, 106452 bytes, 1436 methods; osr:  0.069 s, 1652 bytes, 3 methods; nmethods_size: 2803344 bytes; nmethods_code_size: 2021664 bytes}
  C2 {speed: 1082.236 bytes/s; standard: 35.102 s, 39305 bytes, 244 methods; osr:  4.070 s, 3088 bytes, 16 methods; nmethods_size: 323544 bytes; nmethods_code_size: 202176 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 4287.338 bytes/s; standard:  0.195 s, 834 bytes, 171 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 41000 bytes; nmethods_code_size: 25952 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 7231.281 bytes/s; standard: 14.765 s, 105618 bytes, 1265 methods; osr:  0.069 s, 1652 bytes, 3 methods; nmethods_size: 2762344 bytes; nmethods_code_size: 1995712 bytes}
  Tier4 {speed: 1082.236 bytes/s; standard: 35.102 s, 39305 bytes, 244 methods; osr:  4.070 s, 3088 bytes, 16 methods; nmethods_size: 323544 bytes; nmethods_code_size: 202176 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :  54.200 s
    Standard compilation   :  50.061 s, Average : 0.030 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   4.139 s, Average : 0.218 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       15.002 s
       Setup time:            0.016 s
       Build HIR:            10.299 s
         Parse:                 9.250 s
         Optimize blocks:       0.005 s
         GVN:                   0.341 s
         Null checks elim:      0.261 s
         Range checks elim:     0.253 s
         Other:                 0.189 s
       Emit LIR:              2.842 s
         LIR Gen:               1.546 s
         Linear Scan:           1.251 s
         Other:                 0.046 s
       Code Emission:         0.939 s
       Code Installation:     0.688 s
       Other:                 0.218 s

    C2 Compile Time:       41.003 s
       Parse:                15.055 s
       Optimize:             11.928 s
         Escape Analysis:       1.086 s
           Conn Graph:            0.847 s
           Macro Eliminate:       0.231 s
         GVN 1:                 1.688 s
         Incremental Inline:    0.236 s
           IdealLoop:             0.000 s
          (IGVN:                  0.025 s)
          (Inline:                0.194 s)
          (Prune Useless:         0.014 s)
           Other:                 0.236 s
         Vector:                0.315 s
           Box elimination:     0.314 s
             IGVN:              0.036 s
             Prune Useless:     0.010 s
         Renumber Live:         0.050 s
         IdealLoop:             5.675 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.203 s
         GVN 2:                 0.030 s
         Macro Expand:          0.934 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.308 s
         Other:                 1.403 s
       Matcher:                    2.801 s
         Post Selection Cleanup:   0.282 s
       Scheduler:                  2.617 s
       Regalloc:              3.875 s
         Ctor Chaitin:          0.006 s
         Build IFG (virt):      0.105 s
         Build IFG (phys):      0.571 s
         Compute Liveness:      1.271 s
         Regalloc Split:        0.644 s
         Postalloc Copy Rem:    0.497 s
         Merge multidefs:       0.090 s
         Fixup Spills:          0.141 s
         Compact:               0.015 s
         Coalesce 1:            0.342 s
         Coalesce 2:            0.136 s
         Coalesce 3:            0.023 s
         Cache LRG:             0.002 s
         Simplify:              0.029 s
         Select:                0.061 s
       Block Ordering:        0.256 s
       Peephole:              0.050 s
       Code Emission:           3.942 s
         Insn Scheduling:       0.000 s
         Shorten branches:      1.219 s
         Build OOP maps:        0.212 s
         Fill buffer:           0.915 s
         Code Installation:     0.194 s
         Other:                 1.402 s
       Other:                 0.285 s

  Total compiled methods    :     1699 methods
    Standard compilation    :     1680 methods
    On stack replacement    :       19 methods
  Total compiled bytecodes  :   150497 bytes
    Standard compilation    :   145757 bytes
    On stack replacement    :     4740 bytes
  Average compilation speed :     2776 bytes/s

  nmethod code size         :  3126888 bytes
  nmethod total size        :  2223840 bytes


Result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange":
  N = 10
  mean =      0.695 ±(99.9%) 0.004 s/op

  Histogram, s/op:
    [0.691, 0.692) = 1 
    [0.692, 0.692) = 2 
    [0.692, 0.693) = 1 
    [0.693, 0.693) = 0 
    [0.693, 0.694) = 0 
    [0.694, 0.694) = 0 
    [0.694, 0.695) = 0 
    [0.695, 0.695) = 2 
    [0.695, 0.696) = 1 
    [0.696, 0.696) = 0 
    [0.696, 0.697) = 0 
    [0.697, 0.697) = 0 
    [0.697, 0.698) = 1 
    [0.698, 0.698) = 0 
    [0.698, 0.699) = 1 
    [0.699, 0.699) = 0 
    [0.699, 0.700) = 1 
    [0.700, 0.700) = 0 

  Percentiles, s/op:
      p(0.0000) =      0.691 s/op
     p(50.0000) =      0.695 s/op
     p(90.0000) =      0.699 s/op
     p(95.0000) =      0.699 s/op
     p(99.0000) =      0.699 s/op
     p(99.9000) =      0.699 s/op
     p(99.9900) =      0.699 s/op
     p(99.9990) =      0.699 s/op
     p(99.9999) =      0.699 s/op
    p(100.0000) =      0.699 s/op

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange:·gc.alloc.rate":
  434.560 ±(99.9%) 9.931 MB/sec [Average]
  (min, avg, max) = (416.237, 434.560, 437.920), stdev = 6.569
  CI (99.9%): [424.629, 444.491] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange:·gc.alloc.rate.norm":
  550543948.000 ±(99.9%) 22260.889 B/op [Average]
  (min, avg, max) = (550530040.000, 550543948.000, 550563040.000), stdev = 14724.200
  CI (99.9%): [550521687.111, 550566208.889] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space":
  446.283 ±(99.9%) 234.616 MB/sec [Average]
  (min, avg, max) = (297.425, 446.283, 600.079), stdev = 155.184
  CI (99.9%): [211.667, 680.899] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm":
  566231040.000 ±(99.9%) 300789011.742 B/op [Average]
  (min, avg, max) = (377487360.000, 566231040.000, 754974720.000), stdev = 198953307.587
  CI (99.9%): [265442028.258, 867020051.742] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space":
  0.036 ±(99.9%) 0.157 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.036, 0.331), stdev = 0.104
  CI (99.9%): [≈ 0, 0.193] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm":
  47776.000 ±(99.9%) 207450.531 B/op [Average]
  (min, avg, max) = (≈ 0, 47776.000, 437840.000), stdev = 137215.682
  CI (99.9%): [≈ 0, 255226.531] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange:·gc.count":
  15.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (1.000, 1.500, 2.000), stdev = 0.527
  CI (99.9%): [15.000, 15.000] (assumes normal distribution)

Secondary result "jvbench.blackscholes.BlackscholesPatternBenchmark.indexInRange:·gc.time":
  37.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (2.000, 3.700, 6.000), stdev = 1.337
  CI (99.9%): [37.000, 37.000] (assumes normal distribution)


# Run complete. Total time: 00:00:55

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                                   Mode  Cnt          Score           Error   Units
BlackscholesPatternBenchmark.indexInRange                                     ss   10          0.695 ±         0.004    s/op
BlackscholesPatternBenchmark.indexInRange:·gc.alloc.rate                      ss   10        434.560 ±         9.931  MB/sec
BlackscholesPatternBenchmark.indexInRange:·gc.alloc.rate.norm                 ss   10  550543948.000 ±     22260.889    B/op
BlackscholesPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space             ss   10        446.283 ±       234.616  MB/sec
BlackscholesPatternBenchmark.indexInRange:·gc.churn.G1_Eden_Space.norm        ss   10  566231040.000 ± 300789011.742    B/op
BlackscholesPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space         ss   10          0.036 ±         0.157  MB/sec
BlackscholesPatternBenchmark.indexInRange:·gc.churn.G1_Survivor_Space.norm    ss   10      47776.000 ±    207450.531    B/op
BlackscholesPatternBenchmark.indexInRange:·gc.count                           ss   10         15.000                  counts
BlackscholesPatternBenchmark.indexInRange:·gc.time                            ss   10         37.000                      ms

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/pattern/pin_vectorial/2024-05-15_18:25:09/blackscholes/BlackscholesPatternBenchmark.indexInRange.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 8138.551 bytes/s; standard: 10.633 s, 86540 bytes, 1097 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1703392 bytes; nmethods_code_size: 1206752 bytes}
  C2 {speed: 788.028 bytes/s; standard: 12.028 s, 11196 bytes, 93 methods; osr:  2.379 s, 157 bytes, 3 methods; nmethods_size: 96728 bytes; nmethods_code_size: 61824 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 3166.899 bytes/s; standard:  0.211 s, 668 bytes, 141 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 33944 bytes; nmethods_code_size: 21504 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 8239.168 bytes/s; standard: 10.422 s, 85872 bytes, 956 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 1669448 bytes; nmethods_code_size: 1185248 bytes}
  Tier4 {speed: 788.028 bytes/s; standard: 12.028 s, 11196 bytes, 93 methods; osr:  2.379 s, 157 bytes, 3 methods; nmethods_size: 96728 bytes; nmethods_code_size: 61824 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :  25.040 s
    Standard compilation   :  22.662 s, Average : 0.019 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   2.379 s, Average : 0.793 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:       10.584 s
       Setup time:            0.015 s
       Build HIR:             6.320 s
         Parse:                 5.397 s
         Optimize blocks:       0.005 s
         GVN:                   0.301 s
         Null checks elim:      0.197 s
         Range checks elim:     0.223 s
         Other:                 0.198 s
       Emit LIR:              2.392 s
         LIR Gen:               1.183 s
         Linear Scan:           1.179 s
         Other:                 0.030 s
       Code Emission:         1.164 s
       Code Installation:     0.458 s
       Other:                 0.234 s

    C2 Compile Time:       16.333 s
       Parse:                 4.067 s
       Optimize:              5.694 s
         Escape Analysis:       0.347 s
           Conn Graph:            0.323 s
           Macro Eliminate:       0.002 s
         GVN 1:                 0.879 s
         Incremental Inline:    0.001 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.001 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.010 s
         IdealLoop:             2.995 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.115 s
         GVN 2:                 0.026 s
         Macro Expand:          0.603 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.141 s
         Other:                 0.559 s
       Matcher:                    1.421 s
         Post Selection Cleanup:   0.101 s
       Scheduler:                  1.226 s
       Regalloc:              2.309 s
         Ctor Chaitin:          0.005 s
         Build IFG (virt):      0.116 s
         Build IFG (phys):      0.328 s
         Compute Liveness:      0.678 s
         Regalloc Split:        0.503 s
         Postalloc Copy Rem:    0.184 s
         Merge multidefs:       0.052 s
         Fixup Spills:          0.041 s
         Compact:               0.003 s
         Coalesce 1:            0.160 s
         Coalesce 2:            0.082 s
         Coalesce 3:            0.020 s
         Cache LRG:             0.001 s
         Simplify:              0.042 s
         Select:                0.045 s
         Other:                 0.048 s
       Block Ordering:        0.144 s
       Peephole:              0.018 s
       Code Emission:           1.173 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.532 s
         Build OOP maps:        0.129 s
         Fill buffer:           0.384 s
         Code Installation:     0.038 s
         Other:                 0.091 s
       Other:                 0.243 s

  Total compiled methods    :     1193 methods
    Standard compilation    :     1190 methods
    On stack replacement    :        3 methods
  Total compiled bytecodes  :    97893 bytes
    Standard compilation    :    97736 bytes
    On stack replacement    :      157 bytes
  Average compilation speed :     3909 bytes/s

  nmethod code size         :  1800120 bytes
  nmethod total size        :  1268576 bytes
