"Benchmark","Mode","Threads","Samples","Score","Score Error (99.9%)","Unit"
"jvbench.canneal.CannealBenchmark.autoVec","ss",1,10,5.322629,0.254926,"s/op"
"jvbench.canneal.CannealBenchmark.autoVec:·gc.alloc.rate","ss",1,10,0.001113,0.000575,"MB/sec"
"jvbench.canneal.CannealBenchmark.autoVec:·gc.alloc.rate.norm","ss",1,10,6768.800000,3161.388448,"B/op"
"jvbench.canneal.CannealBenchmark.autoVec:·gc.count","ss",1,10,0.000000,NaN,"counts"
"jvbench.canneal.CannealBenchmark.explicitVec","ss",1,10,5.227825,0.257941,"s/op"
"jvbench.canneal.CannealBenchmark.explicitVec:·gc.alloc.rate","ss",1,10,165.696381,7.369735,"MB/sec"
"jvbench.canneal.CannealBenchmark.explicitVec:·gc.alloc.rate.norm","ss",1,10,996612265.600000,394858.311387,"B/op"
"jvbench.canneal.CannealBenchmark.explicitVec:·gc.churn.G1_Eden_Space","ss",1,10,163.125967,520.327307,"MB/sec"
"jvbench.canneal.CannealBenchmark.explicitVec:·gc.churn.G1_Eden_Space.norm","ss",1,10,1017538150.400000,3246215697.334703,"B/op"
"jvbench.canneal.CannealBenchmark.explicitVec:·gc.churn.G1_Survivor_Space","ss",1,10,0.000033,0.000158,"MB/sec"
"jvbench.canneal.CannealBenchmark.explicitVec:·gc.churn.G1_Survivor_Space.norm","ss",1,10,206.400000,986.780358,"B/op"
"jvbench.canneal.CannealBenchmark.explicitVec:·gc.count","ss",1,10,3.000000,NaN,"counts"
"jvbench.canneal.CannealBenchmark.explicitVec:·gc.time","ss",1,10,429.000000,NaN,"ms"
"jvbench.canneal.CannealBenchmark.fullVec","ss",1,10,5.037691,0.348726,"s/op"
"jvbench.canneal.CannealBenchmark.fullVec:·gc.alloc.rate","ss",1,10,171.544166,10.648744,"MB/sec"
"jvbench.canneal.CannealBenchmark.fullVec:·gc.alloc.rate.norm","ss",1,10,996609632.800000,395266.745658,"B/op"
"jvbench.canneal.CannealBenchmark.fullVec:·gc.churn.G1_Eden_Space","ss",1,10,160.960732,513.397574,"MB/sec"
"jvbench.canneal.CannealBenchmark.fullVec:·gc.churn.G1_Eden_Space.norm","ss",1,10,976433971.200000,3112163641.493915,"B/op"
"jvbench.canneal.CannealBenchmark.fullVec:·gc.count","ss",1,10,2.000000,NaN,"counts"
"jvbench.canneal.CannealBenchmark.fullVec:·gc.time","ss",1,10,349.000000,NaN,"ms"
"jvbench.canneal.CannealBenchmark.serial","ss",1,10,5.220518,0.126563,"s/op"
"jvbench.canneal.CannealBenchmark.serial:·gc.alloc.rate","ss",1,10,0.001123,0.000500,"MB/sec"
"jvbench.canneal.CannealBenchmark.serial:·gc.alloc.rate.norm","ss",1,10,6768.800000,3161.388448,"B/op"
"jvbench.canneal.CannealBenchmark.serial:·gc.count","ss",1,10,0.000000,NaN,"counts"
