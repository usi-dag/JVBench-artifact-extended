# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dinput=/pathfinder/input/pathfinder_5000_5000.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.pathfinder.PathfinderBenchmark.autoVec

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 5.653 s/op
# Warmup Iteration   2: 5.620 s/op
# Warmup Iteration   3: 5.610 s/op
# Warmup Iteration   4: 5.604 s/op
# Warmup Iteration   5: 5.643 s/op
# Warmup Iteration   6: 5.642 s/op
# Warmup Iteration   7: 5.611 s/op
# Warmup Iteration   8: 5.644 s/op
# Warmup Iteration   9: 5.642 s/op
# Warmup Iteration  10: 5.646 s/op
Iteration   1: 5.641 s/op
                 ·gc.alloc.rate:      0.314 MB/sec
                 ·gc.alloc.rate.norm: 2022120.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 5.646 s/op
                 ·gc.alloc.rate:      0.314 MB/sec
                 ·gc.alloc.rate.norm: 2022120.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.488 s/op
                 ·gc.alloc.rate:      0.639 MB/sec
                 ·gc.alloc.rate.norm: 2002104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.487 s/op
                 ·gc.alloc.rate:      0.639 MB/sec
                 ·gc.alloc.rate.norm: 2002104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.491 s/op
                 ·gc.alloc.rate:      0.638 MB/sec
                 ·gc.alloc.rate.norm: 2002104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 2.490 s/op
                 ·gc.alloc.rate:      0.638 MB/sec
                 ·gc.alloc.rate.norm: 2002104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 2.484 s/op
                 ·gc.alloc.rate:      0.640 MB/sec
                 ·gc.alloc.rate.norm: 2002104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 2.483 s/op
                 ·gc.alloc.rate:      0.640 MB/sec
                 ·gc.alloc.rate.norm: 2002104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 2.484 s/op
                 ·gc.alloc.rate:      0.640 MB/sec
                 ·gc.alloc.rate.norm: 2002104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 2.483 s/op
                 ·gc.alloc.rate:      0.640 MB/sec
                 ·gc.alloc.rate.norm: 2002104.000 B/op
                 ·gc.count:           ≈ 0 counts


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 428744.297 bytes/s; standard:  0.165 s, 70444 bytes, 948 methods; osr:  0.003 s, 1210 bytes, 4 methods; nmethods_size: 1464280 bytes; nmethods_code_size: 1042816 bytes}
  C2 {speed: 97950.114 bytes/s; standard:  0.207 s, 21085 bytes, 110 methods; osr:  0.029 s, 2017 bytes, 5 methods; nmethods_size: 153304 bytes; nmethods_code_size: 97312 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 146656.828 bytes/s; standard:  0.005 s, 704 bytes, 145 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 34776 bytes; nmethods_code_size: 22016 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 437086.273 bytes/s; standard:  0.160 s, 69740 bytes, 803 methods; osr:  0.003 s, 1210 bytes, 4 methods; nmethods_size: 1429504 bytes; nmethods_code_size: 1020800 bytes}
  Tier4 {speed: 97950.114 bytes/s; standard:  0.207 s, 21085 bytes, 110 methods; osr:  0.029 s, 2017 bytes, 5 methods; nmethods_size: 153304 bytes; nmethods_code_size: 97312 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.419 s
    Standard compilation   :   0.372 s, Average : 0.000 s
    Bailed out compilation :   0.016 s, Average : 0.016 s
    On stack replacement   :   0.031 s, Average : 0.003 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.165 s
       Setup time:            0.001 s
       Build HIR:             0.072 s
         Parse:                 0.059 s
         Optimize blocks:       0.000 s
         GVN:                   0.005 s
         Null checks elim:      0.003 s
         Range checks elim:     0.001 s
         Other:                 0.005 s
       Emit LIR:              0.056 s
         LIR Gen:               0.011 s
         Linear Scan:           0.044 s
         Other:                 0.001 s
       Code Emission:         0.017 s
       Code Installation:     0.015 s
       Other:                 0.005 s

    C2 Compile Time:        0.253 s
       Parse:                 0.035 s
       Optimize:              0.092 s
         Escape Analysis:       0.002 s
           Conn Graph:            0.002 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.008 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.066 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.004 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.009 s
       Matcher:                    0.015 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.019 s
       Regalloc:              0.075 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.016 s
         Compute Liveness:      0.025 s
         Regalloc Split:        0.007 s
         Postalloc Copy Rem:    0.011 s
         Merge multidefs:       0.002 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.002 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.003 s
         Select:                0.004 s
         Other:                 0.000 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.013 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.003 s
         Build OOP maps:        0.004 s
         Fill buffer:           0.004 s
         Code Installation:     0.002 s
         Other:                 0.001 s

  Total compiled methods    :     1067 methods
    Standard compilation    :     1058 methods
    On stack replacement    :        9 methods
  Total compiled bytecodes  :    94756 bytes
    Standard compilation    :    91529 bytes
    On stack replacement    :     3227 bytes
  Average compilation speed :   226247 bytes/s

  nmethod code size         :  1617584 bytes
  nmethod total size        :  1140128 bytes


Result "jvbench.pathfinder.PathfinderBenchmark.autoVec":
  N = 10
  mean =      3.118 ±(99.9%) 2.013 s/op

  Histogram, s/op:
    [2.000, 2.250) = 0 
    [2.250, 2.500) = 8 
    [2.500, 2.750) = 0 
    [2.750, 3.000) = 0 
    [3.000, 3.250) = 0 
    [3.250, 3.500) = 0 
    [3.500, 3.750) = 0 
    [3.750, 4.000) = 0 
    [4.000, 4.250) = 0 
    [4.250, 4.500) = 0 
    [4.500, 4.750) = 0 
    [4.750, 5.000) = 0 
    [5.000, 5.250) = 0 
    [5.250, 5.500) = 0 
    [5.500, 5.750) = 2 

  Percentiles, s/op:
      p(0.0000) =      2.483 s/op
     p(50.0000) =      2.488 s/op
     p(90.0000) =      5.645 s/op
     p(95.0000) =      5.646 s/op
     p(99.0000) =      5.646 s/op
     p(99.9000) =      5.646 s/op
     p(99.9900) =      5.646 s/op
     p(99.9990) =      5.646 s/op
     p(99.9999) =      5.646 s/op
    p(100.0000) =      5.646 s/op

Secondary result "jvbench.pathfinder.PathfinderBenchmark.autoVec:·gc.alloc.rate":
  0.574 ±(99.9%) 0.207 MB/sec [Average]
  (min, avg, max) = (0.314, 0.574, 0.640), stdev = 0.137
  CI (99.9%): [0.367, 0.782] (assumes normal distribution)

Secondary result "jvbench.pathfinder.PathfinderBenchmark.autoVec:·gc.alloc.rate.norm":
  2006107.200 ±(99.9%) 12759.300 B/op [Average]
  (min, avg, max) = (2002104.000, 2006107.200, 2022120.000), stdev = 8439.487
  CI (99.9%): [1993347.900, 2018866.500] (assumes normal distribution)

Secondary result "jvbench.pathfinder.PathfinderBenchmark.autoVec:·gc.count":
  ≈ 0 counts


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dinput=/pathfinder/input/pathfinder_5000_5000.input -XX:-UseSuperWord
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.pathfinder.PathfinderBenchmark.explicitVec

# Run progress: 25.00% complete, ETA 00:04:56
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 1.398 s/op
# Warmup Iteration   2: 1.295 s/op
# Warmup Iteration   3: 1.293 s/op
# Warmup Iteration   4: 1.295 s/op
# Warmup Iteration   5: 1.026 s/op
# Warmup Iteration   6: 1.042 s/op
# Warmup Iteration   7: 1.026 s/op
# Warmup Iteration   8: 1.044 s/op
# Warmup Iteration   9: 1.023 s/op
# Warmup Iteration  10: 1.029 s/op
Iteration   1: 1.010 s/op
                 ·gc.alloc.rate:      13.884 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.006 s/op
                 ·gc.alloc.rate:      13.926 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.004 s/op
                 ·gc.alloc.rate:      13.940 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.005 s/op
                 ·gc.alloc.rate:      13.932 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.002 s/op
                 ·gc.alloc.rate:      13.960 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 1.008 s/op
                 ·gc.alloc.rate:      13.906 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 1.005 s/op
                 ·gc.alloc.rate:      13.937 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 1.013 s/op
                 ·gc.alloc.rate:      13.857 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 1.006 s/op
                 ·gc.alloc.rate:      13.926 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 1.004 s/op
                 ·gc.alloc.rate:      13.942 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 365620.419 bytes/s; standard:  0.234 s, 86174 bytes, 1199 methods; osr:  0.008 s, 2198 bytes, 5 methods; nmethods_size: 2127288 bytes; nmethods_code_size: 1536064 bytes}
  C2 {speed: 88466.325 bytes/s; standard:  0.275 s, 24951 bytes, 137 methods; osr:  0.082 s, 6570 bytes, 11 methods; nmethods_size: 208032 bytes; nmethods_code_size: 129216 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 136631.849 bytes/s; standard:  0.005 s, 739 bytes, 152 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 36384 bytes; nmethods_code_size: 23008 bytes}
  Tier2 {speed: 211689.086 bytes/s; standard:  0.000 s, 11 bytes, 1 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 400 bytes; nmethods_code_size: 288 bytes}
  Tier3 {speed: 370896.872 bytes/s; standard:  0.228 s, 85424 bytes, 1046 methods; osr:  0.008 s, 2198 bytes, 5 methods; nmethods_size: 2090504 bytes; nmethods_code_size: 1512768 bytes}
  Tier4 {speed: 88466.325 bytes/s; standard:  0.275 s, 24951 bytes, 137 methods; osr:  0.082 s, 6570 bytes, 11 methods; nmethods_size: 208032 bytes; nmethods_code_size: 129216 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.613 s
    Standard compilation   :   0.509 s, Average : 0.000 s
    Bailed out compilation :   0.015 s, Average : 0.008 s
    On stack replacement   :   0.089 s, Average : 0.006 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.240 s
       Setup time:            0.001 s
       Build HIR:             0.110 s
         Parse:                 0.092 s
         Optimize blocks:       0.000 s
         GVN:                   0.007 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.076 s
         LIR Gen:               0.016 s
         Linear Scan:           0.059 s
         Other:                 0.001 s
       Code Emission:         0.024 s
       Code Installation:     0.021 s
       Other:                 0.007 s

    C2 Compile Time:        0.372 s
       Parse:                 0.067 s
       Optimize:              0.134 s
         Escape Analysis:       0.002 s
           Conn Graph:            0.002 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.010 s
         Incremental Inline:    0.005 s
           IdealLoop:             0.000 s
          (IGVN:                  0.002 s)
          (Inline:                0.003 s)
          (Prune Useless:         0.001 s)
           Other:                 0.005 s
         Vector:                0.003 s
           Box elimination:     0.003 s
             IGVN:              0.001 s
             Prune Useless:     0.001 s
         Renumber Live:         0.001 s
         IdealLoop:             0.090 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.002 s
         GVN 2:                 0.001 s
         Macro Expand:          0.006 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.013 s
       Matcher:                    0.022 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.025 s
       Regalloc:              0.102 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.022 s
         Compute Liveness:      0.034 s
         Regalloc Split:        0.010 s
         Postalloc Copy Rem:    0.015 s
         Merge multidefs:       0.003 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.004 s
         Select:                0.006 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.018 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.003 s
         Build OOP maps:        0.005 s
         Fill buffer:           0.005 s
         Code Installation:     0.002 s
         Other:                 0.002 s

  Total compiled methods    :     1352 methods
    Standard compilation    :     1336 methods
    On stack replacement    :       16 methods
  Total compiled bytecodes  :   119893 bytes
    Standard compilation    :   111125 bytes
    On stack replacement    :     8768 bytes
  Average compilation speed :   195452 bytes/s

  nmethod code size         :  2335320 bytes
  nmethod total size        :  1665280 bytes


Result "jvbench.pathfinder.PathfinderBenchmark.explicitVec":
  N = 10
  mean =      1.006 ±(99.9%) 0.005 s/op

  Histogram, s/op:
    [1.000, 1.001) = 0 
    [1.001, 1.003) = 1 
    [1.003, 1.004) = 0 
    [1.004, 1.005) = 3 
    [1.005, 1.006) = 3 
    [1.006, 1.008) = 0 
    [1.008, 1.009) = 1 
    [1.009, 1.010) = 0 
    [1.010, 1.011) = 1 
    [1.011, 1.013) = 0 
    [1.013, 1.014) = 1 
    [1.014, 1.015) = 0 
    [1.015, 1.016) = 0 
    [1.016, 1.018) = 0 
    [1.018, 1.019) = 0 
    [1.019, 1.020) = 0 

  Percentiles, s/op:
      p(0.0000) =      1.002 s/op
     p(50.0000) =      1.005 s/op
     p(90.0000) =      1.013 s/op
     p(95.0000) =      1.013 s/op
     p(99.0000) =      1.013 s/op
     p(99.9000) =      1.013 s/op
     p(99.9900) =      1.013 s/op
     p(99.9990) =      1.013 s/op
     p(99.9999) =      1.013 s/op
    p(100.0000) =      1.013 s/op

Secondary result "jvbench.pathfinder.PathfinderBenchmark.explicitVec:·gc.alloc.rate":
  13.921 ±(99.9%) 0.046 MB/sec [Average]
  (min, avg, max) = (13.857, 13.921, 13.960), stdev = 0.031
  CI (99.9%): [13.875, 13.967] (assumes normal distribution)

Secondary result "jvbench.pathfinder.PathfinderBenchmark.explicitVec:·gc.alloc.rate.norm":
  21998104.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (21998104.000, 21998104.000, 21998104.000), stdev = 0.001
  CI (99.9%): [21998104.000, 21998104.000] (assumes normal distribution)

Secondary result "jvbench.pathfinder.PathfinderBenchmark.explicitVec:·gc.count":
  ≈ 0 counts


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dinput=/pathfinder/input/pathfinder_5000_5000.input
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.pathfinder.PathfinderBenchmark.fullVec

# Run progress: 50.00% complete, ETA 00:02:11
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 1.365 s/op
# Warmup Iteration   2: 1.259 s/op
# Warmup Iteration   3: 1.256 s/op
# Warmup Iteration   4: 1.281 s/op
# Warmup Iteration   5: 1.026 s/op
# Warmup Iteration   6: 1.008 s/op
# Warmup Iteration   7: 1.007 s/op
# Warmup Iteration   8: 1.014 s/op
# Warmup Iteration   9: 1.013 s/op
# Warmup Iteration  10: 1.040 s/op
Iteration   1: 1.017 s/op
                 ·gc.alloc.rate:      13.825 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.016 s/op
                 ·gc.alloc.rate:      13.828 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.015 s/op
                 ·gc.alloc.rate:      13.843 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.016 s/op
                 ·gc.alloc.rate:      13.829 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.012 s/op
                 ·gc.alloc.rate:      13.872 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 1.015 s/op
                 ·gc.alloc.rate:      13.842 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 1.036 s/op
                 ·gc.alloc.rate:      13.656 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 1.012 s/op
                 ·gc.alloc.rate:      13.866 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 1.015 s/op
                 ·gc.alloc.rate:      13.844 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 1.098 s/op
                 ·gc.alloc.rate:      13.119 MB/sec
                 ·gc.alloc.rate.norm: 21998104.000 B/op
                 ·gc.count:           ≈ 0 counts


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 375008.484 bytes/s; standard:  0.230 s, 87068 bytes, 1208 methods; osr:  0.008 s, 2198 bytes, 5 methods; nmethods_size: 2155152 bytes; nmethods_code_size: 1556256 bytes}
  C2 {speed: 89378.036 bytes/s; standard:  0.279 s, 25820 bytes, 132 methods; osr:  0.073 s, 5655 bytes, 11 methods; nmethods_size: 205688 bytes; nmethods_code_size: 127264 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 145872.586 bytes/s; standard:  0.005 s, 739 bytes, 152 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 36384 bytes; nmethods_code_size: 23008 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 379991.149 bytes/s; standard:  0.225 s, 86329 bytes, 1056 methods; osr:  0.008 s, 2198 bytes, 5 methods; nmethods_size: 2118768 bytes; nmethods_code_size: 1533248 bytes}
  Tier4 {speed: 89378.036 bytes/s; standard:  0.279 s, 25820 bytes, 132 methods; osr:  0.073 s, 5655 bytes, 11 methods; nmethods_size: 205688 bytes; nmethods_code_size: 127264 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.590 s
    Standard compilation   :   0.509 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.081 s, Average : 0.005 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.236 s
       Setup time:            0.001 s
       Build HIR:             0.108 s
         Parse:                 0.090 s
         Optimize blocks:       0.000 s
         GVN:                   0.007 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.006 s
       Emit LIR:              0.075 s
         LIR Gen:               0.016 s
         Linear Scan:           0.058 s
         Other:                 0.001 s
       Code Emission:         0.024 s
       Code Installation:     0.021 s
       Other:                 0.006 s

    C2 Compile Time:        0.353 s
       Parse:                 0.067 s
       Optimize:              0.130 s
         Escape Analysis:       0.002 s
           Conn Graph:            0.002 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.009 s
         Incremental Inline:    0.003 s
           IdealLoop:             0.000 s
          (IGVN:                  0.002 s)
          (Inline:                0.001 s)
          (Prune Useless:         0.001 s)
           Other:                 0.003 s
         Vector:                0.003 s
           Box elimination:     0.003 s
             IGVN:              0.001 s
             Prune Useless:     0.001 s
         Renumber Live:         0.001 s
         IdealLoop:             0.090 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.002 s
         GVN 2:                 0.001 s
         Macro Expand:          0.005 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.012 s
       Matcher:                    0.020 s
         Post Selection Cleanup:   0.002 s
       Scheduler:                  0.024 s
       Regalloc:              0.090 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.002 s
         Build IFG (phys):      0.019 s
         Compute Liveness:      0.030 s
         Regalloc Split:        0.009 s
         Postalloc Copy Rem:    0.014 s
         Merge multidefs:       0.002 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.004 s
         Select:                0.005 s
       Block Ordering:        0.002 s
       Peephole:              0.000 s
       Code Emission:           0.017 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.003 s
         Build OOP maps:        0.005 s
         Fill buffer:           0.005 s
         Code Installation:     0.002 s
         Other:                 0.001 s

  Total compiled methods    :     1356 methods
    Standard compilation    :     1340 methods
    On stack replacement    :       16 methods
  Total compiled bytecodes  :   120741 bytes
    Standard compilation    :   112888 bytes
    On stack replacement    :     7853 bytes
  Average compilation speed :   204578 bytes/s

  nmethod code size         :  2360840 bytes
  nmethod total size        :  1683520 bytes


Result "jvbench.pathfinder.PathfinderBenchmark.fullVec":
  N = 10
  mean =      1.025 ±(99.9%) 0.040 s/op

  Histogram, s/op:
    [1.010, 1.015) = 5 
    [1.015, 1.020) = 3 
    [1.020, 1.025) = 0 
    [1.025, 1.030) = 0 
    [1.030, 1.035) = 0 
    [1.035, 1.040) = 1 
    [1.040, 1.045) = 0 
    [1.045, 1.050) = 0 
    [1.050, 1.055) = 0 
    [1.055, 1.060) = 0 
    [1.060, 1.065) = 0 
    [1.065, 1.070) = 0 
    [1.070, 1.075) = 0 
    [1.075, 1.080) = 0 
    [1.080, 1.085) = 0 
    [1.085, 1.090) = 0 
    [1.090, 1.095) = 0 
    [1.095, 1.100) = 1 

  Percentiles, s/op:
      p(0.0000) =      1.012 s/op
     p(50.0000) =      1.016 s/op
     p(90.0000) =      1.092 s/op
     p(95.0000) =      1.098 s/op
     p(99.0000) =      1.098 s/op
     p(99.9000) =      1.098 s/op
     p(99.9900) =      1.098 s/op
     p(99.9990) =      1.098 s/op
     p(99.9999) =      1.098 s/op
    p(100.0000) =      1.098 s/op

Secondary result "jvbench.pathfinder.PathfinderBenchmark.fullVec:·gc.alloc.rate":
  13.752 ±(99.9%) 0.349 MB/sec [Average]
  (min, avg, max) = (13.119, 13.752, 13.872), stdev = 0.231
  CI (99.9%): [13.404, 14.101] (assumes normal distribution)

Secondary result "jvbench.pathfinder.PathfinderBenchmark.fullVec:·gc.alloc.rate.norm":
  21998104.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (21998104.000, 21998104.000, 21998104.000), stdev = 0.001
  CI (99.9%): [21998104.000, 21998104.000] (assumes normal distribution)

Secondary result "jvbench.pathfinder.PathfinderBenchmark.fullVec:·gc.count":
  ≈ 0 counts


# JMH version: 1.35
# VM version: JDK 19-internal, OpenJDK 64-Bit Server VM, 19-internal-adhoc..jdk19u
# VM invoker: /artifact/jdk19/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+CITime --add-modules=jdk.incubator.vector -Dinput=/pathfinder/input/pathfinder_5000_5000.input -XX:-UseSuperWord
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, single-shot each
# Measurement: 10 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: jvbench.pathfinder.PathfinderBenchmark.serial

# Run progress: 75.00% complete, ETA 00:00:54
# Fork: 1 of 1
WARNING: Using incubator modules: jdk.incubator.vector
# Warmup Iteration   1: 5.911 s/op
# Warmup Iteration   2: 5.885 s/op
# Warmup Iteration   3: 5.908 s/op
# Warmup Iteration   4: 5.907 s/op
# Warmup Iteration   5: 5.877 s/op
# Warmup Iteration   6: 5.861 s/op
# Warmup Iteration   7: 5.834 s/op
# Warmup Iteration   8: 5.869 s/op
# Warmup Iteration   9: 5.863 s/op
# Warmup Iteration  10: 5.865 s/op
Iteration   1: 5.862 s/op
                 ·gc.alloc.rate:      0.303 MB/sec
                 ·gc.alloc.rate.norm: 2022120.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 5.880 s/op
                 ·gc.alloc.rate:      0.302 MB/sec
                 ·gc.alloc.rate.norm: 2022120.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.471 s/op
                 ·gc.alloc.rate:      0.643 MB/sec
                 ·gc.alloc.rate.norm: 2002104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.464 s/op
                 ·gc.alloc.rate:      0.644 MB/sec
                 ·gc.alloc.rate.norm: 2002104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.462 s/op
                 ·gc.alloc.rate:      0.645 MB/sec
                 ·gc.alloc.rate.norm: 2002104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   6: 2.466 s/op
                 ·gc.alloc.rate:      0.644 MB/sec
                 ·gc.alloc.rate.norm: 2002104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   7: 2.475 s/op
                 ·gc.alloc.rate:      0.642 MB/sec
                 ·gc.alloc.rate.norm: 2002104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   8: 2.470 s/op
                 ·gc.alloc.rate:      0.643 MB/sec
                 ·gc.alloc.rate.norm: 2002104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   9: 2.488 s/op
                 ·gc.alloc.rate:      0.639 MB/sec
                 ·gc.alloc.rate.norm: 2002104.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration  10: 2.482 s/op
                 ·gc.alloc.rate:      0.640 MB/sec
                 ·gc.alloc.rate.norm: 2002104.000 B/op
                 ·gc.count:           ≈ 0 counts


Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 423295.853 bytes/s; standard:  0.168 s, 70810 bytes, 948 methods; osr:  0.002 s, 1210 bytes, 4 methods; nmethods_size: 1488816 bytes; nmethods_code_size: 1059648 bytes}
  C2 {speed: 98239.690 bytes/s; standard:  0.222 s, 22246 bytes, 110 methods; osr:  0.016 s, 1102 bytes, 5 methods; nmethods_size: 158512 bytes; nmethods_code_size: 100736 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 139501.271 bytes/s; standard:  0.005 s, 704 bytes, 145 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 34776 bytes; nmethods_code_size: 22016 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 431970.783 bytes/s; standard:  0.163 s, 70106 bytes, 803 methods; osr:  0.002 s, 1210 bytes, 4 methods; nmethods_size: 1454040 bytes; nmethods_code_size: 1037632 bytes}
  Tier4 {speed: 98239.690 bytes/s; standard:  0.222 s, 22246 bytes, 110 methods; osr:  0.016 s, 1102 bytes, 5 methods; nmethods_size: 158512 bytes; nmethods_code_size: 100736 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.408 s
    Standard compilation   :   0.390 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.018 s, Average : 0.002 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.169 s
       Setup time:            0.001 s
       Build HIR:             0.075 s
         Parse:                 0.061 s
         Optimize blocks:       0.000 s
         GVN:                   0.005 s
         Null checks elim:      0.003 s
         Range checks elim:     0.001 s
         Other:                 0.005 s
       Emit LIR:              0.056 s
         LIR Gen:               0.012 s
         Linear Scan:           0.043 s
         Other:                 0.001 s
       Code Emission:         0.017 s
       Code Installation:     0.015 s
       Other:                 0.005 s

    C2 Compile Time:        0.239 s
       Parse:                 0.035 s
       Optimize:              0.081 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.007 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.056 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.004 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.009 s
       Matcher:                    0.015 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.018 s
       Regalloc:              0.074 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.016 s
         Compute Liveness:      0.024 s
         Regalloc Split:        0.007 s
         Postalloc Copy Rem:    0.011 s
         Merge multidefs:       0.002 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.002 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.003 s
         Select:                0.004 s
         Other:                 0.000 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.013 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.004 s
         Fill buffer:           0.004 s
         Code Installation:     0.002 s
         Other:                 0.001 s

  Total compiled methods    :     1067 methods
    Standard compilation    :     1058 methods
    On stack replacement    :        9 methods
  Total compiled bytecodes  :    95368 bytes
    Standard compilation    :    93056 bytes
    On stack replacement    :     2312 bytes
  Average compilation speed :   233586 bytes/s

  nmethod code size         :  1647328 bytes
  nmethod total size        :  1160384 bytes


Result "jvbench.pathfinder.PathfinderBenchmark.serial":
  N = 10
  mean =      3.152 ±(99.9%) 2.167 s/op

  Histogram, s/op:
    [2.000, 2.250) = 0 
    [2.250, 2.500) = 8 
    [2.500, 2.750) = 0 
    [2.750, 3.000) = 0 
    [3.000, 3.250) = 0 
    [3.250, 3.500) = 0 
    [3.500, 3.750) = 0 
    [3.750, 4.000) = 0 
    [4.000, 4.250) = 0 
    [4.250, 4.500) = 0 
    [4.500, 4.750) = 0 
    [4.750, 5.000) = 0 
    [5.000, 5.250) = 0 
    [5.250, 5.500) = 0 
    [5.500, 5.750) = 0 

  Percentiles, s/op:
      p(0.0000) =      2.462 s/op
     p(50.0000) =      2.473 s/op
     p(90.0000) =      5.878 s/op
     p(95.0000) =      5.880 s/op
     p(99.0000) =      5.880 s/op
     p(99.9000) =      5.880 s/op
     p(99.9900) =      5.880 s/op
     p(99.9990) =      5.880 s/op
     p(99.9999) =      5.880 s/op
    p(100.0000) =      5.880 s/op

Secondary result "jvbench.pathfinder.PathfinderBenchmark.serial:·gc.alloc.rate":
  0.574 ±(99.9%) 0.217 MB/sec [Average]
  (min, avg, max) = (0.302, 0.574, 0.645), stdev = 0.143
  CI (99.9%): [0.358, 0.791] (assumes normal distribution)

Secondary result "jvbench.pathfinder.PathfinderBenchmark.serial:·gc.alloc.rate.norm":
  2006107.200 ±(99.9%) 12759.300 B/op [Average]
  (min, avg, max) = (2002104.000, 2006107.200, 2022120.000), stdev = 8439.487
  CI (99.9%): [1993347.900, 2018866.500] (assumes normal distribution)

Secondary result "jvbench.pathfinder.PathfinderBenchmark.serial:·gc.count":
  ≈ 0 counts


# Run complete. Total time: 00:04:25

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            Mode  Cnt         Score       Error   Units
PathfinderBenchmark.autoVec                            ss   10         3.118 ±     2.013    s/op
PathfinderBenchmark.autoVec:·gc.alloc.rate             ss   10         0.574 ±     0.207  MB/sec
PathfinderBenchmark.autoVec:·gc.alloc.rate.norm        ss   10   2006107.200 ± 12759.300    B/op
PathfinderBenchmark.autoVec:·gc.count                  ss   10           ≈ 0              counts
PathfinderBenchmark.explicitVec                        ss   10         1.006 ±     0.005    s/op
PathfinderBenchmark.explicitVec:·gc.alloc.rate         ss   10        13.921 ±     0.046  MB/sec
PathfinderBenchmark.explicitVec:·gc.alloc.rate.norm    ss   10  21998104.000 ±     0.001    B/op
PathfinderBenchmark.explicitVec:·gc.count              ss   10           ≈ 0              counts
PathfinderBenchmark.fullVec                            ss   10         1.025 ±     0.040    s/op
PathfinderBenchmark.fullVec:·gc.alloc.rate             ss   10        13.752 ±     0.349  MB/sec
PathfinderBenchmark.fullVec:·gc.alloc.rate.norm        ss   10  21998104.000 ±     0.001    B/op
PathfinderBenchmark.fullVec:·gc.count                  ss   10           ≈ 0              counts
PathfinderBenchmark.serial                             ss   10         3.152 ±     2.167    s/op
PathfinderBenchmark.serial:·gc.alloc.rate              ss   10         0.574 ±     0.217  MB/sec
PathfinderBenchmark.serial:·gc.alloc.rate.norm         ss   10   2006107.200 ± 12759.300    B/op
PathfinderBenchmark.serial:·gc.count                   ss   10           ≈ 0              counts

Benchmark result is saved to /artifact/output/short/data/jdk19/dockerimg/benchmark/performance/2024-05-16_06:35:58/pathfinder/PathfinderBenchmark.csv

Individual compiler times (for compiled methods only)
------------------------------------------------

  C1 {speed: 468603.566 bytes/s; standard:  0.222 s, 103885 bytes, 1242 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 2123040 bytes; nmethods_code_size: 1498976 bytes}
  C2 {speed: 74420.562 bytes/s; standard:  0.192 s, 14556 bytes, 113 methods; osr:  0.006 s, 157 bytes, 3 methods; nmethods_size: 126480 bytes; nmethods_code_size: 79904 bytes}

Individual compilation Tier times (for compiled methods only)
------------------------------------------------

  Tier1 {speed: 140516.840 bytes/s; standard:  0.005 s, 720 bytes, 152 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 36632 bytes; nmethods_code_size: 23104 bytes}
  Tier2 {speed:  0.000 bytes/s; standard:  0.000 s, 0 bytes, 0 methods; osr:  0.000 s, 0 bytes, 0 methods; nmethods_size: 0 bytes; nmethods_code_size: 0 bytes}
  Tier3 {speed: 476316.732 bytes/s; standard:  0.217 s, 103165 bytes, 1090 methods; osr:  0.001 s, 649 bytes, 1 methods; nmethods_size: 2086408 bytes; nmethods_code_size: 1475872 bytes}
  Tier4 {speed: 74420.562 bytes/s; standard:  0.192 s, 14556 bytes, 113 methods; osr:  0.006 s, 157 bytes, 3 methods; nmethods_size: 126480 bytes; nmethods_code_size: 79904 bytes}

Accumulated compiler times
----------------------------------------------------------
  Total compilation time   :   0.421 s
    Standard compilation   :   0.414 s, Average : 0.000 s
    Bailed out compilation :   0.000 s, Average : 0.000 s
    On stack replacement   :   0.007 s, Average : 0.002 s
    Invalidated            :   0.000 s, Average : 0.000 s

    C1 Compile Time:        0.220 s
       Setup time:            0.001 s
       Build HIR:             0.087 s
         Parse:                 0.066 s
         Optimize blocks:       0.000 s
         GVN:                   0.008 s
         Null checks elim:      0.004 s
         Range checks elim:     0.001 s
         Other:                 0.007 s
       Emit LIR:              0.081 s
         LIR Gen:               0.016 s
         Linear Scan:           0.064 s
         Other:                 0.001 s
       Code Emission:         0.024 s
       Code Installation:     0.023 s
       Other:                 0.005 s

    C2 Compile Time:        0.199 s
       Parse:                 0.032 s
       Optimize:              0.066 s
         Escape Analysis:       0.001 s
           Conn Graph:            0.001 s
           Macro Eliminate:       0.000 s
         GVN 1:                 0.007 s
         Incremental Inline:    0.000 s
           IdealLoop:             0.000 s
          (IGVN:                  0.000 s)
          (Inline:                0.000 s)
          (Prune Useless:         0.000 s)
           Other:                 0.000 s
         Vector:                0.000 s
           Box elimination:     0.000 s
             IGVN:              0.000 s
             Prune Useless:     0.000 s
         Renumber Live:         0.000 s
         IdealLoop:             0.043 s
         IdealLoop Verify:      0.000 s
         Cond Const Prop:       0.001 s
         GVN 2:                 0.001 s
         Macro Expand:          0.003 s
         Barrier Expand:        0.000 s
         Graph Reshape:         0.002 s
         Other:                 0.008 s
       Matcher:                    0.016 s
         Post Selection Cleanup:   0.001 s
       Scheduler:                  0.019 s
       Regalloc:              0.068 s
         Ctor Chaitin:          0.000 s
         Build IFG (virt):      0.001 s
         Build IFG (phys):      0.014 s
         Compute Liveness:      0.024 s
         Regalloc Split:        0.008 s
         Postalloc Copy Rem:    0.010 s
         Merge multidefs:       0.002 s
         Fixup Spills:          0.000 s
         Compact:               0.000 s
         Coalesce 1:            0.003 s
         Coalesce 2:            0.001 s
         Coalesce 3:            0.001 s
         Cache LRG:             0.000 s
         Simplify:              0.002 s
         Select:                0.003 s
       Block Ordering:        0.001 s
       Peephole:              0.000 s
       Code Emission:           0.011 s
         Insn Scheduling:       0.000 s
         Shorten branches:      0.002 s
         Build OOP maps:        0.003 s
         Fill buffer:           0.003 s
         Code Installation:     0.001 s
         Other:                 0.001 s

  Total compiled methods    :     1359 methods
    Standard compilation    :     1355 methods
    On stack replacement    :        4 methods
  Total compiled bytecodes  :   119247 bytes
    Standard compilation    :   118441 bytes
    On stack replacement    :      806 bytes
  Average compilation speed :   283397 bytes/s

  nmethod code size         :  2249520 bytes
  nmethod total size        :  1578880 bytes
